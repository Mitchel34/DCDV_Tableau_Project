<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1211.0901                               -->
<workbook original-version='18.1' source-build='2024.3.2 (20243.24.1211.0901)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='SofwareDeveloperIncomeExpensesperUSACity' inline='true' name='federated.0z28jet0nrandf180jljh1w88sv6' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='SofwareDeveloperIncomeExpensesperUSACity' name='textscan.07eh4od0jnvryt0zky1z3070m946'>
            <connection class='textscan' cleaning='yes' compat='no' csvFile='/Users/mitchelcarson/Desktop/DataCollectionVisualization/DCDV_Tableau_Project/SofwareDeveloperIncomeExpensesperUSACity.csv' dataRefreshTime='' directory='/Users/mitchelcarson/Desktop/DataCollectionVisualization/DCDV_Tableau_Project' filename='Updated_Dataset.csv' interpretationMode='8' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.07eh4od0jnvryt0zky1z3070m946' name='Updated_Dataset.csv' table='[Updated_Dataset#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='Unnamed: 0' ordinal='0' />
            <column datatype='string' name='Metro' ordinal='1' />
            <column datatype='real' name='Mean Software Developer Salary (adjusted)' ordinal='2' />
            <column datatype='real' name='Mean Software Developer Salary (unadjusted)' ordinal='3' />
            <column datatype='real' name='Mean Unadjusted Salary (all occupations)' ordinal='4' />
            <column datatype='real' name='Number of Software Developer Jobs' ordinal='5' />
            <column datatype='real' name='Median Home Price' ordinal='6' />
            <column datatype='string' name='City' ordinal='7' />
            <column datatype='real' name='Cost of Living avg' ordinal='8' />
            <column datatype='real' name='Rent avg' ordinal='9' />
            <column datatype='real' name='Cost of Living Plus Rent avg' ordinal='10' />
            <column datatype='real' name='Local Purchasing Power avg' ordinal='11' />
            <column datatype='string' name='city_no_state' ordinal='12' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Updated_Dataset.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unnamed: 0</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Unnamed: 0]</local-name>
            <parent-name>[Updated_Dataset.csv]</parent-name>
            <remote-alias>Unnamed: 0</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Updated_Dataset.csv_1F45885DFF75465593F1277492FF33F1]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Metro</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Metro]</local-name>
            <parent-name>[Updated_Dataset.csv]</parent-name>
            <remote-alias>Metro</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Updated_Dataset.csv_1F45885DFF75465593F1277492FF33F1]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mean Software Developer Salary (adjusted)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Mean Software Developer Salary (adjusted)]</local-name>
            <parent-name>[Updated_Dataset.csv]</parent-name>
            <remote-alias>Mean Software Developer Salary (adjusted)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Updated_Dataset.csv_1F45885DFF75465593F1277492FF33F1]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mean Software Developer Salary (unadjusted)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Mean Software Developer Salary (unadjusted)]</local-name>
            <parent-name>[Updated_Dataset.csv]</parent-name>
            <remote-alias>Mean Software Developer Salary (unadjusted)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Updated_Dataset.csv_1F45885DFF75465593F1277492FF33F1]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mean Unadjusted Salary (all occupations)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Mean Unadjusted Salary (all occupations)]</local-name>
            <parent-name>[Updated_Dataset.csv]</parent-name>
            <remote-alias>Mean Unadjusted Salary (all occupations)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Updated_Dataset.csv_1F45885DFF75465593F1277492FF33F1]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Software Developer Jobs</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Number of Software Developer Jobs]</local-name>
            <parent-name>[Updated_Dataset.csv]</parent-name>
            <remote-alias>Number of Software Developer Jobs</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Updated_Dataset.csv_1F45885DFF75465593F1277492FF33F1]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Median Home Price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Median Home Price]</local-name>
            <parent-name>[Updated_Dataset.csv]</parent-name>
            <remote-alias>Median Home Price</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Updated_Dataset.csv_1F45885DFF75465593F1277492FF33F1]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Updated_Dataset.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Updated_Dataset.csv_1F45885DFF75465593F1277492FF33F1]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cost of Living avg</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Cost of Living avg]</local-name>
            <parent-name>[Updated_Dataset.csv]</parent-name>
            <remote-alias>Cost of Living avg</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Updated_Dataset.csv_1F45885DFF75465593F1277492FF33F1]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rent avg</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Rent avg]</local-name>
            <parent-name>[Updated_Dataset.csv]</parent-name>
            <remote-alias>Rent avg</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Updated_Dataset.csv_1F45885DFF75465593F1277492FF33F1]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cost of Living Plus Rent avg</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Cost of Living Plus Rent avg]</local-name>
            <parent-name>[Updated_Dataset.csv]</parent-name>
            <remote-alias>Cost of Living Plus Rent avg</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Updated_Dataset.csv_1F45885DFF75465593F1277492FF33F1]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Local Purchasing Power avg</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Local Purchasing Power avg]</local-name>
            <parent-name>[Updated_Dataset.csv]</parent-name>
            <remote-alias>Local Purchasing Power avg</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Updated_Dataset.csv_1F45885DFF75465593F1277492FF33F1]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city_no_state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city_no_state]</local-name>
            <parent-name>[Updated_Dataset.csv]</parent-name>
            <remote-alias>city_no_state</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Updated_Dataset.csv_1F45885DFF75465593F1277492FF33F1]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Home Buying Power' datatype='real' name='[Calculation_2940780235170861063]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='[Mean Software Developer Salary (unadjusted)]/[Median Home Price]' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <aliases>
          <alias key='&quot;Akron, OH&quot;' value='Akron' />
        </aliases>
      </column>
      <column datatype='real' name='[Cost of Living Plus Rent avg]' role='measure' type='quantitative' />
      <column datatype='real' name='[Mean Software Developer Salary (adjusted)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Mean Software Developer Salary (unadjusted)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Median Home Price]' role='measure' type='quantitative' />
      <column datatype='real' name='[Number of Software Developer Jobs]' role='measure' type='quantitative' />
      <column datatype='real' name='[Rent avg]' role='measure' type='quantitative' />
      <column caption='Updated_Dataset.csv' datatype='table' name='[__tableau_internal_object_id__].[Updated_Dataset.csv_1F45885DFF75465593F1277492FF33F1]' role='measure' type='quantitative' />
      <column caption='City No State' datatype='string' name='[city_no_state]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <semantic-values semantic-role='[Geographical].[Longitude]'>
          <semantic-value key='&quot;Akron&quot;' value='-81.519000000000005' />
          <semantic-value key='&quot;Albany&quot;' value='-73.756200000000007' />
          <semantic-value key='&quot;Atlanta&quot;' value='-84.388000000000005' />
          <semantic-value key='&quot;Austin&quot;' value='-97.743099999999998' />
          <semantic-value key='&quot;Baltimore&quot;' value='-76.612200000000001' />
          <semantic-value key='&quot;Birmingham&quot;' value='-86.810400000000001' />
          <semantic-value key='&quot;Boston&quot;' value='-71.058899999999994' />
          <semantic-value key='&quot;Buffalo&quot;' value='-78.878399999999999' />
          <semantic-value key='&quot;Charleston&quot;' value='-79.931100000000001' />
          <semantic-value key='&quot;Charlotte&quot;' value='-80.843100000000007' />
          <semantic-value key='&quot;Cincinnati&quot;' value='-84.512' />
          <semantic-value key='&quot;Cleveland&quot;' value='-81.694400000000002' />
          <semantic-value key='&quot;Columbus&quot;' value='-82.998800000000003' />
          <semantic-value key='&quot;Dallas&quot;' value='-96.796999999999997' />
          <semantic-value key='&quot;Dayton&quot;' value='-84.191599999999994' />
          <semantic-value key='&quot;Denver&quot;' value='-104.9903' />
          <semantic-value key='&quot;Des Moines&quot;' value='-93.625' />
          <semantic-value key='&quot;Detroit&quot;' value='-83.0458' />
          <semantic-value key='&quot;Durham&quot;' value='-78.898600000000002' />
          <semantic-value key='&quot;Eugene&quot;' value='-123.0868' />
          <semantic-value key='&quot;Greensboro&quot;' value='-79.792000000000002' />
          <semantic-value key='&quot;Houston&quot;' value='-95.369799999999998' />
          <semantic-value key='&quot;Jacksonville&quot;' value='-81.655699999999996' />
          <semantic-value key='&quot;Kansas City&quot;' value='-94.578599999999994' />
          <semantic-value key='&quot;Las Vegas&quot;' value='-115.13979999999999' />
          <semantic-value key='&quot;Lexington&quot;' value='-84.503699999999995' />
          <semantic-value key='&quot;Little Rock&quot;' value='-92.289599999999993' />
          <semantic-value key='&quot;Long Beach&quot;' value='-118.19370000000001' />
          <semantic-value key='&quot;Louisville&quot;' value='-85.758499999999998' />
          <semantic-value key='&quot;Madison&quot;' value='-89.401200000000003' />
          <semantic-value key='&quot;Memphis&quot;' value='-90.049000000000007' />
          <semantic-value key='&quot;Mesa&quot;' value='-111.83150000000001' />
          <semantic-value key='&quot;Miami&quot;' value='-80.191800000000001' />
          <semantic-value key='&quot;Minneapolis&quot;' value='-93.265000000000001' />
          <semantic-value key='&quot;Nashville&quot;' value='-86.781599999999997' />
          <semantic-value key='&quot;Oakland&quot;' value='-122.2711' />
          <semantic-value key='&quot;Omaha&quot;' value='-95.9345' />
          <semantic-value key='&quot;Orlando&quot;' value='-81.379199999999997' />
          <semantic-value key='&quot;Philadelphia&quot;' value='-75.165199999999999' />
          <semantic-value key='&quot;Phoenix&quot;' value='-112.074' />
          <semantic-value key='&quot;Portland&quot;' value='-122.675' />
          <semantic-value key='&quot;Raleigh&quot;' value='-78.638199999999998' />
          <semantic-value key='&quot;Richmond&quot;' value='-77.436000000000007' />
          <semantic-value key='&quot;Rochester&quot;' value='-77.608800000000002' />
          <semantic-value key='&quot;Sacramento&quot;' value='-121.4944' />
          <semantic-value key='&quot;San Antonio&quot;' value='-98.493600000000001' />
          <semantic-value key='&quot;San Diego&quot;' value='-117.1611' />
          <semantic-value key='&quot;San Francisco&quot;' value='-122.4194' />
          <semantic-value key='&quot;San Jose&quot;' value='-121.88630000000001' />
          <semantic-value key='&quot;Santa Clara&quot;' value='-121.9552' />
          <semantic-value key='&quot;Spokane&quot;' value='-117.426' />
          <semantic-value key='&quot;Syracuse&quot;' value='-76.147400000000005' />
          <semantic-value key='&quot;Tampa&quot;' value='-82.4572' />
          <semantic-value key='&quot;Washington&quot;' value='-77.0364' />
        </semantic-values>
        <semantic-values semantic-role='[Geographical].[Latitude]'>
          <semantic-value key='&quot;Akron&quot;' value='41.081400000000002' />
          <semantic-value key='&quot;Albany&quot;' value='42.6526' />
          <semantic-value key='&quot;Atlanta&quot;' value='33.749000000000002' />
          <semantic-value key='&quot;Austin&quot;' value='30.267199999999999' />
          <semantic-value key='&quot;Baltimore&quot;' value='39.290399999999998' />
          <semantic-value key='&quot;Birmingham&quot;' value='33.518599999999999' />
          <semantic-value key='&quot;Boston&quot;' value='42.360100000000003' />
          <semantic-value key='&quot;Buffalo&quot;' value='42.886400000000002' />
          <semantic-value key='&quot;Charleston&quot;' value='32.776499999999999' />
          <semantic-value key='&quot;Charlotte&quot;' value='35.2271' />
          <semantic-value key='&quot;Cincinnati&quot;' value='39.103099999999998' />
          <semantic-value key='&quot;Cleveland&quot;' value='41.499299999999998' />
          <semantic-value key='&quot;Columbus&quot;' value='39.961199999999998' />
          <semantic-value key='&quot;Dallas&quot;' value='32.776699999999998' />
          <semantic-value key='&quot;Dayton&quot;' value='39.758899999999997' />
          <semantic-value key='&quot;Denver&quot;' value='39.739199999999997' />
          <semantic-value key='&quot;Des Moines&quot;' value='41.586799999999997' />
          <semantic-value key='&quot;Detroit&quot;' value='42.331400000000002' />
          <semantic-value key='&quot;Durham&quot;' value='35.994' />
          <semantic-value key='&quot;Eugene&quot;' value='44.052100000000003' />
          <semantic-value key='&quot;Greensboro&quot;' value='36.072600000000001' />
          <semantic-value key='&quot;Houston&quot;' value='29.760400000000001' />
          <semantic-value key='&quot;Jacksonville&quot;' value='30.3322' />
          <semantic-value key='&quot;Kansas City&quot;' value='39.099699999999999' />
          <semantic-value key='&quot;Las Vegas&quot;' value='36.169899999999998' />
          <semantic-value key='&quot;Lexington&quot;' value='38.040599999999998' />
          <semantic-value key='&quot;Little Rock&quot;' value='34.746499999999997' />
          <semantic-value key='&quot;Long Beach&quot;' value='33.770099999999999' />
          <semantic-value key='&quot;Louisville&quot;' value='38.252699999999997' />
          <semantic-value key='&quot;Madison&quot;' value='43.073099999999997' />
          <semantic-value key='&quot;Memphis&quot;' value='35.149500000000003' />
          <semantic-value key='&quot;Mesa&quot;' value='33.415199999999999' />
          <semantic-value key='&quot;Miami&quot;' value='25.761700000000001' />
          <semantic-value key='&quot;Minneapolis&quot;' value='44.977800000000002' />
          <semantic-value key='&quot;Nashville&quot;' value='36.162700000000001' />
          <semantic-value key='&quot;Oakland&quot;' value='37.804400000000001' />
          <semantic-value key='&quot;Omaha&quot;' value='41.256500000000003' />
          <semantic-value key='&quot;Orlando&quot;' value='28.5383' />
          <semantic-value key='&quot;Philadelphia&quot;' value='39.952599999999997' />
          <semantic-value key='&quot;Phoenix&quot;' value='33.448399999999999' />
          <semantic-value key='&quot;Portland&quot;' value='45.505099999999999' />
          <semantic-value key='&quot;Raleigh&quot;' value='35.779600000000002' />
          <semantic-value key='&quot;Richmond&quot;' value='37.540700000000001' />
          <semantic-value key='&quot;Rochester&quot;' value='43.156599999999997' />
          <semantic-value key='&quot;Sacramento&quot;' value='38.581600000000002' />
          <semantic-value key='&quot;San Antonio&quot;' value='29.424099999999999' />
          <semantic-value key='&quot;San Diego&quot;' value='32.715699999999998' />
          <semantic-value key='&quot;San Francisco&quot;' value='37.774900000000002' />
          <semantic-value key='&quot;San Jose&quot;' value='37.338200000000001' />
          <semantic-value key='&quot;Santa Clara&quot;' value='37.354100000000003' />
          <semantic-value key='&quot;Spokane&quot;' value='47.658799999999999' />
          <semantic-value key='&quot;Syracuse&quot;' value='43.048099999999998' />
          <semantic-value key='&quot;Tampa&quot;' value='27.950600000000001' />
          <semantic-value key='&quot;Washington&quot;' value='38.895099999999999' />
        </semantic-values>
      </column>
      <column-instance column='[Mean Software Developer Salary (adjusted)]' derivation='Avg' name='[avg:Mean Software Developer Salary (adjusted):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Mean Software Developer Salary (adjusted)]' derivation='None' name='[none:Mean Software Developer Salary (adjusted):ok]' pivot='key' type='ordinal' />
      <column-instance column='[Mean Software Developer Salary (unadjusted)]' derivation='None' name='[none:Mean Software Developer Salary (unadjusted):ok]' pivot='key' type='ordinal' />
      <column-instance column='[Median Home Price]' derivation='None' name='[none:Median Home Price:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Number of Software Developer Jobs]' derivation='None' name='[none:Number of Software Developer Jobs:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_2940780235170861063]' derivation='Sum' name='[rank:sum:Calculation_2940780235170861063:ok]' pivot='key' type='ordinal'>
        <table-calc ordering-type='Rows' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Mean Software Developer Salary (adjusted)]' derivation='Sum' name='[rank:sum:Mean Software Developer Salary (adjusted):qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Calculation_2940780235170861063]' derivation='Sum' name='[sum:Calculation_2940780235170861063:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Cost of Living Plus Rent avg]' derivation='Sum' name='[sum:Cost of Living Plus Rent avg:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Mean Software Developer Salary (adjusted)]' derivation='Sum' name='[sum:Mean Software Developer Salary (adjusted):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Median Home Price]' derivation='Sum' name='[sum:Median Home Price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Software Developer Jobs]' derivation='Sum' name='[sum:Number of Software Developer Jobs:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Rent avg]' derivation='Sum' name='[sum:Rent avg:qk]' pivot='key' type='quantitative' />
      <group caption='Action (City No State)' hidden='true' name='[Action (City No State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[city_no_state]' />
        </groupfilter>
      </group>
      <group caption='Action (City)' hidden='true' name='[Action (City)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[City]' />
        </groupfilter>
      </group>
      <group caption='Action (City,Mean Software Developer Salary (adjusted),Mean Software Developer Salary (unadjusted),Median Home Price,Number of Software Developer Jobs)' hidden='true' name='[Action (City,Mean Software Developer Salary (adjusted),Mean Software Developer Salary (unadjusted),Median Home Price,Number of Software Developer Jobs)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[City]' />
          <groupfilter function='level-members' level='[none:Mean Software Developer Salary (adjusted):ok]' />
          <groupfilter function='level-members' level='[none:Mean Software Developer Salary (unadjusted):ok]' />
          <groupfilter function='level-members' level='[none:Median Home Price:ok]' />
          <groupfilter function='level-members' level='[none:Number of Software Developer Jobs:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (City,Mean Software Developer Salary (adjusted),Mean Software Developer Salary (unadjusted),Median Home Price,Number of Software Developer Jobs,City No State)' hidden='true' name='[Action (City,Mean Software Developer Salary (adjusted),Mean Software Developer Salary (unadjusted),Median Home Price,Number of Software Developer Jobs,City No State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[City]' />
          <groupfilter function='level-members' level='[none:Mean Software Developer Salary (adjusted):ok]' />
          <groupfilter function='level-members' level='[none:Mean Software Developer Salary (unadjusted):ok]' />
          <groupfilter function='level-members' level='[none:Median Home Price:ok]' />
          <groupfilter function='level-members' level='[none:Number of Software Developer Jobs:ok]' />
          <groupfilter function='level-members' level='[city_no_state]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0z28jet0nrandf180jljh1w88sv6].[avg:Mean Software Developer Salary (adjusted):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0z28jet0nrandf180jljh1w88sv6].[rank:avg:Mean Software Developer Salary (adjusted):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0z28jet0nrandf180jljh1w88sv6].[rank:sum:Mean Software Developer Salary (adjusted):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Mean Software Developer Salary (adjusted):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Number of Software Developer Jobs:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0z28jet0nrandf180jljh1w88sv6].[rank:sum:Calculation_2940780235170861063:ok]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Calculation_2940780235170861063:ok]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Cost of Living Plus Rent avg:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Median Home Price:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Rent avg:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='F1' />
        <field-sort-custom-order field='Metro' />
        <field-sort-custom-order field='Mean Software Developer Salary (adjusted)' />
        <field-sort-custom-order field='Mean Software Developer Salary (unadjusted)' />
        <field-sort-custom-order field='Mean Unadjusted Salary (all occupations)' />
        <field-sort-custom-order field='Number of Software Developer Jobs' />
        <field-sort-custom-order field='Median Home Price' />
        <field-sort-custom-order field='City' />
        <field-sort-custom-order field='Cost of Living avg' />
        <field-sort-custom-order field='Rent avg' />
        <field-sort-custom-order field='Cost of Living Plus Rent avg' />
        <field-sort-custom-order field='Local Purchasing Power avg' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field='Calculation_2940780235170689029' />
        <field-sort-custom-order field='Calculation_2940780235170861063' />
        <field-sort-custom-order field='Bang4Buck (copy)_2940780235191857160' />
        <field-sort-custom-order field='Calculation_2940780235170766854' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <object-graph>
        <objects>
          <object caption='Updated_Dataset.csv' id='Updated_Dataset.csv_1F45885DFF75465593F1277492FF33F1'>
            <properties context=''>
              <relation connection='textscan.07eh4od0jnvryt0zky1z3070m946' name='Updated_Dataset.csv' table='[Updated_Dataset#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='Unnamed: 0' ordinal='0' />
                  <column datatype='string' name='Metro' ordinal='1' />
                  <column datatype='real' name='Mean Software Developer Salary (adjusted)' ordinal='2' />
                  <column datatype='real' name='Mean Software Developer Salary (unadjusted)' ordinal='3' />
                  <column datatype='real' name='Mean Unadjusted Salary (all occupations)' ordinal='4' />
                  <column datatype='real' name='Number of Software Developer Jobs' ordinal='5' />
                  <column datatype='real' name='Median Home Price' ordinal='6' />
                  <column datatype='string' name='City' ordinal='7' />
                  <column datatype='real' name='Cost of Living avg' ordinal='8' />
                  <column datatype='real' name='Rent avg' ordinal='9' />
                  <column datatype='real' name='Cost of Living Plus Rent avg' ordinal='10' />
                  <column datatype='real' name='Local Purchasing Power avg' ordinal='11' />
                  <column datatype='string' name='city_no_state' ordinal='12' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.0z28jet0nrandf180jljh1w88sv6'>
      <datasources>
        <datasource caption='SofwareDeveloperIncomeExpensesperUSACity' name='federated.0z28jet0nrandf180jljh1w88sv6' />
      </datasources>
      <datasource-dependencies datasource='federated.0z28jet0nrandf180jljh1w88sv6'>
        <column datatype='real' name='[Mean Software Developer Salary (adjusted)]' role='measure' type='quantitative' />
        <column datatype='real' name='[Median Home Price]' role='measure' type='quantitative' />
        <column datatype='real' name='[Number of Software Developer Jobs]' role='measure' type='quantitative' />
        <column datatype='real' name='[Rent avg]' role='measure' type='quantitative' />
        <column caption='City No State' datatype='string' name='[city_no_state]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
          <semantic-values semantic-role='[Geographical].[Longitude]'>
            <semantic-value key='&quot;Akron&quot;' value='-81.519000000000005' />
            <semantic-value key='&quot;Albany&quot;' value='-73.756200000000007' />
            <semantic-value key='&quot;Atlanta&quot;' value='-84.388000000000005' />
            <semantic-value key='&quot;Austin&quot;' value='-97.743099999999998' />
            <semantic-value key='&quot;Baltimore&quot;' value='-76.612200000000001' />
            <semantic-value key='&quot;Birmingham&quot;' value='-86.810400000000001' />
            <semantic-value key='&quot;Boston&quot;' value='-71.058899999999994' />
            <semantic-value key='&quot;Buffalo&quot;' value='-78.878399999999999' />
            <semantic-value key='&quot;Charleston&quot;' value='-79.931100000000001' />
            <semantic-value key='&quot;Charlotte&quot;' value='-80.843100000000007' />
            <semantic-value key='&quot;Cincinnati&quot;' value='-84.512' />
            <semantic-value key='&quot;Cleveland&quot;' value='-81.694400000000002' />
            <semantic-value key='&quot;Columbus&quot;' value='-82.998800000000003' />
            <semantic-value key='&quot;Dallas&quot;' value='-96.796999999999997' />
            <semantic-value key='&quot;Dayton&quot;' value='-84.191599999999994' />
            <semantic-value key='&quot;Denver&quot;' value='-104.9903' />
            <semantic-value key='&quot;Des Moines&quot;' value='-93.625' />
            <semantic-value key='&quot;Detroit&quot;' value='-83.0458' />
            <semantic-value key='&quot;Durham&quot;' value='-78.898600000000002' />
            <semantic-value key='&quot;Eugene&quot;' value='-123.0868' />
            <semantic-value key='&quot;Greensboro&quot;' value='-79.792000000000002' />
            <semantic-value key='&quot;Houston&quot;' value='-95.369799999999998' />
            <semantic-value key='&quot;Jacksonville&quot;' value='-81.655699999999996' />
            <semantic-value key='&quot;Kansas City&quot;' value='-94.578599999999994' />
            <semantic-value key='&quot;Las Vegas&quot;' value='-115.13979999999999' />
            <semantic-value key='&quot;Lexington&quot;' value='-84.503699999999995' />
            <semantic-value key='&quot;Little Rock&quot;' value='-92.289599999999993' />
            <semantic-value key='&quot;Long Beach&quot;' value='-118.19370000000001' />
            <semantic-value key='&quot;Louisville&quot;' value='-85.758499999999998' />
            <semantic-value key='&quot;Madison&quot;' value='-89.401200000000003' />
            <semantic-value key='&quot;Memphis&quot;' value='-90.049000000000007' />
            <semantic-value key='&quot;Mesa&quot;' value='-111.83150000000001' />
            <semantic-value key='&quot;Miami&quot;' value='-80.191800000000001' />
            <semantic-value key='&quot;Minneapolis&quot;' value='-93.265000000000001' />
            <semantic-value key='&quot;Nashville&quot;' value='-86.781599999999997' />
            <semantic-value key='&quot;Oakland&quot;' value='-122.2711' />
            <semantic-value key='&quot;Omaha&quot;' value='-95.9345' />
            <semantic-value key='&quot;Orlando&quot;' value='-81.379199999999997' />
            <semantic-value key='&quot;Philadelphia&quot;' value='-75.165199999999999' />
            <semantic-value key='&quot;Phoenix&quot;' value='-112.074' />
            <semantic-value key='&quot;Portland&quot;' value='-122.675' />
            <semantic-value key='&quot;Raleigh&quot;' value='-78.638199999999998' />
            <semantic-value key='&quot;Richmond&quot;' value='-77.436000000000007' />
            <semantic-value key='&quot;Rochester&quot;' value='-77.608800000000002' />
            <semantic-value key='&quot;Sacramento&quot;' value='-121.4944' />
            <semantic-value key='&quot;San Antonio&quot;' value='-98.493600000000001' />
            <semantic-value key='&quot;San Diego&quot;' value='-117.1611' />
            <semantic-value key='&quot;San Francisco&quot;' value='-122.4194' />
            <semantic-value key='&quot;San Jose&quot;' value='-121.88630000000001' />
            <semantic-value key='&quot;Santa Clara&quot;' value='-121.9552' />
            <semantic-value key='&quot;Spokane&quot;' value='-117.426' />
            <semantic-value key='&quot;Syracuse&quot;' value='-76.147400000000005' />
            <semantic-value key='&quot;Tampa&quot;' value='-82.4572' />
            <semantic-value key='&quot;Washington&quot;' value='-77.0364' />
          </semantic-values>
          <semantic-values semantic-role='[Geographical].[Latitude]'>
            <semantic-value key='&quot;Akron&quot;' value='41.081400000000002' />
            <semantic-value key='&quot;Albany&quot;' value='42.6526' />
            <semantic-value key='&quot;Atlanta&quot;' value='33.749000000000002' />
            <semantic-value key='&quot;Austin&quot;' value='30.267199999999999' />
            <semantic-value key='&quot;Baltimore&quot;' value='39.290399999999998' />
            <semantic-value key='&quot;Birmingham&quot;' value='33.518599999999999' />
            <semantic-value key='&quot;Boston&quot;' value='42.360100000000003' />
            <semantic-value key='&quot;Buffalo&quot;' value='42.886400000000002' />
            <semantic-value key='&quot;Charleston&quot;' value='32.776499999999999' />
            <semantic-value key='&quot;Charlotte&quot;' value='35.2271' />
            <semantic-value key='&quot;Cincinnati&quot;' value='39.103099999999998' />
            <semantic-value key='&quot;Cleveland&quot;' value='41.499299999999998' />
            <semantic-value key='&quot;Columbus&quot;' value='39.961199999999998' />
            <semantic-value key='&quot;Dallas&quot;' value='32.776699999999998' />
            <semantic-value key='&quot;Dayton&quot;' value='39.758899999999997' />
            <semantic-value key='&quot;Denver&quot;' value='39.739199999999997' />
            <semantic-value key='&quot;Des Moines&quot;' value='41.586799999999997' />
            <semantic-value key='&quot;Detroit&quot;' value='42.331400000000002' />
            <semantic-value key='&quot;Durham&quot;' value='35.994' />
            <semantic-value key='&quot;Eugene&quot;' value='44.052100000000003' />
            <semantic-value key='&quot;Greensboro&quot;' value='36.072600000000001' />
            <semantic-value key='&quot;Houston&quot;' value='29.760400000000001' />
            <semantic-value key='&quot;Jacksonville&quot;' value='30.3322' />
            <semantic-value key='&quot;Kansas City&quot;' value='39.099699999999999' />
            <semantic-value key='&quot;Las Vegas&quot;' value='36.169899999999998' />
            <semantic-value key='&quot;Lexington&quot;' value='38.040599999999998' />
            <semantic-value key='&quot;Little Rock&quot;' value='34.746499999999997' />
            <semantic-value key='&quot;Long Beach&quot;' value='33.770099999999999' />
            <semantic-value key='&quot;Louisville&quot;' value='38.252699999999997' />
            <semantic-value key='&quot;Madison&quot;' value='43.073099999999997' />
            <semantic-value key='&quot;Memphis&quot;' value='35.149500000000003' />
            <semantic-value key='&quot;Mesa&quot;' value='33.415199999999999' />
            <semantic-value key='&quot;Miami&quot;' value='25.761700000000001' />
            <semantic-value key='&quot;Minneapolis&quot;' value='44.977800000000002' />
            <semantic-value key='&quot;Nashville&quot;' value='36.162700000000001' />
            <semantic-value key='&quot;Oakland&quot;' value='37.804400000000001' />
            <semantic-value key='&quot;Omaha&quot;' value='41.256500000000003' />
            <semantic-value key='&quot;Orlando&quot;' value='28.5383' />
            <semantic-value key='&quot;Philadelphia&quot;' value='39.952599999999997' />
            <semantic-value key='&quot;Phoenix&quot;' value='33.448399999999999' />
            <semantic-value key='&quot;Portland&quot;' value='45.505099999999999' />
            <semantic-value key='&quot;Raleigh&quot;' value='35.779600000000002' />
            <semantic-value key='&quot;Richmond&quot;' value='37.540700000000001' />
            <semantic-value key='&quot;Rochester&quot;' value='43.156599999999997' />
            <semantic-value key='&quot;Sacramento&quot;' value='38.581600000000002' />
            <semantic-value key='&quot;San Antonio&quot;' value='29.424099999999999' />
            <semantic-value key='&quot;San Diego&quot;' value='32.715699999999998' />
            <semantic-value key='&quot;San Francisco&quot;' value='37.774900000000002' />
            <semantic-value key='&quot;San Jose&quot;' value='37.338200000000001' />
            <semantic-value key='&quot;Santa Clara&quot;' value='37.354100000000003' />
            <semantic-value key='&quot;Spokane&quot;' value='47.658799999999999' />
            <semantic-value key='&quot;Syracuse&quot;' value='43.048099999999998' />
            <semantic-value key='&quot;Tampa&quot;' value='27.950600000000001' />
            <semantic-value key='&quot;Washington&quot;' value='38.895099999999999' />
          </semantic-values>
        </column>
        <column-instance column='[city_no_state]' derivation='None' name='[none:city_no_state:nk]' pivot='key' type='nominal' />
        <column-instance column='[Mean Software Developer Salary (adjusted)]' derivation='Sum' name='[sum:Mean Software Developer Salary (adjusted):qk]' pivot='key' type='quantitative' />
        <column-instance column='[Median Home Price]' derivation='Sum' name='[sum:Median Home Price:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Number of Software Developer Jobs]' derivation='Sum' name='[sum:Number of Software Developer Jobs:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Rent avg]' derivation='Sum' name='[sum:Rent avg:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.0z28jet0nrandf180jljh1w88sv6].[Action (City)]'>
        <groupfilter function='level-members' level='[City]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.0z28jet0nrandf180jljh1w88sv6].[none:city_no_state:nk]'>
        <groupfilter function='level-members' level='[none:city_no_state:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.0z28jet0nrandf180jljh1w88sv6].[none:city_no_state:nk]' />
      </filter>
      <filter class='quantitative' column='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Mean Software Developer Salary (adjusted):qk]' included-values='all' />
      <filter class='quantitative' column='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Median Home Price:qk]' included-values='in-range-or-null'>
        <min>124100.0</min>
        <max>1008074.0</max>
      </filter>
      <filter class='quantitative' column='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Number of Software Developer Jobs:qk]' included-values='all' />
      <filter class='quantitative' column='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Rent avg:qk]' included-values='all' />
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter1' name='[Action1_C2795BDC752846F9950068B26B7E5065]'>
      <activation type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' />
      <link caption='Filter1' delimiter=',' escape='\' expression='tsl:Dashboard%201?%5Bfederated.0z28jet0nrandf180jljh1w88sv6%5D.%5BCity%5D~s0=&lt;[federated.0z28jet0nrandf180jljh1w88sv6].[City]~na&gt;&amp;%5Bfederated.0z28jet0nrandf180jljh1w88sv6%5D.%5BMean%20Software%20Developer%20Salary%20%28adjusted%29%5D~s0=&lt;[federated.0z28jet0nrandf180jljh1w88sv6].[Mean Software Developer Salary (adjusted)]~na&gt;&amp;%5Bfederated.0z28jet0nrandf180jljh1w88sv6%5D.%5BMean%20Software%20Developer%20Salary%20%28unadjusted%29%5D~s0=&lt;[federated.0z28jet0nrandf180jljh1w88sv6].[Mean Software Developer Salary (unadjusted)]~na&gt;&amp;%5Bfederated.0z28jet0nrandf180jljh1w88sv6%5D.%5BMedian%20Home%20Price%5D~s0=&lt;[federated.0z28jet0nrandf180jljh1w88sv6].[Median Home Price]~na&gt;&amp;%5Bfederated.0z28jet0nrandf180jljh1w88sv6%5D.%5BNumber%20of%20Software%20Developer%20Jobs%5D~s0=&lt;[federated.0z28jet0nrandf180jljh1w88sv6].[Number of Software Developer Jobs]~na&gt;&amp;%5Bfederated.0z28jet0nrandf180jljh1w88sv6%5D.%5Bcity_no_state%5D~s0=&lt;[federated.0z28jet0nrandf180jljh1w88sv6].[city_no_state]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action2_65147A3B6A0B413F97349F6072C5B31A]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sheet 3' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action3_905E1EB5F8204F0BA3CC35646727312E]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action4_A9BC78D2BDB444A5AFF703B36F9B9B8C]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='SWE Home Buying Power (Salary, Median Home Price)' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <datasources>
      <datasource caption='SofwareDeveloperIncomeExpensesperUSACity' name='federated.0z28jet0nrandf180jljh1w88sv6' />
    </datasources>
    <datasource-dependencies datasource='federated.0z28jet0nrandf180jljh1w88sv6'>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <aliases>
          <alias key='&quot;Akron, OH&quot;' value='Akron' />
        </aliases>
      </column>
      <column datatype='real' name='[Mean Software Developer Salary (adjusted)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Mean Software Developer Salary (unadjusted)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Median Home Price]' role='measure' type='quantitative' />
      <column datatype='real' name='[Number of Software Developer Jobs]' role='measure' type='quantitative' />
      <column caption='City No State' datatype='string' name='[city_no_state]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <semantic-values semantic-role='[Geographical].[Longitude]'>
          <semantic-value key='&quot;Akron&quot;' value='-81.519000000000005' />
          <semantic-value key='&quot;Albany&quot;' value='-73.756200000000007' />
          <semantic-value key='&quot;Atlanta&quot;' value='-84.388000000000005' />
          <semantic-value key='&quot;Austin&quot;' value='-97.743099999999998' />
          <semantic-value key='&quot;Baltimore&quot;' value='-76.612200000000001' />
          <semantic-value key='&quot;Birmingham&quot;' value='-86.810400000000001' />
          <semantic-value key='&quot;Boston&quot;' value='-71.058899999999994' />
          <semantic-value key='&quot;Buffalo&quot;' value='-78.878399999999999' />
          <semantic-value key='&quot;Charleston&quot;' value='-79.931100000000001' />
          <semantic-value key='&quot;Charlotte&quot;' value='-80.843100000000007' />
          <semantic-value key='&quot;Cincinnati&quot;' value='-84.512' />
          <semantic-value key='&quot;Cleveland&quot;' value='-81.694400000000002' />
          <semantic-value key='&quot;Columbus&quot;' value='-82.998800000000003' />
          <semantic-value key='&quot;Dallas&quot;' value='-96.796999999999997' />
          <semantic-value key='&quot;Dayton&quot;' value='-84.191599999999994' />
          <semantic-value key='&quot;Denver&quot;' value='-104.9903' />
          <semantic-value key='&quot;Des Moines&quot;' value='-93.625' />
          <semantic-value key='&quot;Detroit&quot;' value='-83.0458' />
          <semantic-value key='&quot;Durham&quot;' value='-78.898600000000002' />
          <semantic-value key='&quot;Eugene&quot;' value='-123.0868' />
          <semantic-value key='&quot;Greensboro&quot;' value='-79.792000000000002' />
          <semantic-value key='&quot;Houston&quot;' value='-95.369799999999998' />
          <semantic-value key='&quot;Jacksonville&quot;' value='-81.655699999999996' />
          <semantic-value key='&quot;Kansas City&quot;' value='-94.578599999999994' />
          <semantic-value key='&quot;Las Vegas&quot;' value='-115.13979999999999' />
          <semantic-value key='&quot;Lexington&quot;' value='-84.503699999999995' />
          <semantic-value key='&quot;Little Rock&quot;' value='-92.289599999999993' />
          <semantic-value key='&quot;Long Beach&quot;' value='-118.19370000000001' />
          <semantic-value key='&quot;Louisville&quot;' value='-85.758499999999998' />
          <semantic-value key='&quot;Madison&quot;' value='-89.401200000000003' />
          <semantic-value key='&quot;Memphis&quot;' value='-90.049000000000007' />
          <semantic-value key='&quot;Mesa&quot;' value='-111.83150000000001' />
          <semantic-value key='&quot;Miami&quot;' value='-80.191800000000001' />
          <semantic-value key='&quot;Minneapolis&quot;' value='-93.265000000000001' />
          <semantic-value key='&quot;Nashville&quot;' value='-86.781599999999997' />
          <semantic-value key='&quot;Oakland&quot;' value='-122.2711' />
          <semantic-value key='&quot;Omaha&quot;' value='-95.9345' />
          <semantic-value key='&quot;Orlando&quot;' value='-81.379199999999997' />
          <semantic-value key='&quot;Philadelphia&quot;' value='-75.165199999999999' />
          <semantic-value key='&quot;Phoenix&quot;' value='-112.074' />
          <semantic-value key='&quot;Portland&quot;' value='-122.675' />
          <semantic-value key='&quot;Raleigh&quot;' value='-78.638199999999998' />
          <semantic-value key='&quot;Richmond&quot;' value='-77.436000000000007' />
          <semantic-value key='&quot;Rochester&quot;' value='-77.608800000000002' />
          <semantic-value key='&quot;Sacramento&quot;' value='-121.4944' />
          <semantic-value key='&quot;San Antonio&quot;' value='-98.493600000000001' />
          <semantic-value key='&quot;San Diego&quot;' value='-117.1611' />
          <semantic-value key='&quot;San Francisco&quot;' value='-122.4194' />
          <semantic-value key='&quot;San Jose&quot;' value='-121.88630000000001' />
          <semantic-value key='&quot;Santa Clara&quot;' value='-121.9552' />
          <semantic-value key='&quot;Spokane&quot;' value='-117.426' />
          <semantic-value key='&quot;Syracuse&quot;' value='-76.147400000000005' />
          <semantic-value key='&quot;Tampa&quot;' value='-82.4572' />
          <semantic-value key='&quot;Washington&quot;' value='-77.0364' />
        </semantic-values>
        <semantic-values semantic-role='[Geographical].[Latitude]'>
          <semantic-value key='&quot;Akron&quot;' value='41.081400000000002' />
          <semantic-value key='&quot;Albany&quot;' value='42.6526' />
          <semantic-value key='&quot;Atlanta&quot;' value='33.749000000000002' />
          <semantic-value key='&quot;Austin&quot;' value='30.267199999999999' />
          <semantic-value key='&quot;Baltimore&quot;' value='39.290399999999998' />
          <semantic-value key='&quot;Birmingham&quot;' value='33.518599999999999' />
          <semantic-value key='&quot;Boston&quot;' value='42.360100000000003' />
          <semantic-value key='&quot;Buffalo&quot;' value='42.886400000000002' />
          <semantic-value key='&quot;Charleston&quot;' value='32.776499999999999' />
          <semantic-value key='&quot;Charlotte&quot;' value='35.2271' />
          <semantic-value key='&quot;Cincinnati&quot;' value='39.103099999999998' />
          <semantic-value key='&quot;Cleveland&quot;' value='41.499299999999998' />
          <semantic-value key='&quot;Columbus&quot;' value='39.961199999999998' />
          <semantic-value key='&quot;Dallas&quot;' value='32.776699999999998' />
          <semantic-value key='&quot;Dayton&quot;' value='39.758899999999997' />
          <semantic-value key='&quot;Denver&quot;' value='39.739199999999997' />
          <semantic-value key='&quot;Des Moines&quot;' value='41.586799999999997' />
          <semantic-value key='&quot;Detroit&quot;' value='42.331400000000002' />
          <semantic-value key='&quot;Durham&quot;' value='35.994' />
          <semantic-value key='&quot;Eugene&quot;' value='44.052100000000003' />
          <semantic-value key='&quot;Greensboro&quot;' value='36.072600000000001' />
          <semantic-value key='&quot;Houston&quot;' value='29.760400000000001' />
          <semantic-value key='&quot;Jacksonville&quot;' value='30.3322' />
          <semantic-value key='&quot;Kansas City&quot;' value='39.099699999999999' />
          <semantic-value key='&quot;Las Vegas&quot;' value='36.169899999999998' />
          <semantic-value key='&quot;Lexington&quot;' value='38.040599999999998' />
          <semantic-value key='&quot;Little Rock&quot;' value='34.746499999999997' />
          <semantic-value key='&quot;Long Beach&quot;' value='33.770099999999999' />
          <semantic-value key='&quot;Louisville&quot;' value='38.252699999999997' />
          <semantic-value key='&quot;Madison&quot;' value='43.073099999999997' />
          <semantic-value key='&quot;Memphis&quot;' value='35.149500000000003' />
          <semantic-value key='&quot;Mesa&quot;' value='33.415199999999999' />
          <semantic-value key='&quot;Miami&quot;' value='25.761700000000001' />
          <semantic-value key='&quot;Minneapolis&quot;' value='44.977800000000002' />
          <semantic-value key='&quot;Nashville&quot;' value='36.162700000000001' />
          <semantic-value key='&quot;Oakland&quot;' value='37.804400000000001' />
          <semantic-value key='&quot;Omaha&quot;' value='41.256500000000003' />
          <semantic-value key='&quot;Orlando&quot;' value='28.5383' />
          <semantic-value key='&quot;Philadelphia&quot;' value='39.952599999999997' />
          <semantic-value key='&quot;Phoenix&quot;' value='33.448399999999999' />
          <semantic-value key='&quot;Portland&quot;' value='45.505099999999999' />
          <semantic-value key='&quot;Raleigh&quot;' value='35.779600000000002' />
          <semantic-value key='&quot;Richmond&quot;' value='37.540700000000001' />
          <semantic-value key='&quot;Rochester&quot;' value='43.156599999999997' />
          <semantic-value key='&quot;Sacramento&quot;' value='38.581600000000002' />
          <semantic-value key='&quot;San Antonio&quot;' value='29.424099999999999' />
          <semantic-value key='&quot;San Diego&quot;' value='32.715699999999998' />
          <semantic-value key='&quot;San Francisco&quot;' value='37.774900000000002' />
          <semantic-value key='&quot;San Jose&quot;' value='37.338200000000001' />
          <semantic-value key='&quot;Santa Clara&quot;' value='37.354100000000003' />
          <semantic-value key='&quot;Spokane&quot;' value='47.658799999999999' />
          <semantic-value key='&quot;Syracuse&quot;' value='43.048099999999998' />
          <semantic-value key='&quot;Tampa&quot;' value='27.950600000000001' />
          <semantic-value key='&quot;Washington&quot;' value='38.895099999999999' />
        </semantic-values>
      </column>
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='SofwareDeveloperIncomeExpensesperUSACity' name='federated.0z28jet0nrandf180jljh1w88sv6' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0z28jet0nrandf180jljh1w88sv6'>
            <column caption='Home Buying Power' datatype='real' name='[Calculation_2940780235170861063]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='[Mean Software Developer Salary (unadjusted)]/[Median Home Price]' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;Akron, OH&quot;' value='Akron' />
              </aliases>
            </column>
            <column datatype='real' name='[Mean Software Developer Salary (adjusted)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Mean Software Developer Salary (unadjusted)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Median Home Price]' role='measure' type='quantitative' />
            <column datatype='real' name='[Number of Software Developer Jobs]' role='measure' type='quantitative' />
            <column datatype='real' name='[Rent avg]' role='measure' type='quantitative' />
            <column caption='City No State' datatype='string' name='[city_no_state]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Akron&quot;' value='-81.519000000000005' />
                <semantic-value key='&quot;Albany&quot;' value='-73.756200000000007' />
                <semantic-value key='&quot;Atlanta&quot;' value='-84.388000000000005' />
                <semantic-value key='&quot;Austin&quot;' value='-97.743099999999998' />
                <semantic-value key='&quot;Baltimore&quot;' value='-76.612200000000001' />
                <semantic-value key='&quot;Birmingham&quot;' value='-86.810400000000001' />
                <semantic-value key='&quot;Boston&quot;' value='-71.058899999999994' />
                <semantic-value key='&quot;Buffalo&quot;' value='-78.878399999999999' />
                <semantic-value key='&quot;Charleston&quot;' value='-79.931100000000001' />
                <semantic-value key='&quot;Charlotte&quot;' value='-80.843100000000007' />
                <semantic-value key='&quot;Cincinnati&quot;' value='-84.512' />
                <semantic-value key='&quot;Cleveland&quot;' value='-81.694400000000002' />
                <semantic-value key='&quot;Columbus&quot;' value='-82.998800000000003' />
                <semantic-value key='&quot;Dallas&quot;' value='-96.796999999999997' />
                <semantic-value key='&quot;Dayton&quot;' value='-84.191599999999994' />
                <semantic-value key='&quot;Denver&quot;' value='-104.9903' />
                <semantic-value key='&quot;Des Moines&quot;' value='-93.625' />
                <semantic-value key='&quot;Detroit&quot;' value='-83.0458' />
                <semantic-value key='&quot;Durham&quot;' value='-78.898600000000002' />
                <semantic-value key='&quot;Eugene&quot;' value='-123.0868' />
                <semantic-value key='&quot;Greensboro&quot;' value='-79.792000000000002' />
                <semantic-value key='&quot;Houston&quot;' value='-95.369799999999998' />
                <semantic-value key='&quot;Jacksonville&quot;' value='-81.655699999999996' />
                <semantic-value key='&quot;Kansas City&quot;' value='-94.578599999999994' />
                <semantic-value key='&quot;Las Vegas&quot;' value='-115.13979999999999' />
                <semantic-value key='&quot;Lexington&quot;' value='-84.503699999999995' />
                <semantic-value key='&quot;Little Rock&quot;' value='-92.289599999999993' />
                <semantic-value key='&quot;Long Beach&quot;' value='-118.19370000000001' />
                <semantic-value key='&quot;Louisville&quot;' value='-85.758499999999998' />
                <semantic-value key='&quot;Madison&quot;' value='-89.401200000000003' />
                <semantic-value key='&quot;Memphis&quot;' value='-90.049000000000007' />
                <semantic-value key='&quot;Mesa&quot;' value='-111.83150000000001' />
                <semantic-value key='&quot;Miami&quot;' value='-80.191800000000001' />
                <semantic-value key='&quot;Minneapolis&quot;' value='-93.265000000000001' />
                <semantic-value key='&quot;Nashville&quot;' value='-86.781599999999997' />
                <semantic-value key='&quot;Oakland&quot;' value='-122.2711' />
                <semantic-value key='&quot;Omaha&quot;' value='-95.9345' />
                <semantic-value key='&quot;Orlando&quot;' value='-81.379199999999997' />
                <semantic-value key='&quot;Philadelphia&quot;' value='-75.165199999999999' />
                <semantic-value key='&quot;Phoenix&quot;' value='-112.074' />
                <semantic-value key='&quot;Portland&quot;' value='-122.675' />
                <semantic-value key='&quot;Raleigh&quot;' value='-78.638199999999998' />
                <semantic-value key='&quot;Richmond&quot;' value='-77.436000000000007' />
                <semantic-value key='&quot;Rochester&quot;' value='-77.608800000000002' />
                <semantic-value key='&quot;Sacramento&quot;' value='-121.4944' />
                <semantic-value key='&quot;San Antonio&quot;' value='-98.493600000000001' />
                <semantic-value key='&quot;San Diego&quot;' value='-117.1611' />
                <semantic-value key='&quot;San Francisco&quot;' value='-122.4194' />
                <semantic-value key='&quot;San Jose&quot;' value='-121.88630000000001' />
                <semantic-value key='&quot;Santa Clara&quot;' value='-121.9552' />
                <semantic-value key='&quot;Spokane&quot;' value='-117.426' />
                <semantic-value key='&quot;Syracuse&quot;' value='-76.147400000000005' />
                <semantic-value key='&quot;Tampa&quot;' value='-82.4572' />
                <semantic-value key='&quot;Washington&quot;' value='-77.0364' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Akron&quot;' value='41.081400000000002' />
                <semantic-value key='&quot;Albany&quot;' value='42.6526' />
                <semantic-value key='&quot;Atlanta&quot;' value='33.749000000000002' />
                <semantic-value key='&quot;Austin&quot;' value='30.267199999999999' />
                <semantic-value key='&quot;Baltimore&quot;' value='39.290399999999998' />
                <semantic-value key='&quot;Birmingham&quot;' value='33.518599999999999' />
                <semantic-value key='&quot;Boston&quot;' value='42.360100000000003' />
                <semantic-value key='&quot;Buffalo&quot;' value='42.886400000000002' />
                <semantic-value key='&quot;Charleston&quot;' value='32.776499999999999' />
                <semantic-value key='&quot;Charlotte&quot;' value='35.2271' />
                <semantic-value key='&quot;Cincinnati&quot;' value='39.103099999999998' />
                <semantic-value key='&quot;Cleveland&quot;' value='41.499299999999998' />
                <semantic-value key='&quot;Columbus&quot;' value='39.961199999999998' />
                <semantic-value key='&quot;Dallas&quot;' value='32.776699999999998' />
                <semantic-value key='&quot;Dayton&quot;' value='39.758899999999997' />
                <semantic-value key='&quot;Denver&quot;' value='39.739199999999997' />
                <semantic-value key='&quot;Des Moines&quot;' value='41.586799999999997' />
                <semantic-value key='&quot;Detroit&quot;' value='42.331400000000002' />
                <semantic-value key='&quot;Durham&quot;' value='35.994' />
                <semantic-value key='&quot;Eugene&quot;' value='44.052100000000003' />
                <semantic-value key='&quot;Greensboro&quot;' value='36.072600000000001' />
                <semantic-value key='&quot;Houston&quot;' value='29.760400000000001' />
                <semantic-value key='&quot;Jacksonville&quot;' value='30.3322' />
                <semantic-value key='&quot;Kansas City&quot;' value='39.099699999999999' />
                <semantic-value key='&quot;Las Vegas&quot;' value='36.169899999999998' />
                <semantic-value key='&quot;Lexington&quot;' value='38.040599999999998' />
                <semantic-value key='&quot;Little Rock&quot;' value='34.746499999999997' />
                <semantic-value key='&quot;Long Beach&quot;' value='33.770099999999999' />
                <semantic-value key='&quot;Louisville&quot;' value='38.252699999999997' />
                <semantic-value key='&quot;Madison&quot;' value='43.073099999999997' />
                <semantic-value key='&quot;Memphis&quot;' value='35.149500000000003' />
                <semantic-value key='&quot;Mesa&quot;' value='33.415199999999999' />
                <semantic-value key='&quot;Miami&quot;' value='25.761700000000001' />
                <semantic-value key='&quot;Minneapolis&quot;' value='44.977800000000002' />
                <semantic-value key='&quot;Nashville&quot;' value='36.162700000000001' />
                <semantic-value key='&quot;Oakland&quot;' value='37.804400000000001' />
                <semantic-value key='&quot;Omaha&quot;' value='41.256500000000003' />
                <semantic-value key='&quot;Orlando&quot;' value='28.5383' />
                <semantic-value key='&quot;Philadelphia&quot;' value='39.952599999999997' />
                <semantic-value key='&quot;Phoenix&quot;' value='33.448399999999999' />
                <semantic-value key='&quot;Portland&quot;' value='45.505099999999999' />
                <semantic-value key='&quot;Raleigh&quot;' value='35.779600000000002' />
                <semantic-value key='&quot;Richmond&quot;' value='37.540700000000001' />
                <semantic-value key='&quot;Rochester&quot;' value='43.156599999999997' />
                <semantic-value key='&quot;Sacramento&quot;' value='38.581600000000002' />
                <semantic-value key='&quot;San Antonio&quot;' value='29.424099999999999' />
                <semantic-value key='&quot;San Diego&quot;' value='32.715699999999998' />
                <semantic-value key='&quot;San Francisco&quot;' value='37.774900000000002' />
                <semantic-value key='&quot;San Jose&quot;' value='37.338200000000001' />
                <semantic-value key='&quot;Santa Clara&quot;' value='37.354100000000003' />
                <semantic-value key='&quot;Spokane&quot;' value='47.658799999999999' />
                <semantic-value key='&quot;Syracuse&quot;' value='43.048099999999998' />
                <semantic-value key='&quot;Tampa&quot;' value='27.950600000000001' />
                <semantic-value key='&quot;Washington&quot;' value='38.895099999999999' />
              </semantic-values>
            </column>
            <column-instance column='[city_no_state]' derivation='None' name='[none:city_no_state:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2940780235170861063]' derivation='Sum' name='[rank:sum:Calculation_2940780235170861063:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0z28jet0nrandf180jljh1w88sv6].[city_no_state]' ordering-type='Field' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[Mean Software Developer Salary (adjusted)]' derivation='Sum' name='[sum:Mean Software Developer Salary (adjusted):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Median Home Price]' derivation='Sum' name='[sum:Median Home Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Software Developer Jobs]' derivation='Sum' name='[sum:Number of Software Developer Jobs:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Rent avg]' derivation='Sum' name='[sum:Rent avg:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0z28jet0nrandf180jljh1w88sv6].[rank:sum:Calculation_2940780235170861063:qk:2]' included-values='all' />
          <slices>
            <column>[federated.0z28jet0nrandf180jljh1w88sv6].[rank:sum:Calculation_2940780235170861063:qk:2]</column>
            <column>[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Mean Software Developer Salary (adjusted):qk]</column>
            <column>[federated.0z28jet0nrandf180jljh1w88sv6].[none:city_no_state:nk]</column>
            <column>[federated.0z28jet0nrandf180jljh1w88sv6].[Action (City)]</column>
            <column>[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Rent avg:qk]</column>
            <column>[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Median Home Price:qk]</column>
            <column>[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Number of Software Developer Jobs:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0z28jet0nrandf180jljh1w88sv6].[Longitude (generated)]' field-type='quantitative' max='-4572780.6112732086' min='-22892917.579075154' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0z28jet0nrandf180jljh1w88sv6].[Latitude (generated)]' field-type='quantitative' max='7763472.7779730167' min='1917810.9473521719' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Number of Software Developer Jobs:qk]' />
              <size column='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Number of Software Developer Jobs:qk]' />
              <text column='[federated.0z28jet0nrandf180jljh1w88sv6].[none:city_no_state:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.3953038454055786' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0z28jet0nrandf180jljh1w88sv6].[Latitude (generated)]</rows>
        <cols>[federated.0z28jet0nrandf180jljh1w88sv6].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{44E7F677-B134-4378-806E-7A7E7BA5B42B}' />
    </worksheet>
    <worksheet name='SWE Home Buying Power (Salary, Median Home Price)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Salary, Cost of Housing, &amp;  Home Buying Power for Software Engineers in the US</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SofwareDeveloperIncomeExpensesperUSACity' name='federated.0z28jet0nrandf180jljh1w88sv6' />
          </datasources>
          <datasource-dependencies datasource='federated.0z28jet0nrandf180jljh1w88sv6'>
            <column caption='Home Buying Power' datatype='real' name='[Calculation_2940780235170861063]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='[Mean Software Developer Salary (unadjusted)]/[Median Home Price]' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;Akron, OH&quot;' value='Akron' />
              </aliases>
            </column>
            <column datatype='real' name='[Mean Software Developer Salary (adjusted)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Mean Software Developer Salary (unadjusted)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Median Home Price]' role='measure' type='quantitative' />
            <column datatype='real' name='[Number of Software Developer Jobs]' role='measure' type='quantitative' />
            <column datatype='real' name='[Rent avg]' role='measure' type='quantitative' />
            <column caption='City No State' datatype='string' name='[city_no_state]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Akron&quot;' value='-81.519000000000005' />
                <semantic-value key='&quot;Albany&quot;' value='-73.756200000000007' />
                <semantic-value key='&quot;Atlanta&quot;' value='-84.388000000000005' />
                <semantic-value key='&quot;Austin&quot;' value='-97.743099999999998' />
                <semantic-value key='&quot;Baltimore&quot;' value='-76.612200000000001' />
                <semantic-value key='&quot;Birmingham&quot;' value='-86.810400000000001' />
                <semantic-value key='&quot;Boston&quot;' value='-71.058899999999994' />
                <semantic-value key='&quot;Buffalo&quot;' value='-78.878399999999999' />
                <semantic-value key='&quot;Charleston&quot;' value='-79.931100000000001' />
                <semantic-value key='&quot;Charlotte&quot;' value='-80.843100000000007' />
                <semantic-value key='&quot;Cincinnati&quot;' value='-84.512' />
                <semantic-value key='&quot;Cleveland&quot;' value='-81.694400000000002' />
                <semantic-value key='&quot;Columbus&quot;' value='-82.998800000000003' />
                <semantic-value key='&quot;Dallas&quot;' value='-96.796999999999997' />
                <semantic-value key='&quot;Dayton&quot;' value='-84.191599999999994' />
                <semantic-value key='&quot;Denver&quot;' value='-104.9903' />
                <semantic-value key='&quot;Des Moines&quot;' value='-93.625' />
                <semantic-value key='&quot;Detroit&quot;' value='-83.0458' />
                <semantic-value key='&quot;Durham&quot;' value='-78.898600000000002' />
                <semantic-value key='&quot;Eugene&quot;' value='-123.0868' />
                <semantic-value key='&quot;Greensboro&quot;' value='-79.792000000000002' />
                <semantic-value key='&quot;Houston&quot;' value='-95.369799999999998' />
                <semantic-value key='&quot;Jacksonville&quot;' value='-81.655699999999996' />
                <semantic-value key='&quot;Kansas City&quot;' value='-94.578599999999994' />
                <semantic-value key='&quot;Las Vegas&quot;' value='-115.13979999999999' />
                <semantic-value key='&quot;Lexington&quot;' value='-84.503699999999995' />
                <semantic-value key='&quot;Little Rock&quot;' value='-92.289599999999993' />
                <semantic-value key='&quot;Long Beach&quot;' value='-118.19370000000001' />
                <semantic-value key='&quot;Louisville&quot;' value='-85.758499999999998' />
                <semantic-value key='&quot;Madison&quot;' value='-89.401200000000003' />
                <semantic-value key='&quot;Memphis&quot;' value='-90.049000000000007' />
                <semantic-value key='&quot;Mesa&quot;' value='-111.83150000000001' />
                <semantic-value key='&quot;Miami&quot;' value='-80.191800000000001' />
                <semantic-value key='&quot;Minneapolis&quot;' value='-93.265000000000001' />
                <semantic-value key='&quot;Nashville&quot;' value='-86.781599999999997' />
                <semantic-value key='&quot;Oakland&quot;' value='-122.2711' />
                <semantic-value key='&quot;Omaha&quot;' value='-95.9345' />
                <semantic-value key='&quot;Orlando&quot;' value='-81.379199999999997' />
                <semantic-value key='&quot;Philadelphia&quot;' value='-75.165199999999999' />
                <semantic-value key='&quot;Phoenix&quot;' value='-112.074' />
                <semantic-value key='&quot;Portland&quot;' value='-122.675' />
                <semantic-value key='&quot;Raleigh&quot;' value='-78.638199999999998' />
                <semantic-value key='&quot;Richmond&quot;' value='-77.436000000000007' />
                <semantic-value key='&quot;Rochester&quot;' value='-77.608800000000002' />
                <semantic-value key='&quot;Sacramento&quot;' value='-121.4944' />
                <semantic-value key='&quot;San Antonio&quot;' value='-98.493600000000001' />
                <semantic-value key='&quot;San Diego&quot;' value='-117.1611' />
                <semantic-value key='&quot;San Francisco&quot;' value='-122.4194' />
                <semantic-value key='&quot;San Jose&quot;' value='-121.88630000000001' />
                <semantic-value key='&quot;Santa Clara&quot;' value='-121.9552' />
                <semantic-value key='&quot;Spokane&quot;' value='-117.426' />
                <semantic-value key='&quot;Syracuse&quot;' value='-76.147400000000005' />
                <semantic-value key='&quot;Tampa&quot;' value='-82.4572' />
                <semantic-value key='&quot;Washington&quot;' value='-77.0364' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Akron&quot;' value='41.081400000000002' />
                <semantic-value key='&quot;Albany&quot;' value='42.6526' />
                <semantic-value key='&quot;Atlanta&quot;' value='33.749000000000002' />
                <semantic-value key='&quot;Austin&quot;' value='30.267199999999999' />
                <semantic-value key='&quot;Baltimore&quot;' value='39.290399999999998' />
                <semantic-value key='&quot;Birmingham&quot;' value='33.518599999999999' />
                <semantic-value key='&quot;Boston&quot;' value='42.360100000000003' />
                <semantic-value key='&quot;Buffalo&quot;' value='42.886400000000002' />
                <semantic-value key='&quot;Charleston&quot;' value='32.776499999999999' />
                <semantic-value key='&quot;Charlotte&quot;' value='35.2271' />
                <semantic-value key='&quot;Cincinnati&quot;' value='39.103099999999998' />
                <semantic-value key='&quot;Cleveland&quot;' value='41.499299999999998' />
                <semantic-value key='&quot;Columbus&quot;' value='39.961199999999998' />
                <semantic-value key='&quot;Dallas&quot;' value='32.776699999999998' />
                <semantic-value key='&quot;Dayton&quot;' value='39.758899999999997' />
                <semantic-value key='&quot;Denver&quot;' value='39.739199999999997' />
                <semantic-value key='&quot;Des Moines&quot;' value='41.586799999999997' />
                <semantic-value key='&quot;Detroit&quot;' value='42.331400000000002' />
                <semantic-value key='&quot;Durham&quot;' value='35.994' />
                <semantic-value key='&quot;Eugene&quot;' value='44.052100000000003' />
                <semantic-value key='&quot;Greensboro&quot;' value='36.072600000000001' />
                <semantic-value key='&quot;Houston&quot;' value='29.760400000000001' />
                <semantic-value key='&quot;Jacksonville&quot;' value='30.3322' />
                <semantic-value key='&quot;Kansas City&quot;' value='39.099699999999999' />
                <semantic-value key='&quot;Las Vegas&quot;' value='36.169899999999998' />
                <semantic-value key='&quot;Lexington&quot;' value='38.040599999999998' />
                <semantic-value key='&quot;Little Rock&quot;' value='34.746499999999997' />
                <semantic-value key='&quot;Long Beach&quot;' value='33.770099999999999' />
                <semantic-value key='&quot;Louisville&quot;' value='38.252699999999997' />
                <semantic-value key='&quot;Madison&quot;' value='43.073099999999997' />
                <semantic-value key='&quot;Memphis&quot;' value='35.149500000000003' />
                <semantic-value key='&quot;Mesa&quot;' value='33.415199999999999' />
                <semantic-value key='&quot;Miami&quot;' value='25.761700000000001' />
                <semantic-value key='&quot;Minneapolis&quot;' value='44.977800000000002' />
                <semantic-value key='&quot;Nashville&quot;' value='36.162700000000001' />
                <semantic-value key='&quot;Oakland&quot;' value='37.804400000000001' />
                <semantic-value key='&quot;Omaha&quot;' value='41.256500000000003' />
                <semantic-value key='&quot;Orlando&quot;' value='28.5383' />
                <semantic-value key='&quot;Philadelphia&quot;' value='39.952599999999997' />
                <semantic-value key='&quot;Phoenix&quot;' value='33.448399999999999' />
                <semantic-value key='&quot;Portland&quot;' value='45.505099999999999' />
                <semantic-value key='&quot;Raleigh&quot;' value='35.779600000000002' />
                <semantic-value key='&quot;Richmond&quot;' value='37.540700000000001' />
                <semantic-value key='&quot;Rochester&quot;' value='43.156599999999997' />
                <semantic-value key='&quot;Sacramento&quot;' value='38.581600000000002' />
                <semantic-value key='&quot;San Antonio&quot;' value='29.424099999999999' />
                <semantic-value key='&quot;San Diego&quot;' value='32.715699999999998' />
                <semantic-value key='&quot;San Francisco&quot;' value='37.774900000000002' />
                <semantic-value key='&quot;San Jose&quot;' value='37.338200000000001' />
                <semantic-value key='&quot;Santa Clara&quot;' value='37.354100000000003' />
                <semantic-value key='&quot;Spokane&quot;' value='47.658799999999999' />
                <semantic-value key='&quot;Syracuse&quot;' value='43.048099999999998' />
                <semantic-value key='&quot;Tampa&quot;' value='27.950600000000001' />
                <semantic-value key='&quot;Washington&quot;' value='38.895099999999999' />
              </semantic-values>
            </column>
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Mean Software Developer Salary (adjusted)]' derivation='None' name='[none:Mean Software Developer Salary (adjusted):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Mean Software Developer Salary (unadjusted)]' derivation='None' name='[none:Mean Software Developer Salary (unadjusted):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Median Home Price]' derivation='None' name='[none:Median Home Price:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Software Developer Jobs]' derivation='None' name='[none:Number of Software Developer Jobs:ok]' pivot='key' type='ordinal' />
            <column-instance column='[city_no_state]' derivation='None' name='[none:city_no_state:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2940780235170861063]' derivation='Sum' name='[rank:sum:Calculation_2940780235170861063:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[Mean Software Developer Salary (adjusted)]' derivation='Sum' name='[rank:sum:Mean Software Developer Salary (adjusted):qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[Calculation_2940780235170861063]' derivation='Sum' name='[sum:Calculation_2940780235170861063:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Mean Software Developer Salary (adjusted)]' derivation='Sum' name='[sum:Mean Software Developer Salary (adjusted):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Mean Software Developer Salary (unadjusted)]' derivation='Sum' name='[sum:Mean Software Developer Salary (unadjusted):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Median Home Price]' derivation='Sum' name='[sum:Median Home Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Software Developer Jobs]' derivation='Sum' name='[sum:Number of Software Developer Jobs:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Rent avg]' derivation='Sum' name='[sum:Rent avg:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0z28jet0nrandf180jljh1w88sv6].[Action (City No State)]'>
            <groupfilter function='level-members' level='[city_no_state]' user:ui-action-filter='[Action3_905E1EB5F8204F0BA3CC35646727312E]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0z28jet0nrandf180jljh1w88sv6].[Action (City,Mean Software Developer Salary (adjusted),Mean Software Developer Salary (unadjusted),Median Home Price,Number of Software Developer Jobs,City No State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_C2795BDC752846F9950068B26B7E5065]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[City]' />
              <groupfilter function='level-members' level='[none:Mean Software Developer Salary (adjusted):ok]' />
              <groupfilter function='level-members' level='[none:Mean Software Developer Salary (unadjusted):ok]' />
              <groupfilter function='level-members' level='[none:Median Home Price:ok]' />
              <groupfilter function='level-members' level='[none:Number of Software Developer Jobs:ok]' />
              <groupfilter function='level-members' level='[city_no_state]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0z28jet0nrandf180jljh1w88sv6].[none:City:nk]'>
            <groupfilter function='level-members' level='[none:City:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0z28jet0nrandf180jljh1w88sv6].[rank:sum:Calculation_2940780235170861063:qk]' included-values='in-range-or-null'>
            <min>1</min>
            <max>76</max>
          </filter>
          <filter class='quantitative' column='[federated.0z28jet0nrandf180jljh1w88sv6].[rank:sum:Mean Software Developer Salary (adjusted):qk]' included-values='all' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0z28jet0nrandf180jljh1w88sv6].[none:City:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Calculation_2940780235170861063:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0z28jet0nrandf180jljh1w88sv6].[rank:sum:Calculation_2940780235170861063:qk]</column>
            <column>[federated.0z28jet0nrandf180jljh1w88sv6].[none:City:nk]</column>
            <column>[federated.0z28jet0nrandf180jljh1w88sv6].[rank:sum:Mean Software Developer Salary (adjusted):qk]</column>
            <column>[federated.0z28jet0nrandf180jljh1w88sv6].[none:city_no_state:nk]</column>
            <column>[federated.0z28jet0nrandf180jljh1w88sv6].[Action (City)]</column>
            <column>[federated.0z28jet0nrandf180jljh1w88sv6].[Action (City,Mean Software Developer Salary (adjusted),Mean Software Developer Salary (unadjusted),Median Home Price,Number of Software Developer Jobs,City No State)]</column>
            <column>[federated.0z28jet0nrandf180jljh1w88sv6].[Action (City No State)]</column>
            <column>[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Rent avg:qk]</column>
            <column>[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Median Home Price:qk]</column>
            <column>[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Mean Software Developer Salary (adjusted):qk]</column>
            <column>[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Number of Software Developer Jobs:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0z28jet0nrandf180jljh1w88sv6].[none:City:nk]' value='113' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='419000.0' field='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Median Home Price:qk]' symmetric='false' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#269a17</color>
                <color>#329f24</color>
                <color>#3fa532</color>
                <color>#4dab41</color>
                <color>#5cb051</color>
                <color>#6bb661</color>
                <color>#7bbc73</color>
                <color>#8cc286</color>
                <color>#9ec799</color>
                <color>#b1cdad</color>
                <color>#c4d3c2</color>
                <color>#d9d9d9</color>
                <color>#d8caca</color>
                <color>#d7bbbb</color>
                <color>#d7acac</color>
                <color>#d69e9d</color>
                <color>#d58f8f</color>
                <color>#d58180</color>
                <color>#d47372</color>
                <color>#d36563</color>
                <color>#d35655</color>
                <color>#d24847</color>
                <color>#d23b39</color>
              </color-palette>
            </encoding>
            <encoding attr='color' field='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Calculation_2940780235170861063:qk]' palette='purple_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.0z28jet0nrandf180jljh1w88sv6].[rank:sum:Calculation_2940780235170861063:qk]' palette='purple_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#75a1c7' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='1243' />
                <format attr='maxwidth' value='1243' />
                <format attr='minheight' value='283' />
                <format attr='maxheight' value='283' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Median Home Price:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Median Home Price:qk]' />
              <text column='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Median Home Price:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#75a1c7' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Calculation_2940780235170861063:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Calculation_2940780235170861063:qk]' />
              <text column='[federated.0z28jet0nrandf180jljh1w88sv6].[rank:sum:Calculation_2940780235170861063:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>Rank: &lt;</run>
                <run>[federated.0z28jet0nrandf180jljh1w88sv6].[rank:sum:Calculation_2940780235170861063:qk]</run>
                <run>&gt;</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#75a1c7' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Mean Software Developer Salary (unadjusted):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Mean Software Developer Salary (unadjusted):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#75a1c7' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0z28jet0nrandf180jljh1w88sv6].[sum:Mean Software Developer Salary (unadjusted):qk] + ([federated.0z28jet0nrandf180jljh1w88sv6].[sum:Median Home Price:qk] + [federated.0z28jet0nrandf180jljh1w88sv6].[sum:Calculation_2940780235170861063:qk]))</rows>
        <cols>[federated.0z28jet0nrandf180jljh1w88sv6].[none:City:nk]</cols>
      </table>
      <simple-id uuid='{B681EADB-2EBC-4D4D-BC8E-CB7EE892CCD3}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='SofwareDeveloperIncomeExpensesperUSACity' name='federated.0z28jet0nrandf180jljh1w88sv6' />
          </datasources>
          <datasource-dependencies datasource='federated.0z28jet0nrandf180jljh1w88sv6'>
            <column caption='Home Buying Power' datatype='real' name='[Calculation_2940780235170861063]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='[Mean Software Developer Salary (unadjusted)]/[Median Home Price]' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;Akron, OH&quot;' value='Akron' />
              </aliases>
            </column>
            <column datatype='real' name='[Mean Software Developer Salary (adjusted)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Mean Software Developer Salary (unadjusted)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Median Home Price]' role='measure' type='quantitative' />
            <column datatype='real' name='[Number of Software Developer Jobs]' role='measure' type='quantitative' />
            <column datatype='real' name='[Rent avg]' role='measure' type='quantitative' />
            <column caption='City No State' datatype='string' name='[city_no_state]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Akron&quot;' value='-81.519000000000005' />
                <semantic-value key='&quot;Albany&quot;' value='-73.756200000000007' />
                <semantic-value key='&quot;Atlanta&quot;' value='-84.388000000000005' />
                <semantic-value key='&quot;Austin&quot;' value='-97.743099999999998' />
                <semantic-value key='&quot;Baltimore&quot;' value='-76.612200000000001' />
                <semantic-value key='&quot;Birmingham&quot;' value='-86.810400000000001' />
                <semantic-value key='&quot;Boston&quot;' value='-71.058899999999994' />
                <semantic-value key='&quot;Buffalo&quot;' value='-78.878399999999999' />
                <semantic-value key='&quot;Charleston&quot;' value='-79.931100000000001' />
                <semantic-value key='&quot;Charlotte&quot;' value='-80.843100000000007' />
                <semantic-value key='&quot;Cincinnati&quot;' value='-84.512' />
                <semantic-value key='&quot;Cleveland&quot;' value='-81.694400000000002' />
                <semantic-value key='&quot;Columbus&quot;' value='-82.998800000000003' />
                <semantic-value key='&quot;Dallas&quot;' value='-96.796999999999997' />
                <semantic-value key='&quot;Dayton&quot;' value='-84.191599999999994' />
                <semantic-value key='&quot;Denver&quot;' value='-104.9903' />
                <semantic-value key='&quot;Des Moines&quot;' value='-93.625' />
                <semantic-value key='&quot;Detroit&quot;' value='-83.0458' />
                <semantic-value key='&quot;Durham&quot;' value='-78.898600000000002' />
                <semantic-value key='&quot;Eugene&quot;' value='-123.0868' />
                <semantic-value key='&quot;Greensboro&quot;' value='-79.792000000000002' />
                <semantic-value key='&quot;Houston&quot;' value='-95.369799999999998' />
                <semantic-value key='&quot;Jacksonville&quot;' value='-81.655699999999996' />
                <semantic-value key='&quot;Kansas City&quot;' value='-94.578599999999994' />
                <semantic-value key='&quot;Las Vegas&quot;' value='-115.13979999999999' />
                <semantic-value key='&quot;Lexington&quot;' value='-84.503699999999995' />
                <semantic-value key='&quot;Little Rock&quot;' value='-92.289599999999993' />
                <semantic-value key='&quot;Long Beach&quot;' value='-118.19370000000001' />
                <semantic-value key='&quot;Louisville&quot;' value='-85.758499999999998' />
                <semantic-value key='&quot;Madison&quot;' value='-89.401200000000003' />
                <semantic-value key='&quot;Memphis&quot;' value='-90.049000000000007' />
                <semantic-value key='&quot;Mesa&quot;' value='-111.83150000000001' />
                <semantic-value key='&quot;Miami&quot;' value='-80.191800000000001' />
                <semantic-value key='&quot;Minneapolis&quot;' value='-93.265000000000001' />
                <semantic-value key='&quot;Nashville&quot;' value='-86.781599999999997' />
                <semantic-value key='&quot;Oakland&quot;' value='-122.2711' />
                <semantic-value key='&quot;Omaha&quot;' value='-95.9345' />
                <semantic-value key='&quot;Orlando&quot;' value='-81.379199999999997' />
                <semantic-value key='&quot;Philadelphia&quot;' value='-75.165199999999999' />
                <semantic-value key='&quot;Phoenix&quot;' value='-112.074' />
                <semantic-value key='&quot;Portland&quot;' value='-122.675' />
                <semantic-value key='&quot;Raleigh&quot;' value='-78.638199999999998' />
                <semantic-value key='&quot;Richmond&quot;' value='-77.436000000000007' />
                <semantic-value key='&quot;Rochester&quot;' value='-77.608800000000002' />
                <semantic-value key='&quot;Sacramento&quot;' value='-121.4944' />
                <semantic-value key='&quot;San Antonio&quot;' value='-98.493600000000001' />
                <semantic-value key='&quot;San Diego&quot;' value='-117.1611' />
                <semantic-value key='&quot;San Francisco&quot;' value='-122.4194' />
                <semantic-value key='&quot;San Jose&quot;' value='-121.88630000000001' />
                <semantic-value key='&quot;Santa Clara&quot;' value='-121.9552' />
                <semantic-value key='&quot;Spokane&quot;' value='-117.426' />
                <semantic-value key='&quot;Syracuse&quot;' value='-76.147400000000005' />
                <semantic-value key='&quot;Tampa&quot;' value='-82.4572' />
                <semantic-value key='&quot;Washington&quot;' value='-77.0364' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Akron&quot;' value='41.081400000000002' />
                <semantic-value key='&quot;Albany&quot;' value='42.6526' />
                <semantic-value key='&quot;Atlanta&quot;' value='33.749000000000002' />
                <semantic-value key='&quot;Austin&quot;' value='30.267199999999999' />
                <semantic-value key='&quot;Baltimore&quot;' value='39.290399999999998' />
                <semantic-value key='&quot;Birmingham&quot;' value='33.518599999999999' />
                <semantic-value key='&quot;Boston&quot;' value='42.360100000000003' />
                <semantic-value key='&quot;Buffalo&quot;' value='42.886400000000002' />
                <semantic-value key='&quot;Charleston&quot;' value='32.776499999999999' />
                <semantic-value key='&quot;Charlotte&quot;' value='35.2271' />
                <semantic-value key='&quot;Cincinnati&quot;' value='39.103099999999998' />
                <semantic-value key='&quot;Cleveland&quot;' value='41.499299999999998' />
                <semantic-value key='&quot;Columbus&quot;' value='39.961199999999998' />
                <semantic-value key='&quot;Dallas&quot;' value='32.776699999999998' />
                <semantic-value key='&quot;Dayton&quot;' value='39.758899999999997' />
                <semantic-value key='&quot;Denver&quot;' value='39.739199999999997' />
                <semantic-value key='&quot;Des Moines&quot;' value='41.586799999999997' />
                <semantic-value key='&quot;Detroit&quot;' value='42.331400000000002' />
                <semantic-value key='&quot;Durham&quot;' value='35.994' />
                <semantic-value key='&quot;Eugene&quot;' value='44.052100000000003' />
                <semantic-value key='&quot;Greensboro&quot;' value='36.072600000000001' />
                <semantic-value key='&quot;Houston&quot;' value='29.760400000000001' />
                <semantic-value key='&quot;Jacksonville&quot;' value='30.3322' />
                <semantic-value key='&quot;Kansas City&quot;' value='39.099699999999999' />
                <semantic-value key='&quot;Las Vegas&quot;' value='36.169899999999998' />
                <semantic-value key='&quot;Lexington&quot;' value='38.040599999999998' />
                <semantic-value key='&quot;Little Rock&quot;' value='34.746499999999997' />
                <semantic-value key='&quot;Long Beach&quot;' value='33.770099999999999' />
                <semantic-value key='&quot;Louisville&quot;' value='38.252699999999997' />
                <semantic-value key='&quot;Madison&quot;' value='43.073099999999997' />
                <semantic-value key='&quot;Memphis&quot;' value='35.149500000000003' />
                <semantic-value key='&quot;Mesa&quot;' value='33.415199999999999' />
                <semantic-value key='&quot;Miami&quot;' value='25.761700000000001' />
                <semantic-value key='&quot;Minneapolis&quot;' value='44.977800000000002' />
                <semantic-value key='&quot;Nashville&quot;' value='36.162700000000001' />
                <semantic-value key='&quot;Oakland&quot;' value='37.804400000000001' />
                <semantic-value key='&quot;Omaha&quot;' value='41.256500000000003' />
                <semantic-value key='&quot;Orlando&quot;' value='28.5383' />
                <semantic-value key='&quot;Philadelphia&quot;' value='39.952599999999997' />
                <semantic-value key='&quot;Phoenix&quot;' value='33.448399999999999' />
                <semantic-value key='&quot;Portland&quot;' value='45.505099999999999' />
                <semantic-value key='&quot;Raleigh&quot;' value='35.779600000000002' />
                <semantic-value key='&quot;Richmond&quot;' value='37.540700000000001' />
                <semantic-value key='&quot;Rochester&quot;' value='43.156599999999997' />
                <semantic-value key='&quot;Sacramento&quot;' value='38.581600000000002' />
                <semantic-value key='&quot;San Antonio&quot;' value='29.424099999999999' />
                <semantic-value key='&quot;San Diego&quot;' value='32.715699999999998' />
                <semantic-value key='&quot;San Francisco&quot;' value='37.774900000000002' />
                <semantic-value key='&quot;San Jose&quot;' value='37.338200000000001' />
                <semantic-value key='&quot;Santa Clara&quot;' value='37.354100000000003' />
                <semantic-value key='&quot;Spokane&quot;' value='47.658799999999999' />
                <semantic-value key='&quot;Syracuse&quot;' value='43.048099999999998' />
                <semantic-value key='&quot;Tampa&quot;' value='27.950600000000001' />
                <semantic-value key='&quot;Washington&quot;' value='38.895099999999999' />
              </semantic-values>
            </column>
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Mean Software Developer Salary (adjusted)]' derivation='None' name='[none:Mean Software Developer Salary (adjusted):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Mean Software Developer Salary (unadjusted)]' derivation='None' name='[none:Mean Software Developer Salary (unadjusted):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Median Home Price]' derivation='None' name='[none:Median Home Price:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Software Developer Jobs]' derivation='None' name='[none:Number of Software Developer Jobs:ok]' pivot='key' type='ordinal' />
            <column-instance column='[city_no_state]' derivation='None' name='[none:city_no_state:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2940780235170861063]' derivation='Sum' name='[rank:sum:Calculation_2940780235170861063:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[Mean Software Developer Salary (adjusted)]' derivation='Sum' name='[sum:Mean Software Developer Salary (adjusted):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Mean Software Developer Salary (unadjusted)]' derivation='Sum' name='[sum:Mean Software Developer Salary (unadjusted):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Median Home Price]' derivation='Sum' name='[sum:Median Home Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Software Developer Jobs]' derivation='Sum' name='[sum:Number of Software Developer Jobs:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Rent avg]' derivation='Sum' name='[sum:Rent avg:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0z28jet0nrandf180jljh1w88sv6].[Action (City No State)]'>
            <groupfilter function='level-members' level='[city_no_state]' user:ui-action-filter='[Action3_905E1EB5F8204F0BA3CC35646727312E]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0z28jet0nrandf180jljh1w88sv6].[Action (City,Mean Software Developer Salary (adjusted),Mean Software Developer Salary (unadjusted),Median Home Price,Number of Software Developer Jobs,City No State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_C2795BDC752846F9950068B26B7E5065]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[City]' />
              <groupfilter function='level-members' level='[none:Mean Software Developer Salary (adjusted):ok]' />
              <groupfilter function='level-members' level='[none:Mean Software Developer Salary (unadjusted):ok]' />
              <groupfilter function='level-members' level='[none:Median Home Price:ok]' />
              <groupfilter function='level-members' level='[none:Number of Software Developer Jobs:ok]' />
              <groupfilter function='level-members' level='[city_no_state]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0z28jet0nrandf180jljh1w88sv6].[none:City:nk]'>
            <groupfilter function='level-members' level='[none:City:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0z28jet0nrandf180jljh1w88sv6].[rank:sum:Calculation_2940780235170861063:qk]' included-values='in-range'>
            <min>1</min>
            <max>1</max>
          </filter>
          <filter class='quantitative' column='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Mean Software Developer Salary (unadjusted):qk]' included-values='in-range'>
            <min>80314.0</min>
            <max>142101.0</max>
          </filter>
          <slices>
            <column>[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Mean Software Developer Salary (unadjusted):qk]</column>
            <column>[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Number of Software Developer Jobs:qk]</column>
            <column>[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Median Home Price:qk]</column>
            <column>[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Rent avg:qk]</column>
            <column>[federated.0z28jet0nrandf180jljh1w88sv6].[none:city_no_state:nk]</column>
            <column>[federated.0z28jet0nrandf180jljh1w88sv6].[none:City:nk]</column>
            <column>[federated.0z28jet0nrandf180jljh1w88sv6].[Action (City No State)]</column>
            <column>[federated.0z28jet0nrandf180jljh1w88sv6].[Action (City,Mean Software Developer Salary (adjusted),Mean Software Developer Salary (unadjusted),Median Home Price,Number of Software Developer Jobs,City No State)]</column>
            <column>[federated.0z28jet0nrandf180jljh1w88sv6].[Action (City)]</column>
            <column>[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Mean Software Developer Salary (adjusted):qk]</column>
            <column>[federated.0z28jet0nrandf180jljh1w88sv6].[rank:sum:Calculation_2940780235170861063:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Mean Software Developer Salary (unadjusted):qk]' field-type='quantitative' max='152083.66890742336' min='60000.0' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='2100.0' field='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Rent avg:qk]' palette='orange_blue_diverging_10_0' reverse='true' symmetric='false' type='interpolated' />
            <encoding attr='color' center='0.20000000000000001' field='[federated.0z28jet0nrandf180jljh1w88sv6].[rank:sum:Calculation_2940780235170861063:qk]' reverse='true' symmetric='false' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#5664d3</color>
                <color>#6470d3</color>
                <color>#727dd4</color>
                <color>#808ad5</color>
                <color>#8f97d5</color>
                <color>#9da4d6</color>
                <color>#acb1d7</color>
                <color>#bbbed7</color>
                <color>#cacbd8</color>
                <color>#d9d9d9</color>
                <color>#d9cec2</color>
                <color>#dac4ac</color>
                <color>#dbb995</color>
                <color>#dcaf7e</color>
                <color>#dca467</color>
                <color>#dd9950</color>
                <color>#de8e39</color>
                <color>#df8321</color>
                <color>#e0790a</color>
              </color-palette>
            </encoding>
            <encoding attr='color' field='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Median Home Price:qk]' palette='orange_blue_white_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Number of Software Developer Jobs:qk]' />
              <text column='[federated.0z28jet0nrandf180jljh1w88sv6].[none:City:nk]' />
              <lod column='[federated.0z28jet0nrandf180jljh1w88sv6].[none:City:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/circle' />
                <format attr='size' value='1.4392818212509155' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='1087' />
                <format attr='maxwidth' value='1087' />
                <format attr='minheight' value='349' />
                <format attr='maxheight' value='349' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Rent avg:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Rent avg:qk]' />
              <size column='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Number of Software Developer Jobs:qk]' />
              <text column='[federated.0z28jet0nrandf180jljh1w88sv6].[none:City:nk]' />
              <lod column='[federated.0z28jet0nrandf180jljh1w88sv6].[none:City:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/circle' />
                <format attr='size' value='1.4392818212509155' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Median Home Price:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Median Home Price:qk]' />
              <size column='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Number of Software Developer Jobs:qk]' />
              <text column='[federated.0z28jet0nrandf180jljh1w88sv6].[none:City:nk]' />
              <lod column='[federated.0z28jet0nrandf180jljh1w88sv6].[none:City:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/circle' />
                <format attr='size' value='1.4392818212509155' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0z28jet0nrandf180jljh1w88sv6].[sum:Rent avg:qk] + [federated.0z28jet0nrandf180jljh1w88sv6].[sum:Median Home Price:qk])</rows>
        <cols>[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Mean Software Developer Salary (unadjusted):qk]</cols>
      </table>
      <simple-id uuid='{745739E4-80F5-4394-80A4-DD1A664F3D29}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='SofwareDeveloperIncomeExpensesperUSACity' name='federated.0z28jet0nrandf180jljh1w88sv6' />
      </datasources>
      <datasource-dependencies datasource='federated.0z28jet0nrandf180jljh1w88sv6'>
        <column caption='Home Buying Power' datatype='real' name='[Calculation_2940780235170861063]' role='measure' type='ordinal'>
          <calculation class='tableau' formula='[Mean Software Developer Salary (unadjusted)]/[Median Home Price]' />
        </column>
        <column datatype='real' name='[Mean Software Developer Salary (adjusted)]' role='measure' type='quantitative' />
        <column datatype='real' name='[Median Home Price]' role='measure' type='quantitative' />
        <column datatype='real' name='[Number of Software Developer Jobs]' role='measure' type='quantitative' />
        <column datatype='real' name='[Rent avg]' role='measure' type='quantitative' />
        <column caption='City No State' datatype='string' name='[city_no_state]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
          <semantic-values semantic-role='[Geographical].[Longitude]'>
            <semantic-value key='&quot;Akron&quot;' value='-81.519000000000005' />
            <semantic-value key='&quot;Albany&quot;' value='-73.756200000000007' />
            <semantic-value key='&quot;Atlanta&quot;' value='-84.388000000000005' />
            <semantic-value key='&quot;Austin&quot;' value='-97.743099999999998' />
            <semantic-value key='&quot;Baltimore&quot;' value='-76.612200000000001' />
            <semantic-value key='&quot;Birmingham&quot;' value='-86.810400000000001' />
            <semantic-value key='&quot;Boston&quot;' value='-71.058899999999994' />
            <semantic-value key='&quot;Buffalo&quot;' value='-78.878399999999999' />
            <semantic-value key='&quot;Charleston&quot;' value='-79.931100000000001' />
            <semantic-value key='&quot;Charlotte&quot;' value='-80.843100000000007' />
            <semantic-value key='&quot;Cincinnati&quot;' value='-84.512' />
            <semantic-value key='&quot;Cleveland&quot;' value='-81.694400000000002' />
            <semantic-value key='&quot;Columbus&quot;' value='-82.998800000000003' />
            <semantic-value key='&quot;Dallas&quot;' value='-96.796999999999997' />
            <semantic-value key='&quot;Dayton&quot;' value='-84.191599999999994' />
            <semantic-value key='&quot;Denver&quot;' value='-104.9903' />
            <semantic-value key='&quot;Des Moines&quot;' value='-93.625' />
            <semantic-value key='&quot;Detroit&quot;' value='-83.0458' />
            <semantic-value key='&quot;Durham&quot;' value='-78.898600000000002' />
            <semantic-value key='&quot;Eugene&quot;' value='-123.0868' />
            <semantic-value key='&quot;Greensboro&quot;' value='-79.792000000000002' />
            <semantic-value key='&quot;Houston&quot;' value='-95.369799999999998' />
            <semantic-value key='&quot;Jacksonville&quot;' value='-81.655699999999996' />
            <semantic-value key='&quot;Kansas City&quot;' value='-94.578599999999994' />
            <semantic-value key='&quot;Las Vegas&quot;' value='-115.13979999999999' />
            <semantic-value key='&quot;Lexington&quot;' value='-84.503699999999995' />
            <semantic-value key='&quot;Little Rock&quot;' value='-92.289599999999993' />
            <semantic-value key='&quot;Long Beach&quot;' value='-118.19370000000001' />
            <semantic-value key='&quot;Louisville&quot;' value='-85.758499999999998' />
            <semantic-value key='&quot;Madison&quot;' value='-89.401200000000003' />
            <semantic-value key='&quot;Memphis&quot;' value='-90.049000000000007' />
            <semantic-value key='&quot;Mesa&quot;' value='-111.83150000000001' />
            <semantic-value key='&quot;Miami&quot;' value='-80.191800000000001' />
            <semantic-value key='&quot;Minneapolis&quot;' value='-93.265000000000001' />
            <semantic-value key='&quot;Nashville&quot;' value='-86.781599999999997' />
            <semantic-value key='&quot;Oakland&quot;' value='-122.2711' />
            <semantic-value key='&quot;Omaha&quot;' value='-95.9345' />
            <semantic-value key='&quot;Orlando&quot;' value='-81.379199999999997' />
            <semantic-value key='&quot;Philadelphia&quot;' value='-75.165199999999999' />
            <semantic-value key='&quot;Phoenix&quot;' value='-112.074' />
            <semantic-value key='&quot;Portland&quot;' value='-122.675' />
            <semantic-value key='&quot;Raleigh&quot;' value='-78.638199999999998' />
            <semantic-value key='&quot;Richmond&quot;' value='-77.436000000000007' />
            <semantic-value key='&quot;Rochester&quot;' value='-77.608800000000002' />
            <semantic-value key='&quot;Sacramento&quot;' value='-121.4944' />
            <semantic-value key='&quot;San Antonio&quot;' value='-98.493600000000001' />
            <semantic-value key='&quot;San Diego&quot;' value='-117.1611' />
            <semantic-value key='&quot;San Francisco&quot;' value='-122.4194' />
            <semantic-value key='&quot;San Jose&quot;' value='-121.88630000000001' />
            <semantic-value key='&quot;Santa Clara&quot;' value='-121.9552' />
            <semantic-value key='&quot;Spokane&quot;' value='-117.426' />
            <semantic-value key='&quot;Syracuse&quot;' value='-76.147400000000005' />
            <semantic-value key='&quot;Tampa&quot;' value='-82.4572' />
            <semantic-value key='&quot;Washington&quot;' value='-77.0364' />
          </semantic-values>
          <semantic-values semantic-role='[Geographical].[Latitude]'>
            <semantic-value key='&quot;Akron&quot;' value='41.081400000000002' />
            <semantic-value key='&quot;Albany&quot;' value='42.6526' />
            <semantic-value key='&quot;Atlanta&quot;' value='33.749000000000002' />
            <semantic-value key='&quot;Austin&quot;' value='30.267199999999999' />
            <semantic-value key='&quot;Baltimore&quot;' value='39.290399999999998' />
            <semantic-value key='&quot;Birmingham&quot;' value='33.518599999999999' />
            <semantic-value key='&quot;Boston&quot;' value='42.360100000000003' />
            <semantic-value key='&quot;Buffalo&quot;' value='42.886400000000002' />
            <semantic-value key='&quot;Charleston&quot;' value='32.776499999999999' />
            <semantic-value key='&quot;Charlotte&quot;' value='35.2271' />
            <semantic-value key='&quot;Cincinnati&quot;' value='39.103099999999998' />
            <semantic-value key='&quot;Cleveland&quot;' value='41.499299999999998' />
            <semantic-value key='&quot;Columbus&quot;' value='39.961199999999998' />
            <semantic-value key='&quot;Dallas&quot;' value='32.776699999999998' />
            <semantic-value key='&quot;Dayton&quot;' value='39.758899999999997' />
            <semantic-value key='&quot;Denver&quot;' value='39.739199999999997' />
            <semantic-value key='&quot;Des Moines&quot;' value='41.586799999999997' />
            <semantic-value key='&quot;Detroit&quot;' value='42.331400000000002' />
            <semantic-value key='&quot;Durham&quot;' value='35.994' />
            <semantic-value key='&quot;Eugene&quot;' value='44.052100000000003' />
            <semantic-value key='&quot;Greensboro&quot;' value='36.072600000000001' />
            <semantic-value key='&quot;Houston&quot;' value='29.760400000000001' />
            <semantic-value key='&quot;Jacksonville&quot;' value='30.3322' />
            <semantic-value key='&quot;Kansas City&quot;' value='39.099699999999999' />
            <semantic-value key='&quot;Las Vegas&quot;' value='36.169899999999998' />
            <semantic-value key='&quot;Lexington&quot;' value='38.040599999999998' />
            <semantic-value key='&quot;Little Rock&quot;' value='34.746499999999997' />
            <semantic-value key='&quot;Long Beach&quot;' value='33.770099999999999' />
            <semantic-value key='&quot;Louisville&quot;' value='38.252699999999997' />
            <semantic-value key='&quot;Madison&quot;' value='43.073099999999997' />
            <semantic-value key='&quot;Memphis&quot;' value='35.149500000000003' />
            <semantic-value key='&quot;Mesa&quot;' value='33.415199999999999' />
            <semantic-value key='&quot;Miami&quot;' value='25.761700000000001' />
            <semantic-value key='&quot;Minneapolis&quot;' value='44.977800000000002' />
            <semantic-value key='&quot;Nashville&quot;' value='36.162700000000001' />
            <semantic-value key='&quot;Oakland&quot;' value='37.804400000000001' />
            <semantic-value key='&quot;Omaha&quot;' value='41.256500000000003' />
            <semantic-value key='&quot;Orlando&quot;' value='28.5383' />
            <semantic-value key='&quot;Philadelphia&quot;' value='39.952599999999997' />
            <semantic-value key='&quot;Phoenix&quot;' value='33.448399999999999' />
            <semantic-value key='&quot;Portland&quot;' value='45.505099999999999' />
            <semantic-value key='&quot;Raleigh&quot;' value='35.779600000000002' />
            <semantic-value key='&quot;Richmond&quot;' value='37.540700000000001' />
            <semantic-value key='&quot;Rochester&quot;' value='43.156599999999997' />
            <semantic-value key='&quot;Sacramento&quot;' value='38.581600000000002' />
            <semantic-value key='&quot;San Antonio&quot;' value='29.424099999999999' />
            <semantic-value key='&quot;San Diego&quot;' value='32.715699999999998' />
            <semantic-value key='&quot;San Francisco&quot;' value='37.774900000000002' />
            <semantic-value key='&quot;San Jose&quot;' value='37.338200000000001' />
            <semantic-value key='&quot;Santa Clara&quot;' value='37.354100000000003' />
            <semantic-value key='&quot;Spokane&quot;' value='47.658799999999999' />
            <semantic-value key='&quot;Syracuse&quot;' value='43.048099999999998' />
            <semantic-value key='&quot;Tampa&quot;' value='27.950600000000001' />
            <semantic-value key='&quot;Washington&quot;' value='38.895099999999999' />
          </semantic-values>
        </column>
        <column-instance column='[city_no_state]' derivation='None' name='[none:city_no_state:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_2940780235170861063]' derivation='Sum' name='[rank:sum:Calculation_2940780235170861063:qk:2]' pivot='key' type='quantitative'>
          <table-calc ordering-field='[federated.0z28jet0nrandf180jljh1w88sv6].[city_no_state]' ordering-type='Field' rank-options='Competition,Descending' type='Rank' />
        </column-instance>
        <column-instance column='[Mean Software Developer Salary (adjusted)]' derivation='Sum' name='[rank:sum:Mean Software Developer Salary (adjusted):qk]' pivot='key' type='quantitative'>
          <table-calc ordering-type='Rows' rank-options='Competition,Descending' type='Rank' />
        </column-instance>
        <column-instance column='[Mean Software Developer Salary (adjusted)]' derivation='Sum' name='[sum:Mean Software Developer Salary (adjusted):qk]' pivot='key' type='quantitative' />
        <column-instance column='[Median Home Price]' derivation='Sum' name='[sum:Median Home Price:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Number of Software Developer Jobs]' derivation='Sum' name='[sum:Number of Software Developer Jobs:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Rent avg]' derivation='Sum' name='[sum:Rent avg:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='87600' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='64600' x='800' y='1000'>
              <zone h='32666' id='3' name='Sheet 3' w='64600' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='32666' id='14' name='SWE Home Buying Power (Salary, Median Home Price)' w='64600' x='800' y='66334'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='32668' id='19' name='Map' w='64600' x='800' y='33666'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='230' h='98000' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='23000' x='65400' y='1000'>
              <zone h='8125' id='13' name='Sheet 3' pane-specification-id='7' param='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Cost of Living Plus Rent avg:qk]' type-v2='color' w='23000' x='65400' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8625' id='9' name='Sheet 3' param='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Rent avg:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='23000' x='65400' y='9125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8625' id='10' name='Sheet 3' param='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Median Home Price:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='23000' x='65400' y='17750'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8625' id='11' name='Sheet 3' param='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Number of Software Developer Jobs:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='23000' x='65400' y='26375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8625' id='17' name='SWE Home Buying Power (Salary, Median Home Price)' param='[federated.0z28jet0nrandf180jljh1w88sv6].[rank:sum:Mean Software Developer Salary (adjusted):qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='23000' x='65400' y='35000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8625' id='21' name='Map' param='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Mean Software Developer Salary (adjusted):qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='23000' x='65400' y='43625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='57' h='8125' id='23' is-fixed='true' name='Map' pane-specification-id='0' param='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Number of Software Developer Jobs:qk]' type-v2='color' w='23000' x='65400' y='52250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8625' id='22' name='Map' param='[federated.0z28jet0nrandf180jljh1w88sv6].[rank:sum:Calculation_2940780235170861063:qk:2]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='23000' x='65400' y='60375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8125' id='18' name='SWE Home Buying Power (Salary, Median Home Price)' pane-specification-id='2' param='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Median Home Price:qk]' type-v2='color' w='23000' x='65400' y='69000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='98000' id='26' type-v2='layout-flow' w='10800' x='88400' y='1000'>
            <zone h='98000' id='20' name='Map' param='[federated.0z28jet0nrandf180jljh1w88sv6].[none:city_no_state:nk]' type-v2='filter' w='10800' x='88400' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1500' minheight='1500' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='30' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='29' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone h='8625' id='9' name='Sheet 3' param='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Rent avg:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='23000' x='65400' y='9125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8625' id='10' name='Sheet 3' param='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Median Home Price:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='23000' x='65400' y='17750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8625' id='11' name='Sheet 3' param='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Number of Software Developer Jobs:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='23000' x='65400' y='26375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='253' h='32666' id='3' is-fixed='true' name='Sheet 3' w='64600' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='13' name='Sheet 3' pane-specification-id='7' param='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Cost of Living Plus Rent avg:qk]' type-v2='color' w='23000' x='65400' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8625' id='21' name='Map' param='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Mean Software Developer Salary (adjusted):qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='23000' x='65400' y='43625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8625' id='22' name='Map' param='[federated.0z28jet0nrandf180jljh1w88sv6].[rank:sum:Calculation_2940780235170861063:qk:2]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='23000' x='65400' y='60375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='98000' id='20' mode='checkdropdown' name='Map' param='[federated.0z28jet0nrandf180jljh1w88sv6].[none:city_no_state:nk]' type-v2='filter' w='10800' x='88400' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='254' h='32668' id='19' is-fixed='true' name='Map' w='64600' x='800' y='33666'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='57' h='8125' id='23' name='Map' pane-specification-id='0' param='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Number of Software Developer Jobs:qk]' type-v2='color' w='23000' x='65400' y='52250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8625' id='17' name='SWE Home Buying Power (Salary, Median Home Price)' param='[federated.0z28jet0nrandf180jljh1w88sv6].[rank:sum:Mean Software Developer Salary (adjusted):qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='23000' x='65400' y='35000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='253' h='32666' id='14' is-fixed='true' name='SWE Home Buying Power (Salary, Median Home Price)' w='64600' x='800' y='66334'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='18' name='SWE Home Buying Power (Salary, Median Home Price)' pane-specification-id='2' param='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Median Home Price:qk]' type-v2='color' w='23000' x='65400' y='69000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{2A3378A7-8CCB-489C-BAC4-B5B1038D5CC6}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='SWE Home Buying Power (Salary, Median Home Price)'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card size='31' type='pages' />
            <card size='69' type='filters' />
            <card size='320' type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='167'>
            <card param='[federated.0z28jet0nrandf180jljh1w88sv6].[none:city_no_state:nk]' type='filter' />
            <card param='[federated.0z28jet0nrandf180jljh1w88sv6].[rank:sum:Calculation_2940780235170861063:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.0z28jet0nrandf180jljh1w88sv6].[rank:sum:Mean Software Developer Salary (adjusted):qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='2' param='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Median Home Price:qk]' type='color' />
            <card pane-specification-id='3' param='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Calculation_2940780235170861063:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0z28jet0nrandf180jljh1w88sv6].[none:City:nk]</field>
            <field>[federated.0z28jet0nrandf180jljh1w88sv6].[none:city_no_state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{958FD78D-D057-47CB-B669-F00EA23BCF3E}' />
    </window>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0z28jet0nrandf180jljh1w88sv6].[none:city_no_state:nk]' type='filter' />
            <card param='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Mean Software Developer Salary (adjusted):qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.0z28jet0nrandf180jljh1w88sv6].[rank:sum:Calculation_2940780235170861063:qk:2]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Number of Software Developer Jobs:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Number of Software Developer Jobs:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0z28jet0nrandf180jljh1w88sv6].[none:City:nk]</field>
            <field>[federated.0z28jet0nrandf180jljh1w88sv6].[none:city_no_state:nk]</field>
            <field>[federated.1yugder0nmhtj7172b4mw0ds8b7w].[none:city_no_state:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{A7C8D137-B85A-4DDD-9C5B-210393554134}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card size='31' type='pages' />
            <card size='259' type='filters' />
            <card size='323' type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0z28jet0nrandf180jljh1w88sv6].[none:city_no_state:nk]' type='filter' />
            <card param='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Rent avg:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Median Home Price:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Number of Software Developer Jobs:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='7' param='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Number of Software Developer Jobs:qk]' type='size' />
            <card pane-specification-id='7' param='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Rent avg:qk]' type='color' />
            <card pane-specification-id='8' param='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Median Home Price:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0z28jet0nrandf180jljh1w88sv6].[none:City:nk]</field>
            <field>[federated.0z28jet0nrandf180jljh1w88sv6].[none:city_no_state:nk]</field>
            <field>[federated.0z28jet0nrandf180jljh1w88sv6].[rank:sum:Calculation_2940780235170861063:ok]</field>
            <field>[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Calculation_2940780235170861063:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{E4F77BDF-6051-4D25-B9BE-A6D6BE555D82}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Map'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='SWE Home Buying Power (Salary, Median Home Price)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Cost of Living Plus Rent avg:qk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='10' />
      <simple-id uuid='{FDF732CB-30BE-40CB-8F72-5EA73668350A}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Dashboard 1' width='384'>
      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
      tHT0RXIApeAEHk2UPrt6+lUfwG1XlXD93OLPhKgo8fvlh3nl3WP0B0QEAconZPCv376CKRNS
      DwyQZZnm014a2jzMrRiHKMZueC3JMv3+MP6giMNm+nTEPvS9kD4NgdWlODqPfs7KAi9BWYB2
      htEUwNihKYDPGJYCqKqq4qmnnqKiokL9QT322GMjDgMd7u72F5oCOBd/JPHIsozL7edkSy92
      q5GyooyUN0n/vHWPNudiBtQvar3n4rutKYBznPb29gFOkLFgOHnCRxNl4/WzkWrjbPX5bNat
      9XnsOBffbZ/Ph9VqvaAUQFL129LSkuzQBcfZ2JIRIj8O5Ycy1pytPp/NuvV6PZIknZX6z1af
      tXf7M6xWa9INWL6onFczgJaWFgoLC8e8Xm1keGHUfS6OSr+o9Z7Nuger92zJmLPF2RvmaWho
      aGicVcbeA3MecjZzHZ2tui/EPp/NtObac/7i13suos0ANDQ0NC5QNAWgoaGhMcoo22GO9Fol
      JHUo/H7/59oLXL906dKlI756jPF4PEiSxIYNG2hsbGTixIl8+OGHHDt2jL6+PkwmE42NjZhM
      Jvbv309xcfGw6zh8+DBHjhxh165d5OTkcOjQoVEtPxmSJLFq1Sqampro6enBarXy3nvvcezY
      MSZPnszevXspKipi69at5Obmjuo0dsuWLdTW1nL69GnGjx/P6tWrOX78OE6nk+rqarKysjhx
      4gQej4fMzNQ2Vh+Krq4uVqxYQUZGBk6nk23btqn32WKxnNG+7969m3379jF16lT6+vp49913
      CYVCjBs3LqYdo/284/u8ceNGampqaGpqIisra8z63NDQwN69ezl8+DDl5eVn9HnX1tby9ttv
      q7tZSZLE//3f/zFp0iQaGxvZs2cPDQ0NlJaWsmvXLgoLC9mwYQOTJ08etTr/+te/0t7ejk6n
      o729fdA6E601WrVqFStXruTKK6/k2WefZc6cOUO2YdeuXVRVVTFlypRht/+JJ57AYDAwZcoU
      du7cybPPPsv777/P5ZdfHpNPqLu7myeeeILS0lJ27tzJ1KlTh13XeecD2L9/P1dffTVGoxG9
      Xo/X62Xx4sW89957al6h999/n1tvvXVE5U+bFslauXLlSvLz8/noo49GtfxkKJEJV1xxBdu3
      b8ftdnPTTTfR2dmpCqTa2lpsNtuor4UIBALccMMNvPfeezQ1NTF58mSmTp3Kxo0bsVqteDwe
      amtrueWWW0atTr1ez+zZswmHw8iyHPMcu7u7z2jfy8vL6evrU/+eN28eDQ0NA9ox2s87us8A
      CxYsQK/Xs3r1ag4cODBmfZ44cSJFRUWsXr2ahoaGM/q8s7OzY9Ikf/jhh5SUlCCKInV1ddx8
      881s3rwZv99PX18fW7duZebMmckLHGadoVAIu93O1VdfjV6v57333ht2nT09PTQ1NVFfX8/p
      06c5deoUx48fp7y8nNraWhobG2lpaSEQCKDT6SgrK2PSpEmsW7eO7du38+ijj7Jnzx6qqqpY
      sGABsizT1NSEIAjcc889bN++nQ0bNlBWVkZZWRn19fVqfrRNmzbx1a9+VZVLL730EidOnOCm
      m27ik08+IRQKsWfPHtauXUtbWxt2u50lS5bwzDPP8O1vf5t33nmHL33pS7zzzjvodDq+973v
      8dJLL9HU1MQ3vvGN888E1Nvby7Fjx1i/fj2tra2qRlQcePv27cPhcHyuEVNDQwMTJkxAkqQz
      Un4i9Ho9/f39bNmyhezsbMLhMGlpaTgcDrxeL729vWzevFl9EUYTg8HABx98QENDA16vF4fD
      gU732ZaAK1euHPXMrE6nU43Hjr/PZ7rv0aPa9PR0te4z/byj+wyRhUdvv/028+bNG9M+A2zY
      sAGIpDg+k887ut6Ojg4EQcDhcCBJknqP7XY7Pp+PhoYGWlpaGDcu8YZEI6lTlmUcDgcbN27k
      wIEDI67zvvvu4/XXXwciz625uRmv10tLSwu1tbX86Ec/IhgM8vOf/5zDhw8DcOONN3Lfffex
      bt06VqxYwbx581i2bBnt7e20t7dz5513ArB69WqWLl3KiRMnmDlzJhdffDFLliwB4Fvf+hbr
      16/n8ccfp6Ojg6amJpYuXco777zDokWLuOqqq/jGN75BRUUF3/72t7FarezcuVOd6TQ1NVFQ
      UEBJSQlVVVV0dHSwfv16HnvsMZYtW3b+KYDMzEymTp3KzJkz6e3txev1IkmSunHCl770JYxG
      I01NTSOu4+OPP2bmzJnqDGO0y0+Ey+WisLCQm266idbWVpxOJ+3t7dTV1ZGfn4/D4eDee+/l
      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
      mUlxcTFr166loKCAKVOmkJ2dzYABA5g/fz65ublMmDCBzp07a253KSkpJCUl0aNHD+bMmUNx
      cTGXXnopXbt2pVOnTphMJk2dESUjI4Pc3FwmT54MwGeffUZlZSWjR4+O22/06NG43W6WLl1K
      XV0dI0eOpHPnzvTo0YP333+fnTt38tvf/haXy4XRaGTRokWsXLmScePGcdZZZ6EoCpmZmXz8
      8cdEIhHNw0SWZc455xw+/fRTVq9ezc0330z//v3j+tfcYBl1pYx9gKLFu0ePHk1ubi7z589n
      yJAhXHXVVUiSROfOnXnvvfc4cOAA48aNo2fPnmRkZLB27VoWLVqEw+Hghhtu0GaW2dnZ2goj
      dqYUdUu8+OKL8Xq99O3bl6KiIiZOnEhRURHvvPMOV199tda3tLQ0QqEQH3zwAbIs88wzz7B5
      82YGDhzYqmugJEktvG+6d++O1Wpt83uK/V0lSYrrb69evejduzfhcJjPP/+cyspKxo8f32L2
      u2fPHvbv34/X6+X666+nf//+2O12fD4fn3zyCRaLhdGjR9OvXz8kScJgMJCXl8ell16qzSpj
      78Fov41GI5IkYTab6datGxdccAGKouBwOEhKSiI1NbWF+25mZmaL37yt3zUxMZHGxkYmTpyI
      3W4nPT2d5ORkTf3U3rW3NQOO/Q579uyJz+fjgw8+IBwO88ADD2i/W/T6mve9tee2vXZiz5ee
      nk51dTVLliwhMzOT9PR00tLSiEQijB8/HkmSsNlsDB06lK5du2oqwX/961/IssyFF15Ijx49
      MJvNcfeFLMuMHTuWlStXsmHDBrp27crQoUNPufKLfr//p1VX+EQaICoqKsQLL7wgVq5cqX32
      P//zPyIQCJzAXp38lJWViTlz5oitW7eKxYsXi3vuuUcIIcT//d//aQbjUxm/3y++/fZbcc89
      9whVVTt07KxZs0Rubq5Yt26dmDJlimaw1tFpi88++0xzIMnNzRW//vWv29x3+vTpYu/evWLZ
      smWHbHfPnj2a80jUmeZI+/fYY4+J3//+96KkpET7/HD6cUJFVVSvOGHCBO2zxx9//AT26KdB
      SkoKWVlZbNmyhYSEBP73f/8XgClTppzgnh0f6uvrycnJ4YknnmhXHdIaY8aMYevWrUiSxLPP
      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
    </thumbnail>
    <thumbnail height='384' name='Map' width='384'>
      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
      gg==
    </thumbnail>
    <thumbnail height='384' name='SWE Home Buying Power (Salary, Median Home Price)' width='384'>
      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
      laHrOk899RQpKSm0aNGChIQEGjRowPTp07nqqqtYtmwZF154IePGjeO2226jd+/eAKxcuTJU
      9tnOdITBYJDnn3+ehIQEGjVqxNGjR3njjTesjE0IIUyJjY3lxRdfpGvXrqFj8+fP57HHHuPq
      q6+mQYMG5OTkoOs6zzzzDJMnTz7lhl1YWMixY8e4++67GTZsGP369WP//v306dOH4cOHc911
      14UGvpSVlXHVVVcxceJE/H5/jWkON9UE5HK5mDFjBjt27ODpp58GTowIGjRokKXBCSGEGQ0b
      NjzlmN/vD7VQNG3alKNHj7J582Z69epFw4YNOXLkSIXX//LLL2zatIlJkyZRXFzMrbfeSt++
      ffnHP/7Bd999R15eXmjy65gxYxg2bBiKonDzzTcTExMT+ZO0gKkE4HQ6ufTSSykuLmbcuHEA
      JCUl0aBBA0uDE0IIq2iaFtpnxOv14nK5ePnll3nggQdYvnw5e/bsITc3l2bNmgEn+jlHjRrF
      fffdR3l5OXfccQdut5uuXbtyxx13sHLlSv75z39y//33M3/+fD766CMUReHRRx9l1KhRNaIf
      wFQTkM1mo02bNtx+++2kp6fjcDhYt24dbrfb6viEEMISderU4aeffsLv97Nu3Tpat27NE088
      QWJiInFxccTExOBwOAgGgxQXF9OsWTM2btyIruvY7XZiYmL45ZdfaNGiBU6nk/T0dHJzcykv
      LycYDFK7dm1q1aqFqqqUlpZW9+lWiulO4EAgwNSpU3n22We57777aN++PQ6HgxtuuMHiECtP
      OoGFEAALFixgyZIl/PTTT7Ru3ZrBgwfTsWNHHn/8cVRVpU+fPlx//fWh12/dupUdO3Ywfvx4
      srOzmT17Ns8++yxz585lwYIFqKrKlVdeSceOHXniiSfQNI3jx48zefJk2rZty9///nfWrl0L
      QJcuXbjllltqRCew6QTg8/mYNm0aN910E7Nnz+aGG27g448/ZvLkyVbHWGmSAIQQ/0sgEMDn
      8/3PvcNnzJjBpZdeStOmTTEMA6/XCxDakMowDMrLy3E6nWiaFnrfr19XU4Q1DPT999/n+++/
      55577qGgoIDy8nJGjBhhdYyVJglACBEut9tNbGxsdYdRJcJKAIFAILTFo67roc3Zq4skACGE
      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
      KpXo9frzrjdkSwA+nw+j0cjSpUtZsGAB27dvR6vVMn36dFwuFwUFBZw6dYr29nbsdjs7duyg
      tbWV7u5u/H4/TU1NNDY24vf7kSQJl8uFxWKhs7MT6B36wunsHZHP5XLhdrvlv+12Oz09PUiS
      RHt7O3V1dXR2diJJEj6fD7vdjsViOWdpwGazMXv2bJYsWYLBYKCoqAiAU6dOMWLECIqLiy9r
      3kmSxJYtW5g6dSp33nkn8+fPR6lUkpaWhlarxeFw4HA4qK2tpb29XX66tNlstLe3A3DNNdeg
      UCjo6emR1+3o6AB6g0tPTw8Wi0WePMjr9dLY2EhDQ4M8OmzgmHR0dKDX65k6depZ01tZWYnV
      auWuu+4iOzubXbt20dPTg81mCxp9saGh4bI/Cfv9fnJzc5k5cyY5OTnMnTtXXh74u6GhgcbG
      RiRJoqenRx7xNrDfgQmTampq8Pl88meB86epqYn6+nq5VNrV1XVGfkqShNVqpb6+PmhE3dMd
      PXoUhULB3XffTVZWFp999hkejwe73S6f59Cbb5djhN22tjba2trIycnh9ttvJzIyEkmSsNls
      1NbWyscuMOJtfX09LS0tQcdQkiSKiopISkri22+/lfOqu7ub5uZm6urqkCSJ5uZm8vPzaWlp
      kUtTzc3N1NbWyvvW1dVFV1cXFotFvravueYa+eZvtVrPe93OnTuX7OxsNBoN2dnZZGRkMG7c
      OLZt24bT6SQvL4/U1NR+yTur1YrT6USSJLq6umhra6O2tlY+X7xeL/X19UO7DUCpVBISEiI/
      RTqdTvbs2UNGRgaNjY2oVCrsdjt6vR6r1UpJSQnJycnU1NTQ1taGXq8nISEBlUrFkSNHkCSJ
      HTt2kJWVRVdXF62traSnp1NaWoper8fpdFJZWYndbmfhwoUUFxdjsViIjY2loqKC+++/n7a2
      Nr788ks0Gg1FRUXccsstZ6RboVDIA+RFR0fT1NQE9M6tMGvWLLZt29anrmIXy+Fw4PP5GD16
      NAqFAoOht5vp7t27WbRoEYWFhZSVlZGcnMzRo0d55JFHOHr0KOXl5RiNRubOncvOnTvJyclh
      //791NXVkZCQQHl5Offddx/bt2/H7XYTExPDjh07eOCBBygpKaG1tRWXy4VCoWDy5MlYrVaO
      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
    </thumbnail>
    <thumbnail height='384' name='Sheet 3' width='384'>
      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
      tNpmKV3XmTdvHrfccguXXXYZxcXFBAV5J6atWbOG6667js8++4z77rvvHPwWzh0VAOpISknO
      9o2U52Y2yvlchblkf/cFQe06+017qXL+Cg8P58svv2T06NFEREQQGRmJ3W5nzpw5REVFcfTo
      Ue6//3769evHbbfdRufOnZFSEhYWxjPPPFPpXFarlcDAQN//58yZQ6dOnUhKSmLevHksXbqU
      6OhoDh06xCOPPIIQgjlz5jBgwADS0tIYO3Ys48ePZ968eTgcDnRd5+GHH+bEiRMUFBQwbtw4
      Hn/8cV+Tzfjx47nwwgv505/+RNu2bSkpKeHPf/4zs2fPplu3bhw+fJinn36aLl2q3mxlZGQA
      MGLECIQQvjt9l8tFUlISr732Gvfffz/33nuv34zOqw0VAOpI6hq5u7Y0/O7fd0JJzq4tdBx3
      H8Kofh1K87rxxhux2+1MmjSJtm3b8sQTTxAfH8/zzz9PSkoKBw8eZM2aNfTp04euXbuybNky
      3G43kyZNqnKud999l61btwLw5z//mX379jF48GD+8Y9/IITgueeeIyUlhR07drB+/XpGjhzJ
      6NGjeeihhzh06BAffPABBw8exOPx8Le//c13g3To0CEcDgcAR44cYcmSJfTo0QODwcA777zD
      DTfcwM033wzAM888w7Rp0xg6dCgHDhzg73//O4sXL65S1sLCQmJiYqrchO3evZs+ffoQGhpK
      REQEaWlpdOjQoVGveXNSncB1JD1uyk4da9RzlqUeQ29AUgxFaSwGg4Fbb72VVatWMWbMGBYu
      XEh2djb33nsvX3zxBadPn/bNEaqY92E0GjEYqlYlo0ePZvr06UyfPp3Q0FA6duzIPffcgxCC
      kydPMnHiRL7++msyMjKqPacQgrS0NHr16lXj0/H8+fN5++23uf3229m1axeZmZl0797d93p6
      ejpdu3YFoGPHjuTm5lZ7nvDwcLKysqp09K5du5atW7cyadIk9u/fzxdffFGXy9niqQBQR5qz
      HI+9tFHP6XGUoZU7GvWcilIfO3bsICMjAyEE7du3x+12s2/fPgYNGsTUqVMZNGhQrc8VGRlJ
      QkICCQkJmEwmDAaDL1Ds3LmT4cOHM2XKFPr371/jOfr27cumTZtwOBw4HA7Ky8t9r3k8HsLC
      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
    </thumbnail>
  </thumbnails>
</workbook>
