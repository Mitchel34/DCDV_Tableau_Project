<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1211.0901                               -->
<workbook original-version='18.1' source-build='2024.3.2 (20243.24.1211.0901)' source-platform='mac' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='SWE_Jobs_Visualization' path='/workbooks' revision='1.4' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='SofwareDeveloperIncomeExpensesperUSACity' inline='true' name='federated.0z28jet0nrandf180jljh1w88sv6' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='SofwareDeveloperIncomeExpensesperUSACity' name='textscan.07eh4od0jnvryt0zky1z3070m946'>
            <connection class='textscan' cleaning='yes' compat='no' csvFile='/Users/mitchelcarson/Desktop/DataCollectionVisualization/DCDV_Tableau_Project/SofwareDeveloperIncomeExpensesperUSACity.csv' dataRefreshTime='' directory='/Users/mitchelcarson/Desktop/DataCollectionVisualization/DCDV_Tableau_Project' filename='Updated_Dataset.csv' interpretationMode='8' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.07eh4od0jnvryt0zky1z3070m946' name='Updated_Dataset.csv' table='[Updated_Dataset#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='Unnamed: 0' ordinal='0' />
            <column datatype='string' name='Metro' ordinal='1' />
            <column datatype='real' name='Mean Software Developer Salary (adjusted)' ordinal='2' />
            <column datatype='real' name='Mean Software Developer Salary (unadjusted)' ordinal='3' />
            <column datatype='real' name='Mean Unadjusted Salary (all occupations)' ordinal='4' />
            <column datatype='real' name='Number of Software Developer Jobs' ordinal='5' />
            <column datatype='real' name='Median Home Price' ordinal='6' />
            <column datatype='string' name='City' ordinal='7' />
            <column datatype='real' name='Cost of Living avg' ordinal='8' />
            <column datatype='real' name='Rent avg' ordinal='9' />
            <column datatype='real' name='Cost of Living Plus Rent avg' ordinal='10' />
            <column datatype='real' name='Local Purchasing Power avg' ordinal='11' />
            <column datatype='string' name='city_no_state' ordinal='12' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Updated_Dataset.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unnamed: 0</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Unnamed: 0]</local-name>
            <parent-name>[Updated_Dataset.csv]</parent-name>
            <remote-alias>Unnamed: 0</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Updated_Dataset.csv_1F45885DFF75465593F1277492FF33F1]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Metro</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Metro]</local-name>
            <parent-name>[Updated_Dataset.csv]</parent-name>
            <remote-alias>Metro</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Updated_Dataset.csv_1F45885DFF75465593F1277492FF33F1]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mean Software Developer Salary (adjusted)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Mean Software Developer Salary (adjusted)]</local-name>
            <parent-name>[Updated_Dataset.csv]</parent-name>
            <remote-alias>Mean Software Developer Salary (adjusted)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Updated_Dataset.csv_1F45885DFF75465593F1277492FF33F1]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mean Software Developer Salary (unadjusted)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Mean Software Developer Salary (unadjusted)]</local-name>
            <parent-name>[Updated_Dataset.csv]</parent-name>
            <remote-alias>Mean Software Developer Salary (unadjusted)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Updated_Dataset.csv_1F45885DFF75465593F1277492FF33F1]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mean Unadjusted Salary (all occupations)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Mean Unadjusted Salary (all occupations)]</local-name>
            <parent-name>[Updated_Dataset.csv]</parent-name>
            <remote-alias>Mean Unadjusted Salary (all occupations)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Updated_Dataset.csv_1F45885DFF75465593F1277492FF33F1]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Software Developer Jobs</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Number of Software Developer Jobs]</local-name>
            <parent-name>[Updated_Dataset.csv]</parent-name>
            <remote-alias>Number of Software Developer Jobs</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Updated_Dataset.csv_1F45885DFF75465593F1277492FF33F1]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Median Home Price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Median Home Price]</local-name>
            <parent-name>[Updated_Dataset.csv]</parent-name>
            <remote-alias>Median Home Price</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Updated_Dataset.csv_1F45885DFF75465593F1277492FF33F1]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Updated_Dataset.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Updated_Dataset.csv_1F45885DFF75465593F1277492FF33F1]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cost of Living avg</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Cost of Living avg]</local-name>
            <parent-name>[Updated_Dataset.csv]</parent-name>
            <remote-alias>Cost of Living avg</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Updated_Dataset.csv_1F45885DFF75465593F1277492FF33F1]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rent avg</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Rent avg]</local-name>
            <parent-name>[Updated_Dataset.csv]</parent-name>
            <remote-alias>Rent avg</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Updated_Dataset.csv_1F45885DFF75465593F1277492FF33F1]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cost of Living Plus Rent avg</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Cost of Living Plus Rent avg]</local-name>
            <parent-name>[Updated_Dataset.csv]</parent-name>
            <remote-alias>Cost of Living Plus Rent avg</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Updated_Dataset.csv_1F45885DFF75465593F1277492FF33F1]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Local Purchasing Power avg</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Local Purchasing Power avg]</local-name>
            <parent-name>[Updated_Dataset.csv]</parent-name>
            <remote-alias>Local Purchasing Power avg</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Updated_Dataset.csv_1F45885DFF75465593F1277492FF33F1]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city_no_state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city_no_state]</local-name>
            <parent-name>[Updated_Dataset.csv]</parent-name>
            <remote-alias>city_no_state</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[Updated_Dataset.csv_1F45885DFF75465593F1277492FF33F1]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Home Buying Power' datatype='real' name='[Calculation_2940780235170861063]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='[Mean Software Developer Salary (unadjusted)]/[Median Home Price]' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <aliases>
          <alias key='&quot;Akron, OH&quot;' value='Akron' />
        </aliases>
      </column>
      <column datatype='real' name='[Cost of Living Plus Rent avg]' role='measure' type='quantitative' />
      <column datatype='real' name='[Mean Software Developer Salary (adjusted)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Mean Software Developer Salary (unadjusted)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Median Home Price]' role='measure' type='quantitative' />
      <column datatype='real' name='[Number of Software Developer Jobs]' role='measure' type='quantitative' />
      <column datatype='real' name='[Rent avg]' role='measure' type='quantitative' />
      <column caption='Updated_Dataset.csv' datatype='table' name='[__tableau_internal_object_id__].[Updated_Dataset.csv_1F45885DFF75465593F1277492FF33F1]' role='measure' type='quantitative' />
      <column caption='City No State' datatype='string' name='[city_no_state]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <semantic-values semantic-role='[Geographical].[Latitude]'>
          <semantic-value key='&quot;Akron&quot;' value='41.081400000000002' />
          <semantic-value key='&quot;Albany&quot;' value='42.6526' />
          <semantic-value key='&quot;Atlanta&quot;' value='33.749000000000002' />
          <semantic-value key='&quot;Austin&quot;' value='30.267199999999999' />
          <semantic-value key='&quot;Baltimore&quot;' value='39.290399999999998' />
          <semantic-value key='&quot;Birmingham&quot;' value='33.518599999999999' />
          <semantic-value key='&quot;Boston&quot;' value='42.360100000000003' />
          <semantic-value key='&quot;Buffalo&quot;' value='42.886400000000002' />
          <semantic-value key='&quot;Charleston&quot;' value='32.776499999999999' />
          <semantic-value key='&quot;Charlotte&quot;' value='35.2271' />
          <semantic-value key='&quot;Cincinnati&quot;' value='39.103099999999998' />
          <semantic-value key='&quot;Cleveland&quot;' value='41.499299999999998' />
          <semantic-value key='&quot;Columbus&quot;' value='39.961199999999998' />
          <semantic-value key='&quot;Dallas&quot;' value='32.776699999999998' />
          <semantic-value key='&quot;Dayton&quot;' value='39.758899999999997' />
          <semantic-value key='&quot;Denver&quot;' value='39.739199999999997' />
          <semantic-value key='&quot;Des Moines&quot;' value='41.586799999999997' />
          <semantic-value key='&quot;Detroit&quot;' value='42.331400000000002' />
          <semantic-value key='&quot;Durham&quot;' value='35.994' />
          <semantic-value key='&quot;Eugene&quot;' value='44.052100000000003' />
          <semantic-value key='&quot;Greensboro&quot;' value='36.072600000000001' />
          <semantic-value key='&quot;Houston&quot;' value='29.760400000000001' />
          <semantic-value key='&quot;Jacksonville&quot;' value='30.3322' />
          <semantic-value key='&quot;Kansas City&quot;' value='39.099699999999999' />
          <semantic-value key='&quot;Las Vegas&quot;' value='36.169899999999998' />
          <semantic-value key='&quot;Lexington&quot;' value='38.040599999999998' />
          <semantic-value key='&quot;Little Rock&quot;' value='34.746499999999997' />
          <semantic-value key='&quot;Long Beach&quot;' value='33.770099999999999' />
          <semantic-value key='&quot;Louisville&quot;' value='38.252699999999997' />
          <semantic-value key='&quot;Madison&quot;' value='43.073099999999997' />
          <semantic-value key='&quot;Memphis&quot;' value='35.149500000000003' />
          <semantic-value key='&quot;Mesa&quot;' value='33.415199999999999' />
          <semantic-value key='&quot;Miami&quot;' value='25.761700000000001' />
          <semantic-value key='&quot;Minneapolis&quot;' value='44.977800000000002' />
          <semantic-value key='&quot;Nashville&quot;' value='36.162700000000001' />
          <semantic-value key='&quot;Oakland&quot;' value='37.804400000000001' />
          <semantic-value key='&quot;Omaha&quot;' value='41.256500000000003' />
          <semantic-value key='&quot;Orlando&quot;' value='28.5383' />
          <semantic-value key='&quot;Philadelphia&quot;' value='39.952599999999997' />
          <semantic-value key='&quot;Phoenix&quot;' value='33.448399999999999' />
          <semantic-value key='&quot;Portland&quot;' value='45.505099999999999' />
          <semantic-value key='&quot;Raleigh&quot;' value='35.779600000000002' />
          <semantic-value key='&quot;Richmond&quot;' value='37.540700000000001' />
          <semantic-value key='&quot;Rochester&quot;' value='43.156599999999997' />
          <semantic-value key='&quot;Sacramento&quot;' value='38.581600000000002' />
          <semantic-value key='&quot;San Antonio&quot;' value='29.424099999999999' />
          <semantic-value key='&quot;San Diego&quot;' value='32.715699999999998' />
          <semantic-value key='&quot;San Francisco&quot;' value='37.774900000000002' />
          <semantic-value key='&quot;San Jose&quot;' value='37.338200000000001' />
          <semantic-value key='&quot;Santa Clara&quot;' value='37.354100000000003' />
          <semantic-value key='&quot;Spokane&quot;' value='47.658799999999999' />
          <semantic-value key='&quot;Syracuse&quot;' value='43.048099999999998' />
          <semantic-value key='&quot;Tampa&quot;' value='27.950600000000001' />
          <semantic-value key='&quot;Washington&quot;' value='38.895099999999999' />
        </semantic-values>
        <semantic-values semantic-role='[Geographical].[Longitude]'>
          <semantic-value key='&quot;Akron&quot;' value='-81.519000000000005' />
          <semantic-value key='&quot;Albany&quot;' value='-73.756200000000007' />
          <semantic-value key='&quot;Atlanta&quot;' value='-84.388000000000005' />
          <semantic-value key='&quot;Austin&quot;' value='-97.743099999999998' />
          <semantic-value key='&quot;Baltimore&quot;' value='-76.612200000000001' />
          <semantic-value key='&quot;Birmingham&quot;' value='-86.810400000000001' />
          <semantic-value key='&quot;Boston&quot;' value='-71.058899999999994' />
          <semantic-value key='&quot;Buffalo&quot;' value='-78.878399999999999' />
          <semantic-value key='&quot;Charleston&quot;' value='-79.931100000000001' />
          <semantic-value key='&quot;Charlotte&quot;' value='-80.843100000000007' />
          <semantic-value key='&quot;Cincinnati&quot;' value='-84.512' />
          <semantic-value key='&quot;Cleveland&quot;' value='-81.694400000000002' />
          <semantic-value key='&quot;Columbus&quot;' value='-82.998800000000003' />
          <semantic-value key='&quot;Dallas&quot;' value='-96.796999999999997' />
          <semantic-value key='&quot;Dayton&quot;' value='-84.191599999999994' />
          <semantic-value key='&quot;Denver&quot;' value='-104.9903' />
          <semantic-value key='&quot;Des Moines&quot;' value='-93.625' />
          <semantic-value key='&quot;Detroit&quot;' value='-83.0458' />
          <semantic-value key='&quot;Durham&quot;' value='-78.898600000000002' />
          <semantic-value key='&quot;Eugene&quot;' value='-123.0868' />
          <semantic-value key='&quot;Greensboro&quot;' value='-79.792000000000002' />
          <semantic-value key='&quot;Houston&quot;' value='-95.369799999999998' />
          <semantic-value key='&quot;Jacksonville&quot;' value='-81.655699999999996' />
          <semantic-value key='&quot;Kansas City&quot;' value='-94.578599999999994' />
          <semantic-value key='&quot;Las Vegas&quot;' value='-115.13979999999999' />
          <semantic-value key='&quot;Lexington&quot;' value='-84.503699999999995' />
          <semantic-value key='&quot;Little Rock&quot;' value='-92.289599999999993' />
          <semantic-value key='&quot;Long Beach&quot;' value='-118.19370000000001' />
          <semantic-value key='&quot;Louisville&quot;' value='-85.758499999999998' />
          <semantic-value key='&quot;Madison&quot;' value='-89.401200000000003' />
          <semantic-value key='&quot;Memphis&quot;' value='-90.049000000000007' />
          <semantic-value key='&quot;Mesa&quot;' value='-111.83150000000001' />
          <semantic-value key='&quot;Miami&quot;' value='-80.191800000000001' />
          <semantic-value key='&quot;Minneapolis&quot;' value='-93.265000000000001' />
          <semantic-value key='&quot;Nashville&quot;' value='-86.781599999999997' />
          <semantic-value key='&quot;Oakland&quot;' value='-122.2711' />
          <semantic-value key='&quot;Omaha&quot;' value='-95.9345' />
          <semantic-value key='&quot;Orlando&quot;' value='-81.379199999999997' />
          <semantic-value key='&quot;Philadelphia&quot;' value='-75.165199999999999' />
          <semantic-value key='&quot;Phoenix&quot;' value='-112.074' />
          <semantic-value key='&quot;Portland&quot;' value='-122.675' />
          <semantic-value key='&quot;Raleigh&quot;' value='-78.638199999999998' />
          <semantic-value key='&quot;Richmond&quot;' value='-77.436000000000007' />
          <semantic-value key='&quot;Rochester&quot;' value='-77.608800000000002' />
          <semantic-value key='&quot;Sacramento&quot;' value='-121.4944' />
          <semantic-value key='&quot;San Antonio&quot;' value='-98.493600000000001' />
          <semantic-value key='&quot;San Diego&quot;' value='-117.1611' />
          <semantic-value key='&quot;San Francisco&quot;' value='-122.4194' />
          <semantic-value key='&quot;San Jose&quot;' value='-121.88630000000001' />
          <semantic-value key='&quot;Santa Clara&quot;' value='-121.9552' />
          <semantic-value key='&quot;Spokane&quot;' value='-117.426' />
          <semantic-value key='&quot;Syracuse&quot;' value='-76.147400000000005' />
          <semantic-value key='&quot;Tampa&quot;' value='-82.4572' />
          <semantic-value key='&quot;Washington&quot;' value='-77.0364' />
        </semantic-values>
      </column>
      <column-instance column='[Mean Software Developer Salary (adjusted)]' derivation='Avg' name='[avg:Mean Software Developer Salary (adjusted):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Mean Software Developer Salary (adjusted)]' derivation='None' name='[none:Mean Software Developer Salary (adjusted):ok]' pivot='key' type='ordinal' />
      <column-instance column='[Mean Software Developer Salary (unadjusted)]' derivation='None' name='[none:Mean Software Developer Salary (unadjusted):ok]' pivot='key' type='ordinal' />
      <column-instance column='[Median Home Price]' derivation='None' name='[none:Median Home Price:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Number of Software Developer Jobs]' derivation='None' name='[none:Number of Software Developer Jobs:ok]' pivot='key' type='ordinal' />
      <column-instance column='[city_no_state]' derivation='None' name='[none:city_no_state:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_2940780235170861063]' derivation='Sum' name='[rank:sum:Calculation_2940780235170861063:ok]' pivot='key' type='ordinal'>
        <table-calc ordering-type='Rows' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Mean Software Developer Salary (adjusted)]' derivation='Sum' name='[rank:sum:Mean Software Developer Salary (adjusted):qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0z28jet0nrandf180jljh1w88sv6].[City]' ordering-type='Field' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Mean Software Developer Salary (adjusted)]' derivation='Sum' name='[rank:sum:Mean Software Developer Salary (adjusted):qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Calculation_2940780235170861063]' derivation='Sum' name='[sum:Calculation_2940780235170861063:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Cost of Living Plus Rent avg]' derivation='Sum' name='[sum:Cost of Living Plus Rent avg:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Mean Software Developer Salary (adjusted)]' derivation='Sum' name='[sum:Mean Software Developer Salary (adjusted):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Median Home Price]' derivation='Sum' name='[sum:Median Home Price:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Software Developer Jobs]' derivation='Sum' name='[sum:Number of Software Developer Jobs:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Rent avg]' derivation='Sum' name='[sum:Rent avg:qk]' pivot='key' type='quantitative' />
      <group caption='Action (City No State)' hidden='true' name='[Action (City No State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[city_no_state]' />
        </groupfilter>
      </group>
      <group caption='Action (City)' hidden='true' name='[Action (City)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[City]' />
        </groupfilter>
      </group>
      <group caption='Action (City,Mean Software Developer Salary (adjusted),Mean Software Developer Salary (unadjusted),Median Home Price,Number of Software Developer Jobs)' hidden='true' name='[Action (City,Mean Software Developer Salary (adjusted),Mean Software Developer Salary (unadjusted),Median Home Price,Number of Software Developer Jobs)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[City]' />
          <groupfilter function='level-members' level='[none:Mean Software Developer Salary (adjusted):ok]' />
          <groupfilter function='level-members' level='[none:Mean Software Developer Salary (unadjusted):ok]' />
          <groupfilter function='level-members' level='[none:Median Home Price:ok]' />
          <groupfilter function='level-members' level='[none:Number of Software Developer Jobs:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (City,Mean Software Developer Salary (adjusted),Mean Software Developer Salary (unadjusted),Median Home Price,Number of Software Developer Jobs,City No State)' hidden='true' name='[Action (City,Mean Software Developer Salary (adjusted),Mean Software Developer Salary (unadjusted),Median Home Price,Number of Software Developer Jobs,City No State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[City]' />
          <groupfilter function='level-members' level='[none:Mean Software Developer Salary (adjusted):ok]' />
          <groupfilter function='level-members' level='[none:Mean Software Developer Salary (unadjusted):ok]' />
          <groupfilter function='level-members' level='[none:Median Home Price:ok]' />
          <groupfilter function='level-members' level='[none:Number of Software Developer Jobs:ok]' />
          <groupfilter function='level-members' level='[city_no_state]' />
        </groupfilter>
      </group>
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/mitchelcarson/Desktop/DataCollectionVisualization/DCDV_Tableau_Project/SofwareDeveloperIncomeExpensesperUSACity.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='02/21/2025 09:25:25 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='SofwareDeveloperIncomeExpensesperUSACity' increment-value='%null%' refresh-type='create' rows-inserted='77' timestamp-start='2025-02-21 21:25:25.851' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Unnamed: 0</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Unnamed: 0]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Unnamed: 0</remote-alias>
              <ordinal>0</ordinal>
              <family>Updated_Dataset.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>77</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Updated_Dataset.csv_1F45885DFF75465593F1277492FF33F1]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Metro</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Metro]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Metro</remote-alias>
              <ordinal>1</ordinal>
              <family>Updated_Dataset.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>69</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[Updated_Dataset.csv_1F45885DFF75465593F1277492FF33F1]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Mean Software Developer Salary (adjusted)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Mean Software Developer Salary (adjusted)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Mean Software Developer Salary (adjusted)</remote-alias>
              <ordinal>2</ordinal>
              <family>Updated_Dataset.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>69</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Updated_Dataset.csv_1F45885DFF75465593F1277492FF33F1]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Mean Software Developer Salary (unadjusted)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Mean Software Developer Salary (unadjusted)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Mean Software Developer Salary (unadjusted)</remote-alias>
              <ordinal>3</ordinal>
              <family>Updated_Dataset.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>68</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Updated_Dataset.csv_1F45885DFF75465593F1277492FF33F1]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Mean Unadjusted Salary (all occupations)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Mean Unadjusted Salary (all occupations)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Mean Unadjusted Salary (all occupations)</remote-alias>
              <ordinal>4</ordinal>
              <family>Updated_Dataset.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>69</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Updated_Dataset.csv_1F45885DFF75465593F1277492FF33F1]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Software Developer Jobs</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Number of Software Developer Jobs]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Software Developer Jobs</remote-alias>
              <ordinal>5</ordinal>
              <family>Updated_Dataset.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>65</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Updated_Dataset.csv_1F45885DFF75465593F1277492FF33F1]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Median Home Price</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Median Home Price]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Median Home Price</remote-alias>
              <ordinal>6</ordinal>
              <family>Updated_Dataset.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>69</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Updated_Dataset.csv_1F45885DFF75465593F1277492FF33F1]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>7</ordinal>
              <family>Updated_Dataset.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>77</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[Updated_Dataset.csv_1F45885DFF75465593F1277492FF33F1]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Cost of Living avg</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Cost of Living avg]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Cost of Living avg</remote-alias>
              <ordinal>8</ordinal>
              <family>Updated_Dataset.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>76</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Updated_Dataset.csv_1F45885DFF75465593F1277492FF33F1]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Rent avg</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Rent avg]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Rent avg</remote-alias>
              <ordinal>9</ordinal>
              <family>Updated_Dataset.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>77</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Updated_Dataset.csv_1F45885DFF75465593F1277492FF33F1]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Cost of Living Plus Rent avg</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Cost of Living Plus Rent avg]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Cost of Living Plus Rent avg</remote-alias>
              <ordinal>10</ordinal>
              <family>Updated_Dataset.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>76</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Updated_Dataset.csv_1F45885DFF75465593F1277492FF33F1]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Local Purchasing Power avg</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Local Purchasing Power avg]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Local Purchasing Power avg</remote-alias>
              <ordinal>11</ordinal>
              <family>Updated_Dataset.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>77</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Updated_Dataset.csv_1F45885DFF75465593F1277492FF33F1]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>city_no_state</remote-name>
              <remote-type>129</remote-type>
              <local-name>[city_no_state]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>city_no_state</remote-alias>
              <ordinal>12</ordinal>
              <family>Updated_Dataset.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>77</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[Updated_Dataset.csv_1F45885DFF75465593F1277492FF33F1]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
        <filter class='categorical' column='[Action (City)]'>
          <groupfilter function='level-members' level='[City]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        </filter>
        <filter class='categorical' column='[none:city_no_state:nk]'>
          <groupfilter function='level-members' level='[none:city_no_state:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          <target field='[federated.0z28jet0nrandf180jljh1w88sv6].[none:city_no_state:nk]' />
        </filter>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0z28jet0nrandf180jljh1w88sv6].[avg:Mean Software Developer Salary (adjusted):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0z28jet0nrandf180jljh1w88sv6].[rank:avg:Mean Software Developer Salary (adjusted):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0z28jet0nrandf180jljh1w88sv6].[rank:sum:Mean Software Developer Salary (adjusted):qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0z28jet0nrandf180jljh1w88sv6].[rank:sum:Mean Software Developer Salary (adjusted):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Mean Software Developer Salary (adjusted):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Number of Software Developer Jobs:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0z28jet0nrandf180jljh1w88sv6].[rank:sum:Calculation_2940780235170861063:ok]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Calculation_2940780235170861063:ok]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Cost of Living Plus Rent avg:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Median Home Price:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Rent avg:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='F1' />
        <field-sort-custom-order field='Metro' />
        <field-sort-custom-order field='Mean Software Developer Salary (adjusted)' />
        <field-sort-custom-order field='Mean Software Developer Salary (unadjusted)' />
        <field-sort-custom-order field='Mean Unadjusted Salary (all occupations)' />
        <field-sort-custom-order field='Number of Software Developer Jobs' />
        <field-sort-custom-order field='Median Home Price' />
        <field-sort-custom-order field='City' />
        <field-sort-custom-order field='Cost of Living avg' />
        <field-sort-custom-order field='Rent avg' />
        <field-sort-custom-order field='Cost of Living Plus Rent avg' />
        <field-sort-custom-order field='Local Purchasing Power avg' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field='Calculation_2940780235170689029' />
        <field-sort-custom-order field='Calculation_2940780235170861063' />
        <field-sort-custom-order field='Bang4Buck (copy)_2940780235191857160' />
        <field-sort-custom-order field='Calculation_2940780235170766854' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <object-graph>
        <objects>
          <object caption='Updated_Dataset.csv' id='Updated_Dataset.csv_1F45885DFF75465593F1277492FF33F1'>
            <properties context=''>
              <relation connection='textscan.07eh4od0jnvryt0zky1z3070m946' name='Updated_Dataset.csv' table='[Updated_Dataset#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='Unnamed: 0' ordinal='0' />
                  <column datatype='string' name='Metro' ordinal='1' />
                  <column datatype='real' name='Mean Software Developer Salary (adjusted)' ordinal='2' />
                  <column datatype='real' name='Mean Software Developer Salary (unadjusted)' ordinal='3' />
                  <column datatype='real' name='Mean Unadjusted Salary (all occupations)' ordinal='4' />
                  <column datatype='real' name='Number of Software Developer Jobs' ordinal='5' />
                  <column datatype='real' name='Median Home Price' ordinal='6' />
                  <column datatype='string' name='City' ordinal='7' />
                  <column datatype='real' name='Cost of Living avg' ordinal='8' />
                  <column datatype='real' name='Rent avg' ordinal='9' />
                  <column datatype='real' name='Cost of Living Plus Rent avg' ordinal='10' />
                  <column datatype='real' name='Local Purchasing Power avg' ordinal='11' />
                  <column datatype='string' name='city_no_state' ordinal='12' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.0z28jet0nrandf180jljh1w88sv6'>
      <datasources>
        <datasource caption='SofwareDeveloperIncomeExpensesperUSACity' name='federated.0z28jet0nrandf180jljh1w88sv6' />
      </datasources>
      <datasource-dependencies datasource='federated.0z28jet0nrandf180jljh1w88sv6'>
        <column datatype='real' name='[Mean Software Developer Salary (adjusted)]' role='measure' type='quantitative' />
        <column datatype='real' name='[Median Home Price]' role='measure' type='quantitative' />
        <column datatype='real' name='[Number of Software Developer Jobs]' role='measure' type='quantitative' />
        <column datatype='real' name='[Rent avg]' role='measure' type='quantitative' />
        <column caption='City No State' datatype='string' name='[city_no_state]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
          <semantic-values semantic-role='[Geographical].[Latitude]'>
            <semantic-value key='&quot;Akron&quot;' value='41.081400000000002' />
            <semantic-value key='&quot;Albany&quot;' value='42.6526' />
            <semantic-value key='&quot;Atlanta&quot;' value='33.749000000000002' />
            <semantic-value key='&quot;Austin&quot;' value='30.267199999999999' />
            <semantic-value key='&quot;Baltimore&quot;' value='39.290399999999998' />
            <semantic-value key='&quot;Birmingham&quot;' value='33.518599999999999' />
            <semantic-value key='&quot;Boston&quot;' value='42.360100000000003' />
            <semantic-value key='&quot;Buffalo&quot;' value='42.886400000000002' />
            <semantic-value key='&quot;Charleston&quot;' value='32.776499999999999' />
            <semantic-value key='&quot;Charlotte&quot;' value='35.2271' />
            <semantic-value key='&quot;Cincinnati&quot;' value='39.103099999999998' />
            <semantic-value key='&quot;Cleveland&quot;' value='41.499299999999998' />
            <semantic-value key='&quot;Columbus&quot;' value='39.961199999999998' />
            <semantic-value key='&quot;Dallas&quot;' value='32.776699999999998' />
            <semantic-value key='&quot;Dayton&quot;' value='39.758899999999997' />
            <semantic-value key='&quot;Denver&quot;' value='39.739199999999997' />
            <semantic-value key='&quot;Des Moines&quot;' value='41.586799999999997' />
            <semantic-value key='&quot;Detroit&quot;' value='42.331400000000002' />
            <semantic-value key='&quot;Durham&quot;' value='35.994' />
            <semantic-value key='&quot;Eugene&quot;' value='44.052100000000003' />
            <semantic-value key='&quot;Greensboro&quot;' value='36.072600000000001' />
            <semantic-value key='&quot;Houston&quot;' value='29.760400000000001' />
            <semantic-value key='&quot;Jacksonville&quot;' value='30.3322' />
            <semantic-value key='&quot;Kansas City&quot;' value='39.099699999999999' />
            <semantic-value key='&quot;Las Vegas&quot;' value='36.169899999999998' />
            <semantic-value key='&quot;Lexington&quot;' value='38.040599999999998' />
            <semantic-value key='&quot;Little Rock&quot;' value='34.746499999999997' />
            <semantic-value key='&quot;Long Beach&quot;' value='33.770099999999999' />
            <semantic-value key='&quot;Louisville&quot;' value='38.252699999999997' />
            <semantic-value key='&quot;Madison&quot;' value='43.073099999999997' />
            <semantic-value key='&quot;Memphis&quot;' value='35.149500000000003' />
            <semantic-value key='&quot;Mesa&quot;' value='33.415199999999999' />
            <semantic-value key='&quot;Miami&quot;' value='25.761700000000001' />
            <semantic-value key='&quot;Minneapolis&quot;' value='44.977800000000002' />
            <semantic-value key='&quot;Nashville&quot;' value='36.162700000000001' />
            <semantic-value key='&quot;Oakland&quot;' value='37.804400000000001' />
            <semantic-value key='&quot;Omaha&quot;' value='41.256500000000003' />
            <semantic-value key='&quot;Orlando&quot;' value='28.5383' />
            <semantic-value key='&quot;Philadelphia&quot;' value='39.952599999999997' />
            <semantic-value key='&quot;Phoenix&quot;' value='33.448399999999999' />
            <semantic-value key='&quot;Portland&quot;' value='45.505099999999999' />
            <semantic-value key='&quot;Raleigh&quot;' value='35.779600000000002' />
            <semantic-value key='&quot;Richmond&quot;' value='37.540700000000001' />
            <semantic-value key='&quot;Rochester&quot;' value='43.156599999999997' />
            <semantic-value key='&quot;Sacramento&quot;' value='38.581600000000002' />
            <semantic-value key='&quot;San Antonio&quot;' value='29.424099999999999' />
            <semantic-value key='&quot;San Diego&quot;' value='32.715699999999998' />
            <semantic-value key='&quot;San Francisco&quot;' value='37.774900000000002' />
            <semantic-value key='&quot;San Jose&quot;' value='37.338200000000001' />
            <semantic-value key='&quot;Santa Clara&quot;' value='37.354100000000003' />
            <semantic-value key='&quot;Spokane&quot;' value='47.658799999999999' />
            <semantic-value key='&quot;Syracuse&quot;' value='43.048099999999998' />
            <semantic-value key='&quot;Tampa&quot;' value='27.950600000000001' />
            <semantic-value key='&quot;Washington&quot;' value='38.895099999999999' />
          </semantic-values>
          <semantic-values semantic-role='[Geographical].[Longitude]'>
            <semantic-value key='&quot;Akron&quot;' value='-81.519000000000005' />
            <semantic-value key='&quot;Albany&quot;' value='-73.756200000000007' />
            <semantic-value key='&quot;Atlanta&quot;' value='-84.388000000000005' />
            <semantic-value key='&quot;Austin&quot;' value='-97.743099999999998' />
            <semantic-value key='&quot;Baltimore&quot;' value='-76.612200000000001' />
            <semantic-value key='&quot;Birmingham&quot;' value='-86.810400000000001' />
            <semantic-value key='&quot;Boston&quot;' value='-71.058899999999994' />
            <semantic-value key='&quot;Buffalo&quot;' value='-78.878399999999999' />
            <semantic-value key='&quot;Charleston&quot;' value='-79.931100000000001' />
            <semantic-value key='&quot;Charlotte&quot;' value='-80.843100000000007' />
            <semantic-value key='&quot;Cincinnati&quot;' value='-84.512' />
            <semantic-value key='&quot;Cleveland&quot;' value='-81.694400000000002' />
            <semantic-value key='&quot;Columbus&quot;' value='-82.998800000000003' />
            <semantic-value key='&quot;Dallas&quot;' value='-96.796999999999997' />
            <semantic-value key='&quot;Dayton&quot;' value='-84.191599999999994' />
            <semantic-value key='&quot;Denver&quot;' value='-104.9903' />
            <semantic-value key='&quot;Des Moines&quot;' value='-93.625' />
            <semantic-value key='&quot;Detroit&quot;' value='-83.0458' />
            <semantic-value key='&quot;Durham&quot;' value='-78.898600000000002' />
            <semantic-value key='&quot;Eugene&quot;' value='-123.0868' />
            <semantic-value key='&quot;Greensboro&quot;' value='-79.792000000000002' />
            <semantic-value key='&quot;Houston&quot;' value='-95.369799999999998' />
            <semantic-value key='&quot;Jacksonville&quot;' value='-81.655699999999996' />
            <semantic-value key='&quot;Kansas City&quot;' value='-94.578599999999994' />
            <semantic-value key='&quot;Las Vegas&quot;' value='-115.13979999999999' />
            <semantic-value key='&quot;Lexington&quot;' value='-84.503699999999995' />
            <semantic-value key='&quot;Little Rock&quot;' value='-92.289599999999993' />
            <semantic-value key='&quot;Long Beach&quot;' value='-118.19370000000001' />
            <semantic-value key='&quot;Louisville&quot;' value='-85.758499999999998' />
            <semantic-value key='&quot;Madison&quot;' value='-89.401200000000003' />
            <semantic-value key='&quot;Memphis&quot;' value='-90.049000000000007' />
            <semantic-value key='&quot;Mesa&quot;' value='-111.83150000000001' />
            <semantic-value key='&quot;Miami&quot;' value='-80.191800000000001' />
            <semantic-value key='&quot;Minneapolis&quot;' value='-93.265000000000001' />
            <semantic-value key='&quot;Nashville&quot;' value='-86.781599999999997' />
            <semantic-value key='&quot;Oakland&quot;' value='-122.2711' />
            <semantic-value key='&quot;Omaha&quot;' value='-95.9345' />
            <semantic-value key='&quot;Orlando&quot;' value='-81.379199999999997' />
            <semantic-value key='&quot;Philadelphia&quot;' value='-75.165199999999999' />
            <semantic-value key='&quot;Phoenix&quot;' value='-112.074' />
            <semantic-value key='&quot;Portland&quot;' value='-122.675' />
            <semantic-value key='&quot;Raleigh&quot;' value='-78.638199999999998' />
            <semantic-value key='&quot;Richmond&quot;' value='-77.436000000000007' />
            <semantic-value key='&quot;Rochester&quot;' value='-77.608800000000002' />
            <semantic-value key='&quot;Sacramento&quot;' value='-121.4944' />
            <semantic-value key='&quot;San Antonio&quot;' value='-98.493600000000001' />
            <semantic-value key='&quot;San Diego&quot;' value='-117.1611' />
            <semantic-value key='&quot;San Francisco&quot;' value='-122.4194' />
            <semantic-value key='&quot;San Jose&quot;' value='-121.88630000000001' />
            <semantic-value key='&quot;Santa Clara&quot;' value='-121.9552' />
            <semantic-value key='&quot;Spokane&quot;' value='-117.426' />
            <semantic-value key='&quot;Syracuse&quot;' value='-76.147400000000005' />
            <semantic-value key='&quot;Tampa&quot;' value='-82.4572' />
            <semantic-value key='&quot;Washington&quot;' value='-77.0364' />
          </semantic-values>
        </column>
        <column-instance column='[city_no_state]' derivation='None' name='[none:city_no_state:nk]' pivot='key' type='nominal' />
        <column-instance column='[Mean Software Developer Salary (adjusted)]' derivation='Sum' name='[sum:Mean Software Developer Salary (adjusted):qk]' pivot='key' type='quantitative' />
        <column-instance column='[Median Home Price]' derivation='Sum' name='[sum:Median Home Price:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Number of Software Developer Jobs]' derivation='Sum' name='[sum:Number of Software Developer Jobs:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Rent avg]' derivation='Sum' name='[sum:Rent avg:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.0z28jet0nrandf180jljh1w88sv6].[Action (City)]'>
        <groupfilter function='level-members' level='[City]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.0z28jet0nrandf180jljh1w88sv6].[none:city_no_state:nk]'>
        <groupfilter function='level-members' level='[none:city_no_state:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.0z28jet0nrandf180jljh1w88sv6].[none:city_no_state:nk]' />
      </filter>
      <filter class='quantitative' column='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Mean Software Developer Salary (adjusted):qk]' included-values='in-range-or-null'>
        <min>72811.0</min>
        <max>117552.0</max>
      </filter>
      <filter class='quantitative' column='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Median Home Price:qk]' included-values='all' />
      <filter class='quantitative' column='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Number of Software Developer Jobs:qk]' included-values='in-range-or-null'>
        <min>1120.0</min>
        <max>98650.0</max>
      </filter>
      <filter class='quantitative' column='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Rent avg:qk]' included-values='in-range-or-null'>
        <min>879.29999999999995</min>
        <max>4163.3000000000002</max>
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter1' name='[Action1_C2795BDC752846F9950068B26B7E5065]'>
      <activation type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' />
      <link caption='Filter1' delimiter=',' escape='\' expression='tsl:Dashboard%201?%5Bfederated.0z28jet0nrandf180jljh1w88sv6%5D.%5BCity%5D~s0=&lt;[federated.0z28jet0nrandf180jljh1w88sv6].[City]~na&gt;&amp;%5Bfederated.0z28jet0nrandf180jljh1w88sv6%5D.%5BMean%20Software%20Developer%20Salary%20%28adjusted%29%5D~s0=&lt;[federated.0z28jet0nrandf180jljh1w88sv6].[Mean Software Developer Salary (adjusted)]~na&gt;&amp;%5Bfederated.0z28jet0nrandf180jljh1w88sv6%5D.%5BMean%20Software%20Developer%20Salary%20%28unadjusted%29%5D~s0=&lt;[federated.0z28jet0nrandf180jljh1w88sv6].[Mean Software Developer Salary (unadjusted)]~na&gt;&amp;%5Bfederated.0z28jet0nrandf180jljh1w88sv6%5D.%5BMedian%20Home%20Price%5D~s0=&lt;[federated.0z28jet0nrandf180jljh1w88sv6].[Median Home Price]~na&gt;&amp;%5Bfederated.0z28jet0nrandf180jljh1w88sv6%5D.%5BNumber%20of%20Software%20Developer%20Jobs%5D~s0=&lt;[federated.0z28jet0nrandf180jljh1w88sv6].[Number of Software Developer Jobs]~na&gt;&amp;%5Bfederated.0z28jet0nrandf180jljh1w88sv6%5D.%5Bcity_no_state%5D~s0=&lt;[federated.0z28jet0nrandf180jljh1w88sv6].[city_no_state]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action2_65147A3B6A0B413F97349F6072C5B31A]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Scatterplot' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action3_905E1EB5F8204F0BA3CC35646727312E]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action4_A9BC78D2BDB444A5AFF703B36F9B9B8C]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Bar Plot' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <datasources>
      <datasource caption='SofwareDeveloperIncomeExpensesperUSACity' name='federated.0z28jet0nrandf180jljh1w88sv6' />
    </datasources>
    <datasource-dependencies datasource='federated.0z28jet0nrandf180jljh1w88sv6'>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <aliases>
          <alias key='&quot;Akron, OH&quot;' value='Akron' />
        </aliases>
      </column>
      <column datatype='real' name='[Mean Software Developer Salary (adjusted)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Mean Software Developer Salary (unadjusted)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Median Home Price]' role='measure' type='quantitative' />
      <column datatype='real' name='[Number of Software Developer Jobs]' role='measure' type='quantitative' />
      <column caption='City No State' datatype='string' name='[city_no_state]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <semantic-values semantic-role='[Geographical].[Latitude]'>
          <semantic-value key='&quot;Akron&quot;' value='41.081400000000002' />
          <semantic-value key='&quot;Albany&quot;' value='42.6526' />
          <semantic-value key='&quot;Atlanta&quot;' value='33.749000000000002' />
          <semantic-value key='&quot;Austin&quot;' value='30.267199999999999' />
          <semantic-value key='&quot;Baltimore&quot;' value='39.290399999999998' />
          <semantic-value key='&quot;Birmingham&quot;' value='33.518599999999999' />
          <semantic-value key='&quot;Boston&quot;' value='42.360100000000003' />
          <semantic-value key='&quot;Buffalo&quot;' value='42.886400000000002' />
          <semantic-value key='&quot;Charleston&quot;' value='32.776499999999999' />
          <semantic-value key='&quot;Charlotte&quot;' value='35.2271' />
          <semantic-value key='&quot;Cincinnati&quot;' value='39.103099999999998' />
          <semantic-value key='&quot;Cleveland&quot;' value='41.499299999999998' />
          <semantic-value key='&quot;Columbus&quot;' value='39.961199999999998' />
          <semantic-value key='&quot;Dallas&quot;' value='32.776699999999998' />
          <semantic-value key='&quot;Dayton&quot;' value='39.758899999999997' />
          <semantic-value key='&quot;Denver&quot;' value='39.739199999999997' />
          <semantic-value key='&quot;Des Moines&quot;' value='41.586799999999997' />
          <semantic-value key='&quot;Detroit&quot;' value='42.331400000000002' />
          <semantic-value key='&quot;Durham&quot;' value='35.994' />
          <semantic-value key='&quot;Eugene&quot;' value='44.052100000000003' />
          <semantic-value key='&quot;Greensboro&quot;' value='36.072600000000001' />
          <semantic-value key='&quot;Houston&quot;' value='29.760400000000001' />
          <semantic-value key='&quot;Jacksonville&quot;' value='30.3322' />
          <semantic-value key='&quot;Kansas City&quot;' value='39.099699999999999' />
          <semantic-value key='&quot;Las Vegas&quot;' value='36.169899999999998' />
          <semantic-value key='&quot;Lexington&quot;' value='38.040599999999998' />
          <semantic-value key='&quot;Little Rock&quot;' value='34.746499999999997' />
          <semantic-value key='&quot;Long Beach&quot;' value='33.770099999999999' />
          <semantic-value key='&quot;Louisville&quot;' value='38.252699999999997' />
          <semantic-value key='&quot;Madison&quot;' value='43.073099999999997' />
          <semantic-value key='&quot;Memphis&quot;' value='35.149500000000003' />
          <semantic-value key='&quot;Mesa&quot;' value='33.415199999999999' />
          <semantic-value key='&quot;Miami&quot;' value='25.761700000000001' />
          <semantic-value key='&quot;Minneapolis&quot;' value='44.977800000000002' />
          <semantic-value key='&quot;Nashville&quot;' value='36.162700000000001' />
          <semantic-value key='&quot;Oakland&quot;' value='37.804400000000001' />
          <semantic-value key='&quot;Omaha&quot;' value='41.256500000000003' />
          <semantic-value key='&quot;Orlando&quot;' value='28.5383' />
          <semantic-value key='&quot;Philadelphia&quot;' value='39.952599999999997' />
          <semantic-value key='&quot;Phoenix&quot;' value='33.448399999999999' />
          <semantic-value key='&quot;Portland&quot;' value='45.505099999999999' />
          <semantic-value key='&quot;Raleigh&quot;' value='35.779600000000002' />
          <semantic-value key='&quot;Richmond&quot;' value='37.540700000000001' />
          <semantic-value key='&quot;Rochester&quot;' value='43.156599999999997' />
          <semantic-value key='&quot;Sacramento&quot;' value='38.581600000000002' />
          <semantic-value key='&quot;San Antonio&quot;' value='29.424099999999999' />
          <semantic-value key='&quot;San Diego&quot;' value='32.715699999999998' />
          <semantic-value key='&quot;San Francisco&quot;' value='37.774900000000002' />
          <semantic-value key='&quot;San Jose&quot;' value='37.338200000000001' />
          <semantic-value key='&quot;Santa Clara&quot;' value='37.354100000000003' />
          <semantic-value key='&quot;Spokane&quot;' value='47.658799999999999' />
          <semantic-value key='&quot;Syracuse&quot;' value='43.048099999999998' />
          <semantic-value key='&quot;Tampa&quot;' value='27.950600000000001' />
          <semantic-value key='&quot;Washington&quot;' value='38.895099999999999' />
        </semantic-values>
        <semantic-values semantic-role='[Geographical].[Longitude]'>
          <semantic-value key='&quot;Akron&quot;' value='-81.519000000000005' />
          <semantic-value key='&quot;Albany&quot;' value='-73.756200000000007' />
          <semantic-value key='&quot;Atlanta&quot;' value='-84.388000000000005' />
          <semantic-value key='&quot;Austin&quot;' value='-97.743099999999998' />
          <semantic-value key='&quot;Baltimore&quot;' value='-76.612200000000001' />
          <semantic-value key='&quot;Birmingham&quot;' value='-86.810400000000001' />
          <semantic-value key='&quot;Boston&quot;' value='-71.058899999999994' />
          <semantic-value key='&quot;Buffalo&quot;' value='-78.878399999999999' />
          <semantic-value key='&quot;Charleston&quot;' value='-79.931100000000001' />
          <semantic-value key='&quot;Charlotte&quot;' value='-80.843100000000007' />
          <semantic-value key='&quot;Cincinnati&quot;' value='-84.512' />
          <semantic-value key='&quot;Cleveland&quot;' value='-81.694400000000002' />
          <semantic-value key='&quot;Columbus&quot;' value='-82.998800000000003' />
          <semantic-value key='&quot;Dallas&quot;' value='-96.796999999999997' />
          <semantic-value key='&quot;Dayton&quot;' value='-84.191599999999994' />
          <semantic-value key='&quot;Denver&quot;' value='-104.9903' />
          <semantic-value key='&quot;Des Moines&quot;' value='-93.625' />
          <semantic-value key='&quot;Detroit&quot;' value='-83.0458' />
          <semantic-value key='&quot;Durham&quot;' value='-78.898600000000002' />
          <semantic-value key='&quot;Eugene&quot;' value='-123.0868' />
          <semantic-value key='&quot;Greensboro&quot;' value='-79.792000000000002' />
          <semantic-value key='&quot;Houston&quot;' value='-95.369799999999998' />
          <semantic-value key='&quot;Jacksonville&quot;' value='-81.655699999999996' />
          <semantic-value key='&quot;Kansas City&quot;' value='-94.578599999999994' />
          <semantic-value key='&quot;Las Vegas&quot;' value='-115.13979999999999' />
          <semantic-value key='&quot;Lexington&quot;' value='-84.503699999999995' />
          <semantic-value key='&quot;Little Rock&quot;' value='-92.289599999999993' />
          <semantic-value key='&quot;Long Beach&quot;' value='-118.19370000000001' />
          <semantic-value key='&quot;Louisville&quot;' value='-85.758499999999998' />
          <semantic-value key='&quot;Madison&quot;' value='-89.401200000000003' />
          <semantic-value key='&quot;Memphis&quot;' value='-90.049000000000007' />
          <semantic-value key='&quot;Mesa&quot;' value='-111.83150000000001' />
          <semantic-value key='&quot;Miami&quot;' value='-80.191800000000001' />
          <semantic-value key='&quot;Minneapolis&quot;' value='-93.265000000000001' />
          <semantic-value key='&quot;Nashville&quot;' value='-86.781599999999997' />
          <semantic-value key='&quot;Oakland&quot;' value='-122.2711' />
          <semantic-value key='&quot;Omaha&quot;' value='-95.9345' />
          <semantic-value key='&quot;Orlando&quot;' value='-81.379199999999997' />
          <semantic-value key='&quot;Philadelphia&quot;' value='-75.165199999999999' />
          <semantic-value key='&quot;Phoenix&quot;' value='-112.074' />
          <semantic-value key='&quot;Portland&quot;' value='-122.675' />
          <semantic-value key='&quot;Raleigh&quot;' value='-78.638199999999998' />
          <semantic-value key='&quot;Richmond&quot;' value='-77.436000000000007' />
          <semantic-value key='&quot;Rochester&quot;' value='-77.608800000000002' />
          <semantic-value key='&quot;Sacramento&quot;' value='-121.4944' />
          <semantic-value key='&quot;San Antonio&quot;' value='-98.493600000000001' />
          <semantic-value key='&quot;San Diego&quot;' value='-117.1611' />
          <semantic-value key='&quot;San Francisco&quot;' value='-122.4194' />
          <semantic-value key='&quot;San Jose&quot;' value='-121.88630000000001' />
          <semantic-value key='&quot;Santa Clara&quot;' value='-121.9552' />
          <semantic-value key='&quot;Spokane&quot;' value='-117.426' />
          <semantic-value key='&quot;Syracuse&quot;' value='-76.147400000000005' />
          <semantic-value key='&quot;Tampa&quot;' value='-82.4572' />
          <semantic-value key='&quot;Washington&quot;' value='-77.0364' />
        </semantic-values>
      </column>
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='Bar Plot'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Salary, Cost of Housing, &amp;  Home Buying Power for Software Engineers in the US</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SofwareDeveloperIncomeExpensesperUSACity' name='federated.0z28jet0nrandf180jljh1w88sv6' />
          </datasources>
          <datasource-dependencies datasource='federated.0z28jet0nrandf180jljh1w88sv6'>
            <column caption='Home Buying Power' datatype='real' name='[Calculation_2940780235170861063]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='[Mean Software Developer Salary (unadjusted)]/[Median Home Price]' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;Akron, OH&quot;' value='Akron' />
              </aliases>
            </column>
            <column datatype='real' name='[Mean Software Developer Salary (adjusted)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Mean Software Developer Salary (unadjusted)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Median Home Price]' role='measure' type='quantitative' />
            <column datatype='real' name='[Number of Software Developer Jobs]' role='measure' type='quantitative' />
            <column datatype='real' name='[Rent avg]' role='measure' type='quantitative' />
            <column caption='City No State' datatype='string' name='[city_no_state]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Akron&quot;' value='41.081400000000002' />
                <semantic-value key='&quot;Albany&quot;' value='42.6526' />
                <semantic-value key='&quot;Atlanta&quot;' value='33.749000000000002' />
                <semantic-value key='&quot;Austin&quot;' value='30.267199999999999' />
                <semantic-value key='&quot;Baltimore&quot;' value='39.290399999999998' />
                <semantic-value key='&quot;Birmingham&quot;' value='33.518599999999999' />
                <semantic-value key='&quot;Boston&quot;' value='42.360100000000003' />
                <semantic-value key='&quot;Buffalo&quot;' value='42.886400000000002' />
                <semantic-value key='&quot;Charleston&quot;' value='32.776499999999999' />
                <semantic-value key='&quot;Charlotte&quot;' value='35.2271' />
                <semantic-value key='&quot;Cincinnati&quot;' value='39.103099999999998' />
                <semantic-value key='&quot;Cleveland&quot;' value='41.499299999999998' />
                <semantic-value key='&quot;Columbus&quot;' value='39.961199999999998' />
                <semantic-value key='&quot;Dallas&quot;' value='32.776699999999998' />
                <semantic-value key='&quot;Dayton&quot;' value='39.758899999999997' />
                <semantic-value key='&quot;Denver&quot;' value='39.739199999999997' />
                <semantic-value key='&quot;Des Moines&quot;' value='41.586799999999997' />
                <semantic-value key='&quot;Detroit&quot;' value='42.331400000000002' />
                <semantic-value key='&quot;Durham&quot;' value='35.994' />
                <semantic-value key='&quot;Eugene&quot;' value='44.052100000000003' />
                <semantic-value key='&quot;Greensboro&quot;' value='36.072600000000001' />
                <semantic-value key='&quot;Houston&quot;' value='29.760400000000001' />
                <semantic-value key='&quot;Jacksonville&quot;' value='30.3322' />
                <semantic-value key='&quot;Kansas City&quot;' value='39.099699999999999' />
                <semantic-value key='&quot;Las Vegas&quot;' value='36.169899999999998' />
                <semantic-value key='&quot;Lexington&quot;' value='38.040599999999998' />
                <semantic-value key='&quot;Little Rock&quot;' value='34.746499999999997' />
                <semantic-value key='&quot;Long Beach&quot;' value='33.770099999999999' />
                <semantic-value key='&quot;Louisville&quot;' value='38.252699999999997' />
                <semantic-value key='&quot;Madison&quot;' value='43.073099999999997' />
                <semantic-value key='&quot;Memphis&quot;' value='35.149500000000003' />
                <semantic-value key='&quot;Mesa&quot;' value='33.415199999999999' />
                <semantic-value key='&quot;Miami&quot;' value='25.761700000000001' />
                <semantic-value key='&quot;Minneapolis&quot;' value='44.977800000000002' />
                <semantic-value key='&quot;Nashville&quot;' value='36.162700000000001' />
                <semantic-value key='&quot;Oakland&quot;' value='37.804400000000001' />
                <semantic-value key='&quot;Omaha&quot;' value='41.256500000000003' />
                <semantic-value key='&quot;Orlando&quot;' value='28.5383' />
                <semantic-value key='&quot;Philadelphia&quot;' value='39.952599999999997' />
                <semantic-value key='&quot;Phoenix&quot;' value='33.448399999999999' />
                <semantic-value key='&quot;Portland&quot;' value='45.505099999999999' />
                <semantic-value key='&quot;Raleigh&quot;' value='35.779600000000002' />
                <semantic-value key='&quot;Richmond&quot;' value='37.540700000000001' />
                <semantic-value key='&quot;Rochester&quot;' value='43.156599999999997' />
                <semantic-value key='&quot;Sacramento&quot;' value='38.581600000000002' />
                <semantic-value key='&quot;San Antonio&quot;' value='29.424099999999999' />
                <semantic-value key='&quot;San Diego&quot;' value='32.715699999999998' />
                <semantic-value key='&quot;San Francisco&quot;' value='37.774900000000002' />
                <semantic-value key='&quot;San Jose&quot;' value='37.338200000000001' />
                <semantic-value key='&quot;Santa Clara&quot;' value='37.354100000000003' />
                <semantic-value key='&quot;Spokane&quot;' value='47.658799999999999' />
                <semantic-value key='&quot;Syracuse&quot;' value='43.048099999999998' />
                <semantic-value key='&quot;Tampa&quot;' value='27.950600000000001' />
                <semantic-value key='&quot;Washington&quot;' value='38.895099999999999' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Akron&quot;' value='-81.519000000000005' />
                <semantic-value key='&quot;Albany&quot;' value='-73.756200000000007' />
                <semantic-value key='&quot;Atlanta&quot;' value='-84.388000000000005' />
                <semantic-value key='&quot;Austin&quot;' value='-97.743099999999998' />
                <semantic-value key='&quot;Baltimore&quot;' value='-76.612200000000001' />
                <semantic-value key='&quot;Birmingham&quot;' value='-86.810400000000001' />
                <semantic-value key='&quot;Boston&quot;' value='-71.058899999999994' />
                <semantic-value key='&quot;Buffalo&quot;' value='-78.878399999999999' />
                <semantic-value key='&quot;Charleston&quot;' value='-79.931100000000001' />
                <semantic-value key='&quot;Charlotte&quot;' value='-80.843100000000007' />
                <semantic-value key='&quot;Cincinnati&quot;' value='-84.512' />
                <semantic-value key='&quot;Cleveland&quot;' value='-81.694400000000002' />
                <semantic-value key='&quot;Columbus&quot;' value='-82.998800000000003' />
                <semantic-value key='&quot;Dallas&quot;' value='-96.796999999999997' />
                <semantic-value key='&quot;Dayton&quot;' value='-84.191599999999994' />
                <semantic-value key='&quot;Denver&quot;' value='-104.9903' />
                <semantic-value key='&quot;Des Moines&quot;' value='-93.625' />
                <semantic-value key='&quot;Detroit&quot;' value='-83.0458' />
                <semantic-value key='&quot;Durham&quot;' value='-78.898600000000002' />
                <semantic-value key='&quot;Eugene&quot;' value='-123.0868' />
                <semantic-value key='&quot;Greensboro&quot;' value='-79.792000000000002' />
                <semantic-value key='&quot;Houston&quot;' value='-95.369799999999998' />
                <semantic-value key='&quot;Jacksonville&quot;' value='-81.655699999999996' />
                <semantic-value key='&quot;Kansas City&quot;' value='-94.578599999999994' />
                <semantic-value key='&quot;Las Vegas&quot;' value='-115.13979999999999' />
                <semantic-value key='&quot;Lexington&quot;' value='-84.503699999999995' />
                <semantic-value key='&quot;Little Rock&quot;' value='-92.289599999999993' />
                <semantic-value key='&quot;Long Beach&quot;' value='-118.19370000000001' />
                <semantic-value key='&quot;Louisville&quot;' value='-85.758499999999998' />
                <semantic-value key='&quot;Madison&quot;' value='-89.401200000000003' />
                <semantic-value key='&quot;Memphis&quot;' value='-90.049000000000007' />
                <semantic-value key='&quot;Mesa&quot;' value='-111.83150000000001' />
                <semantic-value key='&quot;Miami&quot;' value='-80.191800000000001' />
                <semantic-value key='&quot;Minneapolis&quot;' value='-93.265000000000001' />
                <semantic-value key='&quot;Nashville&quot;' value='-86.781599999999997' />
                <semantic-value key='&quot;Oakland&quot;' value='-122.2711' />
                <semantic-value key='&quot;Omaha&quot;' value='-95.9345' />
                <semantic-value key='&quot;Orlando&quot;' value='-81.379199999999997' />
                <semantic-value key='&quot;Philadelphia&quot;' value='-75.165199999999999' />
                <semantic-value key='&quot;Phoenix&quot;' value='-112.074' />
                <semantic-value key='&quot;Portland&quot;' value='-122.675' />
                <semantic-value key='&quot;Raleigh&quot;' value='-78.638199999999998' />
                <semantic-value key='&quot;Richmond&quot;' value='-77.436000000000007' />
                <semantic-value key='&quot;Rochester&quot;' value='-77.608800000000002' />
                <semantic-value key='&quot;Sacramento&quot;' value='-121.4944' />
                <semantic-value key='&quot;San Antonio&quot;' value='-98.493600000000001' />
                <semantic-value key='&quot;San Diego&quot;' value='-117.1611' />
                <semantic-value key='&quot;San Francisco&quot;' value='-122.4194' />
                <semantic-value key='&quot;San Jose&quot;' value='-121.88630000000001' />
                <semantic-value key='&quot;Santa Clara&quot;' value='-121.9552' />
                <semantic-value key='&quot;Spokane&quot;' value='-117.426' />
                <semantic-value key='&quot;Syracuse&quot;' value='-76.147400000000005' />
                <semantic-value key='&quot;Tampa&quot;' value='-82.4572' />
                <semantic-value key='&quot;Washington&quot;' value='-77.0364' />
              </semantic-values>
            </column>
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Mean Software Developer Salary (adjusted)]' derivation='None' name='[none:Mean Software Developer Salary (adjusted):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Mean Software Developer Salary (unadjusted)]' derivation='None' name='[none:Mean Software Developer Salary (unadjusted):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Median Home Price]' derivation='None' name='[none:Median Home Price:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Software Developer Jobs]' derivation='None' name='[none:Number of Software Developer Jobs:ok]' pivot='key' type='ordinal' />
            <column-instance column='[city_no_state]' derivation='None' name='[none:city_no_state:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2940780235170861063]' derivation='Sum' name='[rank:sum:Calculation_2940780235170861063:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0z28jet0nrandf180jljh1w88sv6].[City]' ordering-type='Field' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[Calculation_2940780235170861063]' derivation='Sum' name='[rank:sum:Calculation_2940780235170861063:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[Calculation_2940780235170861063]' derivation='Sum' name='[sum:Calculation_2940780235170861063:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Mean Software Developer Salary (adjusted)]' derivation='Sum' name='[sum:Mean Software Developer Salary (adjusted):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Mean Software Developer Salary (unadjusted)]' derivation='Sum' name='[sum:Mean Software Developer Salary (unadjusted):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Median Home Price]' derivation='Sum' name='[sum:Median Home Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Software Developer Jobs]' derivation='Sum' name='[sum:Number of Software Developer Jobs:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Rent avg]' derivation='Sum' name='[sum:Rent avg:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0z28jet0nrandf180jljh1w88sv6].[Action (City No State)]'>
            <groupfilter function='level-members' level='[city_no_state]' user:ui-action-filter='[Action3_905E1EB5F8204F0BA3CC35646727312E]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0z28jet0nrandf180jljh1w88sv6].[Action (City,Mean Software Developer Salary (adjusted),Mean Software Developer Salary (unadjusted),Median Home Price,Number of Software Developer Jobs,City No State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_C2795BDC752846F9950068B26B7E5065]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[City]' />
              <groupfilter function='level-members' level='[none:Mean Software Developer Salary (adjusted):ok]' />
              <groupfilter function='level-members' level='[none:Mean Software Developer Salary (unadjusted):ok]' />
              <groupfilter function='level-members' level='[none:Median Home Price:ok]' />
              <groupfilter function='level-members' level='[none:Number of Software Developer Jobs:ok]' />
              <groupfilter function='level-members' level='[city_no_state]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0z28jet0nrandf180jljh1w88sv6].[none:City:nk]'>
            <groupfilter function='level-members' level='[none:City:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter affect-totals='true' class='quantitative' column='[federated.0z28jet0nrandf180jljh1w88sv6].[rank:sum:Calculation_2940780235170861063:qk:4]' included-values='in-range'>
            <min>1</min>
            <max>76</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0z28jet0nrandf180jljh1w88sv6].[none:City:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Calculation_2940780235170861063:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0z28jet0nrandf180jljh1w88sv6].[rank:sum:Calculation_2940780235170861063:qk:4]</column>
            <column>[federated.0z28jet0nrandf180jljh1w88sv6].[none:City:nk]</column>
            <column>[federated.0z28jet0nrandf180jljh1w88sv6].[none:city_no_state:nk]</column>
            <column>[federated.0z28jet0nrandf180jljh1w88sv6].[Action (City)]</column>
            <column>[federated.0z28jet0nrandf180jljh1w88sv6].[Action (City,Mean Software Developer Salary (adjusted),Mean Software Developer Salary (unadjusted),Median Home Price,Number of Software Developer Jobs,City No State)]</column>
            <column>[federated.0z28jet0nrandf180jljh1w88sv6].[Action (City No State)]</column>
            <column>[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Rent avg:qk]</column>
            <column>[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Median Home Price:qk]</column>
            <column>[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Mean Software Developer Salary (adjusted):qk]</column>
            <column>[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Number of Software Developer Jobs:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Mean Software Developer Salary (unadjusted):qk]' value='84' />
            <format attr='width' field='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Median Home Price:qk]' value='84' />
            <format attr='width' field='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Calculation_2940780235170861063:qk]' value='84' />
            <format attr='title' class='0' field='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Mean Software Developer Salary (unadjusted):qk]' scope='rows' value='Mean Salary' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0z28jet0nrandf180jljh1w88sv6].[none:City:nk]' value='113' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='10' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='419000.0' field='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Median Home Price:qk]' symmetric='false' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#15c1c8</color>
                <color>#25c3c9</color>
                <color>#36c5cb</color>
                <color>#47c7cc</color>
                <color>#58c9ce</color>
                <color>#6acbcf</color>
                <color>#7ccdd1</color>
                <color>#8ed0d2</color>
                <color>#a0d2d4</color>
                <color>#b3d4d5</color>
                <color>#c5d6d7</color>
                <color>#d9d9d9</color>
                <color>#dbcfca</color>
                <color>#ddc6bc</color>
                <color>#dfbcad</color>
                <color>#e1b29d</color>
                <color>#e3a88e</color>
                <color>#e59e7e</color>
                <color>#e7946e</color>
                <color>#e9895d</color>
                <color>#eb7e4c</color>
                <color>#ed733b</color>
                <color>#f0682a</color>
              </color-palette>
            </encoding>
            <encoding attr='color' field='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Calculation_2940780235170861063:qk]' palette='purple_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.0z28jet0nrandf180jljh1w88sv6].[rank:sum:Calculation_2940780235170861063:qk]' palette='purple_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.0z28jet0nrandf180jljh1w88sv6].[rank:sum:Calculation_2940780235170861063:qk:4]' palette='purple_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#75a1c7' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='1243' />
                <format attr='maxwidth' value='1243' />
                <format attr='minheight' value='283' />
                <format attr='maxheight' value='283' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Median Home Price:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Median Home Price:qk]' />
              <text column='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Median Home Price:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#75a1c7' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Calculation_2940780235170861063:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Calculation_2940780235170861063:qk]' />
              <text column='[federated.0z28jet0nrandf180jljh1w88sv6].[rank:sum:Calculation_2940780235170861063:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>Rank: &lt;</run>
                <run>[federated.0z28jet0nrandf180jljh1w88sv6].[rank:sum:Calculation_2940780235170861063:qk]</run>
                <run>&gt;</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#75a1c7' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Mean Software Developer Salary (unadjusted):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Mean Software Developer Salary (unadjusted):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#75a1c7' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0z28jet0nrandf180jljh1w88sv6].[sum:Mean Software Developer Salary (unadjusted):qk] + ([federated.0z28jet0nrandf180jljh1w88sv6].[sum:Median Home Price:qk] + [federated.0z28jet0nrandf180jljh1w88sv6].[sum:Calculation_2940780235170861063:qk]))</rows>
        <cols>[federated.0z28jet0nrandf180jljh1w88sv6].[none:City:nk]</cols>
      </table>
      <simple-id uuid='{B681EADB-2EBC-4D4D-BC8E-CB7EE892CCD3}' />
    </worksheet>
    <worksheet name='Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Map: Location &amp; Number of Jobs</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SofwareDeveloperIncomeExpensesperUSACity' name='federated.0z28jet0nrandf180jljh1w88sv6' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0z28jet0nrandf180jljh1w88sv6'>
            <column caption='Home Buying Power' datatype='real' name='[Calculation_2940780235170861063]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='[Mean Software Developer Salary (unadjusted)]/[Median Home Price]' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;Akron, OH&quot;' value='Akron' />
              </aliases>
            </column>
            <column datatype='real' name='[Mean Software Developer Salary (adjusted)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Mean Software Developer Salary (unadjusted)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Median Home Price]' role='measure' type='quantitative' />
            <column datatype='real' name='[Number of Software Developer Jobs]' role='measure' type='quantitative' />
            <column datatype='real' name='[Rent avg]' role='measure' type='quantitative' />
            <column caption='City No State' datatype='string' name='[city_no_state]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Akron&quot;' value='41.081400000000002' />
                <semantic-value key='&quot;Albany&quot;' value='42.6526' />
                <semantic-value key='&quot;Atlanta&quot;' value='33.749000000000002' />
                <semantic-value key='&quot;Austin&quot;' value='30.267199999999999' />
                <semantic-value key='&quot;Baltimore&quot;' value='39.290399999999998' />
                <semantic-value key='&quot;Birmingham&quot;' value='33.518599999999999' />
                <semantic-value key='&quot;Boston&quot;' value='42.360100000000003' />
                <semantic-value key='&quot;Buffalo&quot;' value='42.886400000000002' />
                <semantic-value key='&quot;Charleston&quot;' value='32.776499999999999' />
                <semantic-value key='&quot;Charlotte&quot;' value='35.2271' />
                <semantic-value key='&quot;Cincinnati&quot;' value='39.103099999999998' />
                <semantic-value key='&quot;Cleveland&quot;' value='41.499299999999998' />
                <semantic-value key='&quot;Columbus&quot;' value='39.961199999999998' />
                <semantic-value key='&quot;Dallas&quot;' value='32.776699999999998' />
                <semantic-value key='&quot;Dayton&quot;' value='39.758899999999997' />
                <semantic-value key='&quot;Denver&quot;' value='39.739199999999997' />
                <semantic-value key='&quot;Des Moines&quot;' value='41.586799999999997' />
                <semantic-value key='&quot;Detroit&quot;' value='42.331400000000002' />
                <semantic-value key='&quot;Durham&quot;' value='35.994' />
                <semantic-value key='&quot;Eugene&quot;' value='44.052100000000003' />
                <semantic-value key='&quot;Greensboro&quot;' value='36.072600000000001' />
                <semantic-value key='&quot;Houston&quot;' value='29.760400000000001' />
                <semantic-value key='&quot;Jacksonville&quot;' value='30.3322' />
                <semantic-value key='&quot;Kansas City&quot;' value='39.099699999999999' />
                <semantic-value key='&quot;Las Vegas&quot;' value='36.169899999999998' />
                <semantic-value key='&quot;Lexington&quot;' value='38.040599999999998' />
                <semantic-value key='&quot;Little Rock&quot;' value='34.746499999999997' />
                <semantic-value key='&quot;Long Beach&quot;' value='33.770099999999999' />
                <semantic-value key='&quot;Louisville&quot;' value='38.252699999999997' />
                <semantic-value key='&quot;Madison&quot;' value='43.073099999999997' />
                <semantic-value key='&quot;Memphis&quot;' value='35.149500000000003' />
                <semantic-value key='&quot;Mesa&quot;' value='33.415199999999999' />
                <semantic-value key='&quot;Miami&quot;' value='25.761700000000001' />
                <semantic-value key='&quot;Minneapolis&quot;' value='44.977800000000002' />
                <semantic-value key='&quot;Nashville&quot;' value='36.162700000000001' />
                <semantic-value key='&quot;Oakland&quot;' value='37.804400000000001' />
                <semantic-value key='&quot;Omaha&quot;' value='41.256500000000003' />
                <semantic-value key='&quot;Orlando&quot;' value='28.5383' />
                <semantic-value key='&quot;Philadelphia&quot;' value='39.952599999999997' />
                <semantic-value key='&quot;Phoenix&quot;' value='33.448399999999999' />
                <semantic-value key='&quot;Portland&quot;' value='45.505099999999999' />
                <semantic-value key='&quot;Raleigh&quot;' value='35.779600000000002' />
                <semantic-value key='&quot;Richmond&quot;' value='37.540700000000001' />
                <semantic-value key='&quot;Rochester&quot;' value='43.156599999999997' />
                <semantic-value key='&quot;Sacramento&quot;' value='38.581600000000002' />
                <semantic-value key='&quot;San Antonio&quot;' value='29.424099999999999' />
                <semantic-value key='&quot;San Diego&quot;' value='32.715699999999998' />
                <semantic-value key='&quot;San Francisco&quot;' value='37.774900000000002' />
                <semantic-value key='&quot;San Jose&quot;' value='37.338200000000001' />
                <semantic-value key='&quot;Santa Clara&quot;' value='37.354100000000003' />
                <semantic-value key='&quot;Spokane&quot;' value='47.658799999999999' />
                <semantic-value key='&quot;Syracuse&quot;' value='43.048099999999998' />
                <semantic-value key='&quot;Tampa&quot;' value='27.950600000000001' />
                <semantic-value key='&quot;Washington&quot;' value='38.895099999999999' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Akron&quot;' value='-81.519000000000005' />
                <semantic-value key='&quot;Albany&quot;' value='-73.756200000000007' />
                <semantic-value key='&quot;Atlanta&quot;' value='-84.388000000000005' />
                <semantic-value key='&quot;Austin&quot;' value='-97.743099999999998' />
                <semantic-value key='&quot;Baltimore&quot;' value='-76.612200000000001' />
                <semantic-value key='&quot;Birmingham&quot;' value='-86.810400000000001' />
                <semantic-value key='&quot;Boston&quot;' value='-71.058899999999994' />
                <semantic-value key='&quot;Buffalo&quot;' value='-78.878399999999999' />
                <semantic-value key='&quot;Charleston&quot;' value='-79.931100000000001' />
                <semantic-value key='&quot;Charlotte&quot;' value='-80.843100000000007' />
                <semantic-value key='&quot;Cincinnati&quot;' value='-84.512' />
                <semantic-value key='&quot;Cleveland&quot;' value='-81.694400000000002' />
                <semantic-value key='&quot;Columbus&quot;' value='-82.998800000000003' />
                <semantic-value key='&quot;Dallas&quot;' value='-96.796999999999997' />
                <semantic-value key='&quot;Dayton&quot;' value='-84.191599999999994' />
                <semantic-value key='&quot;Denver&quot;' value='-104.9903' />
                <semantic-value key='&quot;Des Moines&quot;' value='-93.625' />
                <semantic-value key='&quot;Detroit&quot;' value='-83.0458' />
                <semantic-value key='&quot;Durham&quot;' value='-78.898600000000002' />
                <semantic-value key='&quot;Eugene&quot;' value='-123.0868' />
                <semantic-value key='&quot;Greensboro&quot;' value='-79.792000000000002' />
                <semantic-value key='&quot;Houston&quot;' value='-95.369799999999998' />
                <semantic-value key='&quot;Jacksonville&quot;' value='-81.655699999999996' />
                <semantic-value key='&quot;Kansas City&quot;' value='-94.578599999999994' />
                <semantic-value key='&quot;Las Vegas&quot;' value='-115.13979999999999' />
                <semantic-value key='&quot;Lexington&quot;' value='-84.503699999999995' />
                <semantic-value key='&quot;Little Rock&quot;' value='-92.289599999999993' />
                <semantic-value key='&quot;Long Beach&quot;' value='-118.19370000000001' />
                <semantic-value key='&quot;Louisville&quot;' value='-85.758499999999998' />
                <semantic-value key='&quot;Madison&quot;' value='-89.401200000000003' />
                <semantic-value key='&quot;Memphis&quot;' value='-90.049000000000007' />
                <semantic-value key='&quot;Mesa&quot;' value='-111.83150000000001' />
                <semantic-value key='&quot;Miami&quot;' value='-80.191800000000001' />
                <semantic-value key='&quot;Minneapolis&quot;' value='-93.265000000000001' />
                <semantic-value key='&quot;Nashville&quot;' value='-86.781599999999997' />
                <semantic-value key='&quot;Oakland&quot;' value='-122.2711' />
                <semantic-value key='&quot;Omaha&quot;' value='-95.9345' />
                <semantic-value key='&quot;Orlando&quot;' value='-81.379199999999997' />
                <semantic-value key='&quot;Philadelphia&quot;' value='-75.165199999999999' />
                <semantic-value key='&quot;Phoenix&quot;' value='-112.074' />
                <semantic-value key='&quot;Portland&quot;' value='-122.675' />
                <semantic-value key='&quot;Raleigh&quot;' value='-78.638199999999998' />
                <semantic-value key='&quot;Richmond&quot;' value='-77.436000000000007' />
                <semantic-value key='&quot;Rochester&quot;' value='-77.608800000000002' />
                <semantic-value key='&quot;Sacramento&quot;' value='-121.4944' />
                <semantic-value key='&quot;San Antonio&quot;' value='-98.493600000000001' />
                <semantic-value key='&quot;San Diego&quot;' value='-117.1611' />
                <semantic-value key='&quot;San Francisco&quot;' value='-122.4194' />
                <semantic-value key='&quot;San Jose&quot;' value='-121.88630000000001' />
                <semantic-value key='&quot;Santa Clara&quot;' value='-121.9552' />
                <semantic-value key='&quot;Spokane&quot;' value='-117.426' />
                <semantic-value key='&quot;Syracuse&quot;' value='-76.147400000000005' />
                <semantic-value key='&quot;Tampa&quot;' value='-82.4572' />
                <semantic-value key='&quot;Washington&quot;' value='-77.0364' />
              </semantic-values>
            </column>
            <column-instance column='[city_no_state]' derivation='None' name='[none:city_no_state:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2940780235170861063]' derivation='Sum' name='[rank:sum:Calculation_2940780235170861063:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0z28jet0nrandf180jljh1w88sv6].[city_no_state]' ordering-type='Field' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[Mean Software Developer Salary (adjusted)]' derivation='Sum' name='[sum:Mean Software Developer Salary (adjusted):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Median Home Price]' derivation='Sum' name='[sum:Median Home Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Software Developer Jobs]' derivation='Sum' name='[sum:Number of Software Developer Jobs:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Rent avg]' derivation='Sum' name='[sum:Rent avg:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0z28jet0nrandf180jljh1w88sv6].[rank:sum:Calculation_2940780235170861063:qk:2]' included-values='in-range-or-null'>
            <min>1</min>
            <max>76</max>
          </filter>
          <slices>
            <column>[federated.0z28jet0nrandf180jljh1w88sv6].[rank:sum:Calculation_2940780235170861063:qk:2]</column>
            <column>[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Mean Software Developer Salary (adjusted):qk]</column>
            <column>[federated.0z28jet0nrandf180jljh1w88sv6].[none:city_no_state:nk]</column>
            <column>[federated.0z28jet0nrandf180jljh1w88sv6].[Action (City)]</column>
            <column>[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Rent avg:qk]</column>
            <column>[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Median Home Price:qk]</column>
            <column>[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Number of Software Developer Jobs:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0z28jet0nrandf180jljh1w88sv6].[Longitude (generated)]' field-type='quantitative' max='-3635755.0979935452' min='-15865675.777528975' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0z28jet0nrandf180jljh1w88sv6].[Latitude (generated)]' field-type='quantitative' max='6107741.9558385964' min='2787946.2309419084' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Number of Software Developer Jobs:qk]' />
              <size column='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Number of Software Developer Jobs:qk]' />
              <text column='[federated.0z28jet0nrandf180jljh1w88sv6].[none:city_no_state:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.3953038454055786' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0z28jet0nrandf180jljh1w88sv6].[Latitude (generated)]</rows>
        <cols>[federated.0z28jet0nrandf180jljh1w88sv6].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{44E7F677-B134-4378-806E-7A7E7BA5B42B}' />
    </worksheet>
    <worksheet name='Scatterplot'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Rent and Median Home Value vs Mean SWE Salary (Unadjusted)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SofwareDeveloperIncomeExpensesperUSACity' name='federated.0z28jet0nrandf180jljh1w88sv6' />
          </datasources>
          <datasource-dependencies datasource='federated.0z28jet0nrandf180jljh1w88sv6'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;Akron, OH&quot;' value='Akron' />
              </aliases>
            </column>
            <column datatype='real' name='[Mean Software Developer Salary (adjusted)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Mean Software Developer Salary (unadjusted)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Median Home Price]' role='measure' type='quantitative' />
            <column datatype='real' name='[Number of Software Developer Jobs]' role='measure' type='quantitative' />
            <column datatype='real' name='[Rent avg]' role='measure' type='quantitative' />
            <column caption='City No State' datatype='string' name='[city_no_state]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Akron&quot;' value='41.081400000000002' />
                <semantic-value key='&quot;Albany&quot;' value='42.6526' />
                <semantic-value key='&quot;Atlanta&quot;' value='33.749000000000002' />
                <semantic-value key='&quot;Austin&quot;' value='30.267199999999999' />
                <semantic-value key='&quot;Baltimore&quot;' value='39.290399999999998' />
                <semantic-value key='&quot;Birmingham&quot;' value='33.518599999999999' />
                <semantic-value key='&quot;Boston&quot;' value='42.360100000000003' />
                <semantic-value key='&quot;Buffalo&quot;' value='42.886400000000002' />
                <semantic-value key='&quot;Charleston&quot;' value='32.776499999999999' />
                <semantic-value key='&quot;Charlotte&quot;' value='35.2271' />
                <semantic-value key='&quot;Cincinnati&quot;' value='39.103099999999998' />
                <semantic-value key='&quot;Cleveland&quot;' value='41.499299999999998' />
                <semantic-value key='&quot;Columbus&quot;' value='39.961199999999998' />
                <semantic-value key='&quot;Dallas&quot;' value='32.776699999999998' />
                <semantic-value key='&quot;Dayton&quot;' value='39.758899999999997' />
                <semantic-value key='&quot;Denver&quot;' value='39.739199999999997' />
                <semantic-value key='&quot;Des Moines&quot;' value='41.586799999999997' />
                <semantic-value key='&quot;Detroit&quot;' value='42.331400000000002' />
                <semantic-value key='&quot;Durham&quot;' value='35.994' />
                <semantic-value key='&quot;Eugene&quot;' value='44.052100000000003' />
                <semantic-value key='&quot;Greensboro&quot;' value='36.072600000000001' />
                <semantic-value key='&quot;Houston&quot;' value='29.760400000000001' />
                <semantic-value key='&quot;Jacksonville&quot;' value='30.3322' />
                <semantic-value key='&quot;Kansas City&quot;' value='39.099699999999999' />
                <semantic-value key='&quot;Las Vegas&quot;' value='36.169899999999998' />
                <semantic-value key='&quot;Lexington&quot;' value='38.040599999999998' />
                <semantic-value key='&quot;Little Rock&quot;' value='34.746499999999997' />
                <semantic-value key='&quot;Long Beach&quot;' value='33.770099999999999' />
                <semantic-value key='&quot;Louisville&quot;' value='38.252699999999997' />
                <semantic-value key='&quot;Madison&quot;' value='43.073099999999997' />
                <semantic-value key='&quot;Memphis&quot;' value='35.149500000000003' />
                <semantic-value key='&quot;Mesa&quot;' value='33.415199999999999' />
                <semantic-value key='&quot;Miami&quot;' value='25.761700000000001' />
                <semantic-value key='&quot;Minneapolis&quot;' value='44.977800000000002' />
                <semantic-value key='&quot;Nashville&quot;' value='36.162700000000001' />
                <semantic-value key='&quot;Oakland&quot;' value='37.804400000000001' />
                <semantic-value key='&quot;Omaha&quot;' value='41.256500000000003' />
                <semantic-value key='&quot;Orlando&quot;' value='28.5383' />
                <semantic-value key='&quot;Philadelphia&quot;' value='39.952599999999997' />
                <semantic-value key='&quot;Phoenix&quot;' value='33.448399999999999' />
                <semantic-value key='&quot;Portland&quot;' value='45.505099999999999' />
                <semantic-value key='&quot;Raleigh&quot;' value='35.779600000000002' />
                <semantic-value key='&quot;Richmond&quot;' value='37.540700000000001' />
                <semantic-value key='&quot;Rochester&quot;' value='43.156599999999997' />
                <semantic-value key='&quot;Sacramento&quot;' value='38.581600000000002' />
                <semantic-value key='&quot;San Antonio&quot;' value='29.424099999999999' />
                <semantic-value key='&quot;San Diego&quot;' value='32.715699999999998' />
                <semantic-value key='&quot;San Francisco&quot;' value='37.774900000000002' />
                <semantic-value key='&quot;San Jose&quot;' value='37.338200000000001' />
                <semantic-value key='&quot;Santa Clara&quot;' value='37.354100000000003' />
                <semantic-value key='&quot;Spokane&quot;' value='47.658799999999999' />
                <semantic-value key='&quot;Syracuse&quot;' value='43.048099999999998' />
                <semantic-value key='&quot;Tampa&quot;' value='27.950600000000001' />
                <semantic-value key='&quot;Washington&quot;' value='38.895099999999999' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Akron&quot;' value='-81.519000000000005' />
                <semantic-value key='&quot;Albany&quot;' value='-73.756200000000007' />
                <semantic-value key='&quot;Atlanta&quot;' value='-84.388000000000005' />
                <semantic-value key='&quot;Austin&quot;' value='-97.743099999999998' />
                <semantic-value key='&quot;Baltimore&quot;' value='-76.612200000000001' />
                <semantic-value key='&quot;Birmingham&quot;' value='-86.810400000000001' />
                <semantic-value key='&quot;Boston&quot;' value='-71.058899999999994' />
                <semantic-value key='&quot;Buffalo&quot;' value='-78.878399999999999' />
                <semantic-value key='&quot;Charleston&quot;' value='-79.931100000000001' />
                <semantic-value key='&quot;Charlotte&quot;' value='-80.843100000000007' />
                <semantic-value key='&quot;Cincinnati&quot;' value='-84.512' />
                <semantic-value key='&quot;Cleveland&quot;' value='-81.694400000000002' />
                <semantic-value key='&quot;Columbus&quot;' value='-82.998800000000003' />
                <semantic-value key='&quot;Dallas&quot;' value='-96.796999999999997' />
                <semantic-value key='&quot;Dayton&quot;' value='-84.191599999999994' />
                <semantic-value key='&quot;Denver&quot;' value='-104.9903' />
                <semantic-value key='&quot;Des Moines&quot;' value='-93.625' />
                <semantic-value key='&quot;Detroit&quot;' value='-83.0458' />
                <semantic-value key='&quot;Durham&quot;' value='-78.898600000000002' />
                <semantic-value key='&quot;Eugene&quot;' value='-123.0868' />
                <semantic-value key='&quot;Greensboro&quot;' value='-79.792000000000002' />
                <semantic-value key='&quot;Houston&quot;' value='-95.369799999999998' />
                <semantic-value key='&quot;Jacksonville&quot;' value='-81.655699999999996' />
                <semantic-value key='&quot;Kansas City&quot;' value='-94.578599999999994' />
                <semantic-value key='&quot;Las Vegas&quot;' value='-115.13979999999999' />
                <semantic-value key='&quot;Lexington&quot;' value='-84.503699999999995' />
                <semantic-value key='&quot;Little Rock&quot;' value='-92.289599999999993' />
                <semantic-value key='&quot;Long Beach&quot;' value='-118.19370000000001' />
                <semantic-value key='&quot;Louisville&quot;' value='-85.758499999999998' />
                <semantic-value key='&quot;Madison&quot;' value='-89.401200000000003' />
                <semantic-value key='&quot;Memphis&quot;' value='-90.049000000000007' />
                <semantic-value key='&quot;Mesa&quot;' value='-111.83150000000001' />
                <semantic-value key='&quot;Miami&quot;' value='-80.191800000000001' />
                <semantic-value key='&quot;Minneapolis&quot;' value='-93.265000000000001' />
                <semantic-value key='&quot;Nashville&quot;' value='-86.781599999999997' />
                <semantic-value key='&quot;Oakland&quot;' value='-122.2711' />
                <semantic-value key='&quot;Omaha&quot;' value='-95.9345' />
                <semantic-value key='&quot;Orlando&quot;' value='-81.379199999999997' />
                <semantic-value key='&quot;Philadelphia&quot;' value='-75.165199999999999' />
                <semantic-value key='&quot;Phoenix&quot;' value='-112.074' />
                <semantic-value key='&quot;Portland&quot;' value='-122.675' />
                <semantic-value key='&quot;Raleigh&quot;' value='-78.638199999999998' />
                <semantic-value key='&quot;Richmond&quot;' value='-77.436000000000007' />
                <semantic-value key='&quot;Rochester&quot;' value='-77.608800000000002' />
                <semantic-value key='&quot;Sacramento&quot;' value='-121.4944' />
                <semantic-value key='&quot;San Antonio&quot;' value='-98.493600000000001' />
                <semantic-value key='&quot;San Diego&quot;' value='-117.1611' />
                <semantic-value key='&quot;San Francisco&quot;' value='-122.4194' />
                <semantic-value key='&quot;San Jose&quot;' value='-121.88630000000001' />
                <semantic-value key='&quot;Santa Clara&quot;' value='-121.9552' />
                <semantic-value key='&quot;Spokane&quot;' value='-117.426' />
                <semantic-value key='&quot;Syracuse&quot;' value='-76.147400000000005' />
                <semantic-value key='&quot;Tampa&quot;' value='-82.4572' />
                <semantic-value key='&quot;Washington&quot;' value='-77.0364' />
              </semantic-values>
            </column>
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Mean Software Developer Salary (adjusted)]' derivation='None' name='[none:Mean Software Developer Salary (adjusted):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Mean Software Developer Salary (unadjusted)]' derivation='None' name='[none:Mean Software Developer Salary (unadjusted):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Median Home Price]' derivation='None' name='[none:Median Home Price:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Software Developer Jobs]' derivation='None' name='[none:Number of Software Developer Jobs:ok]' pivot='key' type='ordinal' />
            <column-instance column='[city_no_state]' derivation='None' name='[none:city_no_state:nk]' pivot='key' type='nominal' />
            <column-instance column='[Mean Software Developer Salary (adjusted)]' derivation='Sum' name='[sum:Mean Software Developer Salary (adjusted):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Mean Software Developer Salary (unadjusted)]' derivation='Sum' name='[sum:Mean Software Developer Salary (unadjusted):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Median Home Price]' derivation='Sum' name='[sum:Median Home Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Software Developer Jobs]' derivation='Sum' name='[sum:Number of Software Developer Jobs:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Rent avg]' derivation='Sum' name='[sum:Rent avg:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0z28jet0nrandf180jljh1w88sv6].[Action (City No State)]'>
            <groupfilter function='level-members' level='[city_no_state]' user:ui-action-filter='[Action3_905E1EB5F8204F0BA3CC35646727312E]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0z28jet0nrandf180jljh1w88sv6].[Action (City,Mean Software Developer Salary (adjusted),Mean Software Developer Salary (unadjusted),Median Home Price,Number of Software Developer Jobs,City No State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_C2795BDC752846F9950068B26B7E5065]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[City]' />
              <groupfilter function='level-members' level='[none:Mean Software Developer Salary (adjusted):ok]' />
              <groupfilter function='level-members' level='[none:Mean Software Developer Salary (unadjusted):ok]' />
              <groupfilter function='level-members' level='[none:Median Home Price:ok]' />
              <groupfilter function='level-members' level='[none:Number of Software Developer Jobs:ok]' />
              <groupfilter function='level-members' level='[city_no_state]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0z28jet0nrandf180jljh1w88sv6].[none:City:nk]'>
            <groupfilter function='level-members' level='[none:City:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Mean Software Developer Salary (unadjusted):qk]' included-values='in-range'>
            <min>80314.0</min>
            <max>142101.0</max>
          </filter>
          <slices>
            <column>[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Mean Software Developer Salary (unadjusted):qk]</column>
            <column>[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Number of Software Developer Jobs:qk]</column>
            <column>[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Median Home Price:qk]</column>
            <column>[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Rent avg:qk]</column>
            <column>[federated.0z28jet0nrandf180jljh1w88sv6].[none:city_no_state:nk]</column>
            <column>[federated.0z28jet0nrandf180jljh1w88sv6].[none:City:nk]</column>
            <column>[federated.0z28jet0nrandf180jljh1w88sv6].[Action (City No State)]</column>
            <column>[federated.0z28jet0nrandf180jljh1w88sv6].[Action (City,Mean Software Developer Salary (adjusted),Mean Software Developer Salary (unadjusted),Median Home Price,Number of Software Developer Jobs,City No State)]</column>
            <column>[federated.0z28jet0nrandf180jljh1w88sv6].[Action (City)]</column>
            <column>[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Mean Software Developer Salary (adjusted):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Mean Software Developer Salary (unadjusted):qk]' field-type='quantitative' max='152083.66890742336' min='60000.0' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Rent avg:qk]' scope='rows' value='Avg Rent' />
            <format attr='width' field='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Rent avg:qk]' value='88' />
            <format attr='width' field='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Median Home Price:qk]' value='88' />
            <format attr='height' field='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Mean Software Developer Salary (unadjusted):qk]' value='40' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='10' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='2100.0' field='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Rent avg:qk]' palette='orange_blue_diverging_10_0' reverse='true' symmetric='false' type='interpolated' />
            <encoding attr='color' field='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Median Home Price:qk]' palette='orange_blue_white_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Number of Software Developer Jobs:qk]' />
              <text column='[federated.0z28jet0nrandf180jljh1w88sv6].[none:City:nk]' />
              <lod column='[federated.0z28jet0nrandf180jljh1w88sv6].[none:City:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/circle' />
                <format attr='size' value='1.4392818212509155' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='1087' />
                <format attr='maxwidth' value='1087' />
                <format attr='minheight' value='349' />
                <format attr='maxheight' value='349' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Rent avg:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Rent avg:qk]' />
              <size column='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Number of Software Developer Jobs:qk]' />
              <text column='[federated.0z28jet0nrandf180jljh1w88sv6].[none:City:nk]' />
              <lod column='[federated.0z28jet0nrandf180jljh1w88sv6].[none:City:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/circle' />
                <format attr='size' value='1.4392818212509155' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Median Home Price:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Median Home Price:qk]' />
              <size column='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Number of Software Developer Jobs:qk]' />
              <text column='[federated.0z28jet0nrandf180jljh1w88sv6].[none:City:nk]' />
              <lod column='[federated.0z28jet0nrandf180jljh1w88sv6].[none:City:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/circle' />
                <format attr='size' value='1.4392818212509155' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0z28jet0nrandf180jljh1w88sv6].[sum:Rent avg:qk] + [federated.0z28jet0nrandf180jljh1w88sv6].[sum:Median Home Price:qk])</rows>
        <cols>[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Mean Software Developer Salary (unadjusted):qk]</cols>
      </table>
      <simple-id uuid='{745739E4-80F5-4394-80A4-DD1A664F3D29}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='SofwareDeveloperIncomeExpensesperUSACity' name='federated.0z28jet0nrandf180jljh1w88sv6' />
      </datasources>
      <datasource-dependencies datasource='federated.0z28jet0nrandf180jljh1w88sv6'>
        <column datatype='real' name='[Mean Software Developer Salary (adjusted)]' role='measure' type='quantitative' />
        <column datatype='real' name='[Median Home Price]' role='measure' type='quantitative' />
        <column datatype='real' name='[Number of Software Developer Jobs]' role='measure' type='quantitative' />
        <column datatype='real' name='[Rent avg]' role='measure' type='quantitative' />
        <column caption='City No State' datatype='string' name='[city_no_state]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
          <semantic-values semantic-role='[Geographical].[Latitude]'>
            <semantic-value key='&quot;Akron&quot;' value='41.081400000000002' />
            <semantic-value key='&quot;Albany&quot;' value='42.6526' />
            <semantic-value key='&quot;Atlanta&quot;' value='33.749000000000002' />
            <semantic-value key='&quot;Austin&quot;' value='30.267199999999999' />
            <semantic-value key='&quot;Baltimore&quot;' value='39.290399999999998' />
            <semantic-value key='&quot;Birmingham&quot;' value='33.518599999999999' />
            <semantic-value key='&quot;Boston&quot;' value='42.360100000000003' />
            <semantic-value key='&quot;Buffalo&quot;' value='42.886400000000002' />
            <semantic-value key='&quot;Charleston&quot;' value='32.776499999999999' />
            <semantic-value key='&quot;Charlotte&quot;' value='35.2271' />
            <semantic-value key='&quot;Cincinnati&quot;' value='39.103099999999998' />
            <semantic-value key='&quot;Cleveland&quot;' value='41.499299999999998' />
            <semantic-value key='&quot;Columbus&quot;' value='39.961199999999998' />
            <semantic-value key='&quot;Dallas&quot;' value='32.776699999999998' />
            <semantic-value key='&quot;Dayton&quot;' value='39.758899999999997' />
            <semantic-value key='&quot;Denver&quot;' value='39.739199999999997' />
            <semantic-value key='&quot;Des Moines&quot;' value='41.586799999999997' />
            <semantic-value key='&quot;Detroit&quot;' value='42.331400000000002' />
            <semantic-value key='&quot;Durham&quot;' value='35.994' />
            <semantic-value key='&quot;Eugene&quot;' value='44.052100000000003' />
            <semantic-value key='&quot;Greensboro&quot;' value='36.072600000000001' />
            <semantic-value key='&quot;Houston&quot;' value='29.760400000000001' />
            <semantic-value key='&quot;Jacksonville&quot;' value='30.3322' />
            <semantic-value key='&quot;Kansas City&quot;' value='39.099699999999999' />
            <semantic-value key='&quot;Las Vegas&quot;' value='36.169899999999998' />
            <semantic-value key='&quot;Lexington&quot;' value='38.040599999999998' />
            <semantic-value key='&quot;Little Rock&quot;' value='34.746499999999997' />
            <semantic-value key='&quot;Long Beach&quot;' value='33.770099999999999' />
            <semantic-value key='&quot;Louisville&quot;' value='38.252699999999997' />
            <semantic-value key='&quot;Madison&quot;' value='43.073099999999997' />
            <semantic-value key='&quot;Memphis&quot;' value='35.149500000000003' />
            <semantic-value key='&quot;Mesa&quot;' value='33.415199999999999' />
            <semantic-value key='&quot;Miami&quot;' value='25.761700000000001' />
            <semantic-value key='&quot;Minneapolis&quot;' value='44.977800000000002' />
            <semantic-value key='&quot;Nashville&quot;' value='36.162700000000001' />
            <semantic-value key='&quot;Oakland&quot;' value='37.804400000000001' />
            <semantic-value key='&quot;Omaha&quot;' value='41.256500000000003' />
            <semantic-value key='&quot;Orlando&quot;' value='28.5383' />
            <semantic-value key='&quot;Philadelphia&quot;' value='39.952599999999997' />
            <semantic-value key='&quot;Phoenix&quot;' value='33.448399999999999' />
            <semantic-value key='&quot;Portland&quot;' value='45.505099999999999' />
            <semantic-value key='&quot;Raleigh&quot;' value='35.779600000000002' />
            <semantic-value key='&quot;Richmond&quot;' value='37.540700000000001' />
            <semantic-value key='&quot;Rochester&quot;' value='43.156599999999997' />
            <semantic-value key='&quot;Sacramento&quot;' value='38.581600000000002' />
            <semantic-value key='&quot;San Antonio&quot;' value='29.424099999999999' />
            <semantic-value key='&quot;San Diego&quot;' value='32.715699999999998' />
            <semantic-value key='&quot;San Francisco&quot;' value='37.774900000000002' />
            <semantic-value key='&quot;San Jose&quot;' value='37.338200000000001' />
            <semantic-value key='&quot;Santa Clara&quot;' value='37.354100000000003' />
            <semantic-value key='&quot;Spokane&quot;' value='47.658799999999999' />
            <semantic-value key='&quot;Syracuse&quot;' value='43.048099999999998' />
            <semantic-value key='&quot;Tampa&quot;' value='27.950600000000001' />
            <semantic-value key='&quot;Washington&quot;' value='38.895099999999999' />
          </semantic-values>
          <semantic-values semantic-role='[Geographical].[Longitude]'>
            <semantic-value key='&quot;Akron&quot;' value='-81.519000000000005' />
            <semantic-value key='&quot;Albany&quot;' value='-73.756200000000007' />
            <semantic-value key='&quot;Atlanta&quot;' value='-84.388000000000005' />
            <semantic-value key='&quot;Austin&quot;' value='-97.743099999999998' />
            <semantic-value key='&quot;Baltimore&quot;' value='-76.612200000000001' />
            <semantic-value key='&quot;Birmingham&quot;' value='-86.810400000000001' />
            <semantic-value key='&quot;Boston&quot;' value='-71.058899999999994' />
            <semantic-value key='&quot;Buffalo&quot;' value='-78.878399999999999' />
            <semantic-value key='&quot;Charleston&quot;' value='-79.931100000000001' />
            <semantic-value key='&quot;Charlotte&quot;' value='-80.843100000000007' />
            <semantic-value key='&quot;Cincinnati&quot;' value='-84.512' />
            <semantic-value key='&quot;Cleveland&quot;' value='-81.694400000000002' />
            <semantic-value key='&quot;Columbus&quot;' value='-82.998800000000003' />
            <semantic-value key='&quot;Dallas&quot;' value='-96.796999999999997' />
            <semantic-value key='&quot;Dayton&quot;' value='-84.191599999999994' />
            <semantic-value key='&quot;Denver&quot;' value='-104.9903' />
            <semantic-value key='&quot;Des Moines&quot;' value='-93.625' />
            <semantic-value key='&quot;Detroit&quot;' value='-83.0458' />
            <semantic-value key='&quot;Durham&quot;' value='-78.898600000000002' />
            <semantic-value key='&quot;Eugene&quot;' value='-123.0868' />
            <semantic-value key='&quot;Greensboro&quot;' value='-79.792000000000002' />
            <semantic-value key='&quot;Houston&quot;' value='-95.369799999999998' />
            <semantic-value key='&quot;Jacksonville&quot;' value='-81.655699999999996' />
            <semantic-value key='&quot;Kansas City&quot;' value='-94.578599999999994' />
            <semantic-value key='&quot;Las Vegas&quot;' value='-115.13979999999999' />
            <semantic-value key='&quot;Lexington&quot;' value='-84.503699999999995' />
            <semantic-value key='&quot;Little Rock&quot;' value='-92.289599999999993' />
            <semantic-value key='&quot;Long Beach&quot;' value='-118.19370000000001' />
            <semantic-value key='&quot;Louisville&quot;' value='-85.758499999999998' />
            <semantic-value key='&quot;Madison&quot;' value='-89.401200000000003' />
            <semantic-value key='&quot;Memphis&quot;' value='-90.049000000000007' />
            <semantic-value key='&quot;Mesa&quot;' value='-111.83150000000001' />
            <semantic-value key='&quot;Miami&quot;' value='-80.191800000000001' />
            <semantic-value key='&quot;Minneapolis&quot;' value='-93.265000000000001' />
            <semantic-value key='&quot;Nashville&quot;' value='-86.781599999999997' />
            <semantic-value key='&quot;Oakland&quot;' value='-122.2711' />
            <semantic-value key='&quot;Omaha&quot;' value='-95.9345' />
            <semantic-value key='&quot;Orlando&quot;' value='-81.379199999999997' />
            <semantic-value key='&quot;Philadelphia&quot;' value='-75.165199999999999' />
            <semantic-value key='&quot;Phoenix&quot;' value='-112.074' />
            <semantic-value key='&quot;Portland&quot;' value='-122.675' />
            <semantic-value key='&quot;Raleigh&quot;' value='-78.638199999999998' />
            <semantic-value key='&quot;Richmond&quot;' value='-77.436000000000007' />
            <semantic-value key='&quot;Rochester&quot;' value='-77.608800000000002' />
            <semantic-value key='&quot;Sacramento&quot;' value='-121.4944' />
            <semantic-value key='&quot;San Antonio&quot;' value='-98.493600000000001' />
            <semantic-value key='&quot;San Diego&quot;' value='-117.1611' />
            <semantic-value key='&quot;San Francisco&quot;' value='-122.4194' />
            <semantic-value key='&quot;San Jose&quot;' value='-121.88630000000001' />
            <semantic-value key='&quot;Santa Clara&quot;' value='-121.9552' />
            <semantic-value key='&quot;Spokane&quot;' value='-117.426' />
            <semantic-value key='&quot;Syracuse&quot;' value='-76.147400000000005' />
            <semantic-value key='&quot;Tampa&quot;' value='-82.4572' />
            <semantic-value key='&quot;Washington&quot;' value='-77.0364' />
          </semantic-values>
        </column>
        <column-instance column='[city_no_state]' derivation='None' name='[none:city_no_state:nk]' pivot='key' type='nominal' />
        <column-instance column='[Mean Software Developer Salary (adjusted)]' derivation='Sum' name='[sum:Mean Software Developer Salary (adjusted):qk]' pivot='key' type='quantitative' />
        <column-instance column='[Median Home Price]' derivation='Sum' name='[sum:Median Home Price:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Number of Software Developer Jobs]' derivation='Sum' name='[sum:Number of Software Developer Jobs:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Rent avg]' derivation='Sum' name='[sum:Rent avg:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='72000' x='800' y='1000'>
              <zone h='32666' id='3' name='Scatterplot' w='72000' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='34750' id='14' name='Bar Plot' w='72000' x='800' y='64250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='30584' id='19' name='Map' w='72000' x='800' y='33666'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='264' h='98000' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='26400' x='72800' y='1000'>
              <zone h='8625' id='9' name='Scatterplot' param='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Rent avg:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='26400' x='72800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8625' id='10' name='Scatterplot' param='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Median Home Price:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='26400' x='72800' y='9625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8625' id='11' name='Scatterplot' param='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Number of Software Developer Jobs:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='26400' x='72800' y='18250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8625' id='21' name='Map' param='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Mean Software Developer Salary (adjusted):qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='26400' x='72800' y='26875'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='63500' id='20' mode='checklist' name='Map' param='[federated.0z28jet0nrandf180jljh1w88sv6].[none:city_no_state:nk]' type-v2='filter' values='relevant' w='26400' x='72800' y='35500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1150' minheight='1150' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='43' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='42' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone h='8625' id='9' name='Scatterplot' param='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Rent avg:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='26400' x='72800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8625' id='10' name='Scatterplot' param='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Median Home Price:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='26400' x='72800' y='9625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8625' id='11' name='Scatterplot' param='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Number of Software Developer Jobs:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='26400' x='72800' y='18250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='253' h='32666' id='3' is-fixed='true' name='Scatterplot' w='72000' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8625' id='21' name='Map' param='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Mean Software Developer Salary (adjusted):qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='26400' x='72800' y='26875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='63500' id='20' mode='checkdropdown' name='Map' param='[federated.0z28jet0nrandf180jljh1w88sv6].[none:city_no_state:nk]' type-v2='filter' values='relevant' w='26400' x='72800' y='35500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='237' h='30584' id='19' is-fixed='true' name='Map' w='72000' x='800' y='33666'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='270' h='34750' id='14' is-fixed='true' name='Bar Plot' w='72000' x='800' y='64250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{2A3378A7-8CCB-489C-BAC4-B5B1038D5CC6}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Bar Plot'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card size='31' type='pages' />
            <card size='69' type='filters' />
            <card size='320' type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='167'>
            <card param='[federated.0z28jet0nrandf180jljh1w88sv6].[none:city_no_state:nk]' type='filter' />
            <card pane-specification-id='2' param='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Median Home Price:qk]' type='color' />
            <card pane-specification-id='3' param='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Calculation_2940780235170861063:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0z28jet0nrandf180jljh1w88sv6].[none:City:nk]</field>
            <field>[federated.0z28jet0nrandf180jljh1w88sv6].[none:city_no_state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{958FD78D-D057-47CB-B669-F00EA23BCF3E}' />
    </window>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0z28jet0nrandf180jljh1w88sv6].[none:city_no_state:nk]' type='filter' />
            <card param='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Mean Software Developer Salary (adjusted):qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.0z28jet0nrandf180jljh1w88sv6].[rank:sum:Calculation_2940780235170861063:qk:2]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Number of Software Developer Jobs:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Number of Software Developer Jobs:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0z28jet0nrandf180jljh1w88sv6].[none:City:nk]</field>
            <field>[federated.0z28jet0nrandf180jljh1w88sv6].[none:city_no_state:nk]</field>
            <field>[federated.1yugder0nmhtj7172b4mw0ds8b7w].[none:city_no_state:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{A7C8D137-B85A-4DDD-9C5B-210393554134}' />
    </window>
    <window class='worksheet' name='Scatterplot'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card size='31' type='pages' />
            <card size='259' type='filters' />
            <card size='323' type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0z28jet0nrandf180jljh1w88sv6].[none:city_no_state:nk]' type='filter' />
            <card param='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Rent avg:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Median Home Price:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Number of Software Developer Jobs:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='7' param='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Number of Software Developer Jobs:qk]' type='size' />
            <card pane-specification-id='7' param='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Rent avg:qk]' type='color' />
            <card pane-specification-id='8' param='[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Median Home Price:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0z28jet0nrandf180jljh1w88sv6].[none:City:nk]</field>
            <field>[federated.0z28jet0nrandf180jljh1w88sv6].[none:city_no_state:nk]</field>
            <field>[federated.0z28jet0nrandf180jljh1w88sv6].[rank:sum:Calculation_2940780235170861063:ok]</field>
            <field>[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Calculation_2940780235170861063:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{E4F77BDF-6051-4D25-B9BE-A6D6BE555D82}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Bar Plot'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Map'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Scatterplot'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='vertical'>
                <node-reference>
                  <axis>[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Rent avg:qk]</axis>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
          <highlight>
            <color-one-way>
              <field>[federated.0z28jet0nrandf180jljh1w88sv6].[sum:Rent avg:qk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{FDF732CB-30BE-40CB-8F72-5EA73668350A}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Bar Plot' width='384'>
      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
      cDjo7u7G4/HQ0tJCT0+Pv80NDQ3+gb7GxkbKy8v9R1wdHR00Nzeftw26urqoqKigvb0d0zTx
      +Xw0NjZSWVnpf5/X66W8vJz6+nr/azo7O/F4PDQ1NQHQ1tZGaWkpPT09F22Hy+XC4/Gwc+dO
      TNOko6ODtrY2fD4f69evZ+7cudx9993Mnj27z7Zld3c3hYWF3HXXXdx9992MHDkSl8vlr9k0
      Tdra2nC5XLjdbtrb2/3ftz//Dp7bJtXV1bS0tPjbA2ePcLu6ujBNk5aWFioqKvzrd7vdlJWV
      /dXp4V1dXeTl5eFyufD5fNTW1jJ06FCqq6tpaGigvb2d4uJi4uPj+2w7fZmoqCgKCwsBKC4u
      xu12U1NTA5w9kAsJCWHatGmEh4cD0NnZSWVlJW63G5/Ph8fjobKy0v/dSUtLIzU1la6uLrZt
      20Z1dbX/u1FfX09lZeV/+jfb2dlJS0sLbrebDz74gMmTJ1NcXExkZCT33HMPy5Yt6/Np6joD
      CMIZwLmddVpaGgkJCRw9epTMzEwOHDhAbW0tRUVFNDU14Xa7OX78OBkZGZw8eZKioiKam5s5
      efIkNpuNYcOG8fHHH9PS0sLJkydpbW0lNTWVF154AZfLRVlZGQ0NDWRkZFxQQ25uLjfeeCMO
      h4Po6Gj27dvH5MmTOXHihL9953YiU6dOvaT2/q1KS0ux2+2MHTuW9vZ2DMMgLCyM/Px8Dh06
      xNGjR0lPT+eTTz6hq6uLY8eOYbfbcTqdfPrpp7hcLo4cOUJOTg6/+c1v6OrqorKykurqalJT
      U3nzzTcBKCoqIisri/z8fNra2qivr6egoICxY8eyYcMGOjs7OXHiBJ2dncTFxbFx40YOHz7s
      nxq3adMmbDYbO3fuZMyYMRecobS3t+P1emlsbCQ1NZX29nZ6e3uJiYnh1KlTzJo1C7vdTmho
      aJ8d/RuGQV5eHuHh4f6jwubmZrZu3cr48eNpaGjwB9Tu3bs5dOgQycnJnDhxgpqaGoqLi6mv
      ryclJYX169fT3t7OqVOnGD16NBs3bmTChAk0NDSwf/9+wsPD2bx5Mz6fj/LyckaOHMmaNWsA
      2Lt3L/Hx8Rc9gj927Bjjx4+nrKyMlJQUCgsLmThxIklJSXz66afU1NQwY8YM4uLi+mQb/S3C
      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
    </thumbnail>
    <thumbnail height='384' name='Dashboard 1' width='384'>
      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
      /PyIjo7ms88+Y+zYsahUKlpbW5k/fz7z589n+/btrF+/nttvv73DM7uqL6DTtrZx40auv/56
      LrvsMhwOB5s3b+6xzMCzbxAfH48kSURERGA2m3E6nWg0GtLS0nj99de9s/1x48bx1FNPIcuy
      d/A82fR7ajulpaWEhYVx//33I4QgMzPTe+/Eb2bOnDnccccdZGdn8+CDD/rci4qKoqioyPux
      JyQk+KxIMzMzO+1829NZ+4iIiODo0aPeb7irb699G2xrNzabrdM2oNVqffqMzuo5MzOzy29e
      CIHdbu/TfttPDbvdjl6v5+qrr2b16tXcfPPNgEc0GBYWRmBgINdeey1vvfWWt01MnDiRCRMm
      sHLlyp4PgrU1vrCwMJ599ln+8Ic/8OCDD3LLLbdwzz33kJycTEVFBQsWLGDIkCGdxgXPrOj+
      ++8nOjrap9HGxsbyxBNPeOV7V199dZd5mDBhAh988AHLli3D6XRy4MCBLsPGxsZy7Ngx5s+f
      73M9JCSEcePGsWjRIqKjo6msrORPf/oT1113HX/4wx/YvHkzNTU1PmqbbUyePJnHHnuMmJgY
      6urqfDZVOnvn9te6mjndeOONLFmyhCFDhpCdne3tXLtKt6f3OHFDd+rUqbz77rusXbvWe62n
      Mo+Ojmb//v08++yzlJaWUlBQAMCMGTN4+OGHWbJkCWq1GofD4ZXttjFv3jzuu+8+VqxYAUB6
      ejoffPABycnJHDlyxEdc0v59uqovoNO2NmrUKJ544gkOHTpEaWlpl5OPE8t9165dPProo8TF
      xVFTU8OMGTO8m7tpaWk899xzXnGD2WymoqKCKVOm+KT3yiuveEVAoaGh3pltd+n31HaioqLI
      y8vj+eefp6ysjJKSki7bjEajYfr06Rw+fJjQ0FCfe5MmTWLZsmX88pe/9Jbr4MGDufvuu4mL
      iyMzM5Mnn3yy27LqrH0YDAamTJnC3XffTUREBNnZ2Z0O5IGBgTzxxBO0tLRQUFDAiBEjumwD
      F198MU899RTJycncdtttndbztGnTuvzmc3JyvBKJCxWNRkNzczMfffSRV4yblZXFkCFDCAgI
      oK6ujlWrVvns87lcLt58800aGhowm83dq4F2h9vtFjU1NcLtdvcqvMViEU1NTT7XZFkWZWVl
      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
      LQBr167FsizfAfjw4cPH2xWSJHHTTTdN+/51113n/i+UwNasWQP4bKA+fPjwcd7CXwH48OHD
      x9sMZ0UQplQqsW3bNmzbZs2aNcTj8abbbt++nUAgwOrVq1s68KlgdHSUnTt30tHRwdq1a8+4
      bKBlWdx3330cPHiQz33uc3R2dgJw+PBhlixZ4iZUkskkjuPQ3t4+J8d94403WLhwIaFQaE72
      ZxgGL774IoZhsGnTpmn3e/jwYZYuXer+f/z4cbq7u12ZxzOBkZERhoeHAYhGoyxatOiUOHQG
      BwdRFIWenp7THoskSXR3d7sCN2cTe/bs4eGHH+aiiy7illtumfXnZ/PczsXx5go7d+6s4qJa
      uHDhrClQstksw8PDLF++fK6H1xLm+tlthrkQhDl27FjzEFAmk+HTn/40e/fuZd++fdxxxx2M
      jo42PeDhw4c5fvz4qZxLS3juuef4/Oc/z/DwMD/72c948sknZ/X5dDrN9773vVl95umnn6ZU
      KnHnnXdWGfevfe1rVbz8L730Es8999ys9j0dXn31VbLZ7Jzt78477+To0aMkk0k+//nPT7vt
      P/zDP1T9f++997rG+Uzh//7f/8u//uu/8stf/pKHH36Yj3/846d0/ocOHeLIkSOnPZbHH3+c
      l19+mbvvvps777zzrPP6/+M//iOf+tSn+MAHPjDrz872ua093muvvcYvfvGLUx36aeFLX/oS
      r776qvtz8uTJWe8jlUqxdevWMzC61jDXz+5sMFtBGFVVm68Atm3bxqZNm/jYxz4GwMc+9jGX
      knjXrl0cP36chQsXctFFFzUcyLZt20ilUqxdu5Z58+ZRLpcZHh6mr6+PLVu2cMEFF5BOp1my
      ZIn7mRMnTlTNPgXK5TL/9E//xLe+9S0ikUjVe+l0mmeffZZ4PM6mTZtQVRXHcdi2bRujo6Os
      Xr2a/v5+tm7dypYtW7j44otJJBJVMwTLsnj22WcplUpcddVVJBIJhoaG2Lp1K/Pnz2fXrl2s
      Xbu2ZX6k119/nSNHjnDppZeyePFiAA4ePOgec3h4mFAoRDweZ2BggDfeeIP+/n7Wrl2LJEn8
      5m/+putwDh48SDQa5dVXX6W/v9/t/jNNky1btpDNZpk/fz4rV65sOmseGhriv//3/46iKPz0
      pz9t6RwaodF1Evf15MmTHD9+nE2bNjE2Nsbu3bu59NJLWbhwIQADAwNs3bqVNWvWsGrVqrp9
      X3/99VxxxRVAZfaya9cu1q1bx9jYGPPnzwfgwIEDLF++nIMHD7Jw4UL3fgwMDNDX18fq1avd
      a3DkyBHa29t55ZVXkCSJa665xiU43LNnD2+++SaLFi2it7e3buV23XXXceWVVwLwt3/7txw8
      eJAVK1bU3dfx8XFM06SnpwfTNNm5c2fV7Kqjo4NwONzw3A8ePMiyZcvYtWtX1Upj69atlMtl
      jh07RqFQYMmSJRw9epTXXnuNZcuWufs/cuQI8+fPZ3BwkEKhwAUXXAA0f26BhvvxHm94eJgt
      W7a4zJELFy6kUCjQ09NDKBRiYmKCsbExVqxYAcD+/ftZuXIlyWSS7du3Y1kWV1xxBbFYrO55
      v/TSS1EUhWeeeQbHcXjHO95RN0vu6+vj4x//eNVrYj+5XI433niDSy65xLUZjZ6Brq4uNm7c
      CMD4+DhQ4cwfGxvj6quvdmviG90T0zTrxjc+Pu4KLO3fv5/LL7+84TMr0Mqzeyawc+dO7rrr
      Lh588MEqqoedO3fye7/3e+4Yd+/ezapVq3j00Ufp7e1tvgJYsWIFTz75JC+++CKWZbkXYfv2
      7e5s95//+Z8bxqE2b97M/v37sW2bv/7rv3Znn9/+9re54447+OUvfwnA3/zN37gz6WeffZYX
      Xnih4Vh2797NunXr6ox/Pp/njjvuQJZljh07xl/+5V/iOA4PPvggTz31FJZl8d3vfhfLsjh0
      6BDpdJqDBw/WkSjdddddHD16FEmS+LM/+zNSqRTJZJLR0VEGBwc5ePAg5XJ5xpsA8Mgjj/Bv
      //ZvxONxvvrVr/L6668D8L/+1/9yt/n3f/939uzZw549e/jKV77inv+ePXsA+O53v+vOIr74
      xS/y7W9/m2AwyL333suePXswTZPPfvaz7Nixg3K5zJ133tnQ+wtcd9113HvvvTz99NNceOGF
      LZ1HIzS7Trfffjs7duzAsiw++tGPsnnzZkKhEF/84heBypfwf/7P/0lvby/f+973ms4wDcNg
      165dvPrqq6xYsYLBwUEeeeQR9/1vfOMbWJbFiy++yI9//GOgQmn7X/7Lf0GWZV544QW2bNkC
      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
      wcHBHDp0iLq6OubMmePw7AcYDwOFhIQgkUiYPn06u3fvdmh2cqa/b98+HnzwQVatWsUf/vAH
      1q1b59YOsV8r9VtWCf+HznsGZfYxlNnHAZCnjECecruFvsHDA23H/6Y2ziQ728HVOSDMvffe
      a1PP5LokIyNDCAgzevToa3MGt2TJEq5cuULPnj0tAoeo1WrefPNN6uvraW1tJS4ujkWLFlk4
      JsrLy+OFF15g9erVVnlrNBrq6+tpaWlx2xXEmjVrAOPoc/z48XYPbG3atAmFQoGXl5ewhdXR
      Huv169db6G/ZssWh/po1a4RR0pkzZ3jggQcsXCFcvXqVTz75hPj4eA4ePIhCoeA3v/mN3U7A
      dODooYceYteuXRw9epSwsDCHx/c3bdrEkiVL2Lp1K+PHj2fjxo12Fzm1Wi0nTpygsrKSkSNH
      kpCQ4DQegFQqFfJTKBTs2rXLogM4deoUy5YtE57T2rVr7ZbVFqmpqZSXlzN16lTCw8NtPsfE
      xESmTp3K9u3bWbx4MevWrXOrA1iyZInTffLm1NTUsHz5cmENoPP5js6Y/Ow0NTWRmZlJa2ur
      y/cy4e3tzbx589BqtezatYu+ffs6NFPl5ORQXFzM1KlT0Wq1Tk+YO9OXy+WcOnUKhUJBQUGB
      W5sPfs2oyy5byLrmOuEz75gbu4X2Rw0Ik5ubyzvvvCPY1r/55hueffZZ4Ycjk8n43e9+x4UL
      FygvL7d5cvDy5cu8/vrrZGVl8frrrzN16lQL005jYyO9e/dGoVDQr18/vL29mTRpEmFhYRbu
      Bjojl8tZuHAhn376KaWlpXb1ZDIZixcvZvXq1SxdutTpi+yu/oABA4RF5l27dln5wcnNzeXh
      hx/m5MmTjBw5kqtXr1JcXGzzBDSAr68v1dXVwgOMj4+nqanJYQcgk8mEmZCznSeenp7U1tbi
      4+NDaWkpmZmZDhtSqVRKVFSUMCPR6XTcd999FjozZ85k7dq1yOVylEqlWw0zGBdoH330Ub76
      6iuuXr1qUyciIoLg4GDmzJnD5cuX3b7H8uXLSU1NFV6Y48ePO9RPTEy0sIfb24xgYtCgQSQm
      JnL+/HlkMpndPdmOMD+o5Uq8g7/85S8oFApkMhk1NTUO94m7oj979mzOnz/PSy+9xDfffOPW
      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
      uHLlyqb2Nf0XGzuXeeaINEwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Map' width='384'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Scatterplot' width='384'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
